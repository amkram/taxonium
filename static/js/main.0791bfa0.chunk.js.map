{"version":3,"sources":["components/Spinner.jsx","Deck.jsx","components/SearchItem.jsx","components/SearchPanel.jsx","components/AboutOverlay.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["Spinner","isShown","progress","className","coarse_and_fine_configs","config","node_data","precision","line_mode","coarse","data","reduceOverPlotting","visible","id","mini","replace","lineWidthScale","pickable","getRadius","includes","make_minimap_version","nodeIds","included_points","filter","node","Math","abs","x","parents","y","rounded_x","round","rounded_y","dummy_polygons","contour","zipcode","population","area","rgb_cache","toRGB","string","result","amino_acids","A","R","N","D","C","Q","E","G","H","I","L","K","M","F","P","T","W","Y","V","X","O","Z","undefined","split","reverse","join","hash","length","i","charCodeAt","rgb","value","toRGB_uncached","toRGBCSS","output","getXval","viewState","zoom","Deck","colourBy","setSelectedNode","scatterIds","search_configs_initial","zoomToSearch","useState","ids","top","bottom","textInfo","setTextInfo","hoverInfo","setHoverInfo","target","setViewState","xZoom","MMatrix","useMemo","deckRef","useRef","onViewStateChange","useCallback","viewId","oldViewState","current","viewports","main_vp","nw","unproject","se","width","height","needs_update","mouseDownIsMinimap","setMouseDownIsMinimap","onClickOrMouseMove","event","buttons","_reactName","pickInfo","pickObject","nativeEvent","offsetX","offsetY","radius","viewport","object","newViewState","coordinate","poly_layer","PolygonLayer","stroked","opacity","filled","wireframe","getPolygon","d","getFillColor","getLineColor","getLineWidth","lineWidthUnits","getResidue","cache","console","log","gene","position","cur_node","path","return_val","push","interesting_mutations","mutations","mutation","mutation_mapping","final_res","forEach","scatterplot_config","radiusUnits","onHover","info","getPosition","variable","lineage_mapping","lineages","country_mapping","countries","residue","scatter_configs","scatter_configs2","map","modelMatrix","radiusMaxPixels","scatter_layers","ScatterplotLayer","search_configs","concat","search_configs2","search_layers","line_layer_2_config","getWidth","getTargetPosition","getSourcePosition","getColor","colourLines","line_layer_3_config","line_configs","apply","line_configs2","line_layers","LineLayer","cur_top","cur_bot","new_top","new_bot","textIds","text_config","getText","names","getAngle","billboard","getTextAnchor","getAlignmentBaseline","text_layers","TextLayer","getSize","pos_layer_mini","color","radiusMinPixels","layers","window","deck","views","OrthographicView","controller","borderWidth","hoverStuff","aa","aa_col","lineage","country","date","date_mapping","dates","style","zIndex","pointerEvents","left","orig_res","sort","spinnerShown","zoomIncrement","increment","newViewState2","useEffect","index","original_index","onClick","onPointerMove","onPointerDown","pickingRadius","onAfterRender","ref","layerFilter","layer","startsWith","right","SearchItem","category","enabled","setThis","removeItem","searchColors","numResultsHere","zoomToMe","aa_pos","aa_final","aa_gene","all_genes","min_tips","thecolor","name","type","outline","outlineOffset","checked","onChange","debounceTimeout","placeholder","parseInt","Intl","NumberFormat","format","SearchPanel","searchItems","setSearchItems","setColourBy","selectedNode","numSearchResults","totalSeqs","setZoomToSearch","selected_muts","these_muts","Object","fromEntries","this_mut","entries","item","mapping","random","genbanks","rel","href","AboutOverlay","setEnabled","protobuf","require","parse","defaults","keepCase","App","setSearchItemsBasic","setColourByWithCheck","status","nodeData","setNodeData","aboutEnabled","setAboutEnabled","load","then","root","axios","get","responseType","onDownloadProgress","progressEvent","percentCompleted","floor","loaded","response","buffer","NodeList","lookupType","message","decode","Uint8Array","toObject","Array","keys","Set","mutation_array","rest","add","from","configs","counter","filter_function","nd","lowercase_query","toLowerCase","trim","mm","subset","num_tips","num_results","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0791bfa0.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Spinner.css\";\n\nfunction Spinner({ isShown, progress }) {\n  if (isShown) {\n    return (\n      <div className=\"w-full h-full fixed bg-white text-center\">\n        {\" \"}\n        <div className=\"loader z-50\">Loading...</div>\n        <div className=\"text-black\">Loading {progress}%</div>\n      </div>\n    );\n  } else {\n    return <></>;\n  }\n}\n\nexport default Spinner;\n","/// app.js\nimport React, {\n  useState,\n  useMemo,\n  useCallback,\n  useRef,\n  useEffect,\n} from \"react\";\nimport DeckGL from \"@deck.gl/react\";\nimport {\n  LineLayer,\n  ScatterplotLayer,\n  PolygonLayer,\n  TextLayer,\n} from \"@deck.gl/layers\";\nimport { OrthographicView } from \"@deck.gl/core\";\nimport Spinner from \"./components/Spinner\";\nimport { BiZoomIn, BiZoomOut } from \"react-icons/bi\";\n\nconst zoomThreshold = 8;\nfunction coarse_and_fine_configs(config, node_data, precision, line_mode) {\n  const coarse = {\n    ...config,\n    data: reduceOverPlotting(config.data, node_data, precision, line_mode),\n    visible: true,\n    id: config.id + \"_coarse\",\n  };\n\n  const mini = make_minimap_version(coarse);\n  const fine = { ...config, visible: true, id: config.id + \"_fine\" };\n  return [coarse, fine, mini];\n}\n\nfunction make_minimap_version(config) {\n  return {\n    ...config,\n    id: config.id.replace(\"main\", \"mini\"),\n    lineWidthScale: 1,\n    pickable: false,\n    getRadius: config.id.includes(\"search\")\n      ? config.getRadius * 0.5\n      : config.getRadius,\n  };\n}\n\nfunction reduceOverPlotting(nodeIds, node_data, precision, line_mode) {\n  const included_points = {};\n\n  const filtered = nodeIds.filter((node) => {\n    if (line_mode) {\n      if (\n        (Math.abs(node_data.x[node] - node_data.x[node_data.parents[node]]) >\n          1) |\n        (Math.abs(node_data.y[node] - node_data.y[node_data.parents[node]]) >\n          0.5)\n      ) {\n        return true;\n      }\n    }\n\n    const rounded_x = Math.round(node_data.x[node] * precision) / precision;\n    const rounded_y = Math.round(node_data.y[node] * precision) / precision;\n    if (included_points[rounded_x]) {\n      if (included_points[rounded_x][rounded_y]) {\n        return false;\n      } else {\n        included_points[rounded_x][rounded_y] = 1;\n        return true;\n      }\n    } else {\n      included_points[rounded_x] = { [rounded_y]: 1 };\n      return true;\n    }\n  });\n\n  return filtered;\n}\nconst dummy_polygons = [\n  {\n    contour: [\n      [-100, -100],\n      [-100, 100],\n      [100, 100],\n      [100, -100],\n    ],\n    zipcode: 94107,\n    population: 26599,\n    area: 6.11,\n  },\n];\nconst rgb_cache = {};\n\nfunction toRGB(string) {\n  if (rgb_cache[string]) {\n    return rgb_cache[string];\n  } else {\n    const result = toRGB_uncached(string);\n    rgb_cache[string] = result;\n    return result;\n  }\n}\n\nfunction toRGB_uncached(string) {\n  const amino_acids = {\n    A: [230, 25, 75],\n    R: [60, 180, 75],\n    N: [255, 225, 25],\n    D: [67, 99, 216],\n    C: [245, 130, 49],\n    Q: [70, 240, 240],\n    E: [145, 30, 180],\n\n    G: [240, 50, 230],\n    H: [188, 246, 12],\n    I: [250, 190, 190],\n\n    L: [230, 0, 255],\n    K: [0, 128, 128],\n    M: [154, 99, 36],\n    F: [255, 250, 200],\n    P: [128, 0, 0],\n    T: [170, 255, 195],\n    W: [128, 128, 0],\n\n    Y: [0, 0, 117],\n    V: [255, 216, 177],\n    X: [128, 128, 128],\n    O: [255, 255, 255],\n    Z: [0, 0, 0],\n  };\n\n  if (amino_acids[string]) {\n    return amino_acids[string];\n  }\n\n  if (string === undefined) {\n    return [200, 200, 200];\n  }\n  if (string === \"unknown\") {\n    return [200, 200, 200];\n  }\n  if (string === \"USA\") {\n    return [95, 158, 245]; //This is just because the default is ugly\n  }\n  if (string === \"England\") {\n    return [214, 58, 15]; // UK all brick\n  }\n  if (string === \"Scotland\") {\n    return [255, 130, 82]; // UK all brick\n  }\n  if (string === \"Wales\") {\n    return [148, 49, 22]; // UK all brick\n  }\n  if (string === \"Northern Ireland\") {\n    return [140, 42, 15]; // UK all brick\n  }\n  if (string === \"France\") {\n    return [140, 28, 120]; // diff to UK\n  }\n  if (string === \"Germany\") {\n    return [106, 140, 28]; // diff to UK\n  }\n  if (string === \"India\") {\n    return [61, 173, 166]; // diff to UK\n  }\n  if (string === \"Denmark\") {\n    return [24, 112, 32]; // diff to UK\n  }\n\n  string = string.split(\"\").reverse().join(\"\");\n  var hash = 0;\n  if (string.length === 0) return hash;\n  for (var i = 0; i < string.length; i++) {\n    hash = string.charCodeAt(i) + ((hash << 5) - hash);\n    hash = hash & hash;\n  }\n  var rgb = [0, 0, 0];\n  for (i = 0; i < 3; i++) {\n    var value = (hash >> (i * 8)) & 255;\n    rgb[i] = value;\n  }\n  if (rgb[0] + rgb[1] + rgb[2] < 150 || rgb[0] + rgb[1] + rgb[2] > 500) {\n    return toRGB(string + \"_\");\n  }\n  return rgb;\n}\nfunction toRGBCSS(string) {\n  const output = toRGB(string);\n  return `rgb(${output[0]},${output[1]},${output[2]})`;\n}\n\nconst getXval = (viewState) => 7 / 2 ** (viewState.zoom - 5.6);\n\nfunction Deck({\n  data,\n  colourBy,\n  progress,\n  setSelectedNode,\n  scatterIds,\n  search_configs_initial,\n  zoomToSearch,\n}) {\n  const [textInfo, setTextInfo] = useState({ ids: [], top: 0, bottom: 0 });\n\n  const node_data = data.node_data;\n\n  const [hoverInfo, setHoverInfo] = useState();\n\n  const [viewState, setViewState] = useState({\n    zoom: 4.7,\n    target: [6, 13],\n  });\n  const [xZoom, setXZoom] = useState(0);\n  const MMatrix = useMemo(\n    () => [\n      1 / 2 ** (viewState.zoom - xZoom - 5.6),\n      0,\n      0,\n      0,\n      0,\n      1,\n      0,\n      0,\n      0,\n      0,\n      1,\n      0,\n      0,\n      0,\n      0,\n      1,\n    ],\n    [viewState.zoom, xZoom]\n  );\n  const deckRef = useRef(null);\n\n  const onViewStateChange = useCallback(\n    ({ viewId, viewState, oldViewState }) => {\n      const zoom_in_x = false;\n      if (zoom_in_x && oldViewState) {\n        if (viewState.zoom !== oldViewState.zoom) {\n          const diff = viewState.zoom - oldViewState.zoom;\n          const newxzoom = xZoom + diff;\n          console.log(\n            \"change\",\n            viewState.zoom,\n            oldViewState.zoom,\n            diff,\n            newxzoom\n          );\n          setXZoom(newxzoom);\n          viewState.zoom = oldViewState.zoom;\n        }\n      }\n      if (viewId === \"minimap\") {\n        return;\n      }\n\n      viewState[\"minimap\"] = { zoom: 3.0, target: [5, 13] };\n      if (zoom_in_x) {\n        if (oldViewState) {\n          viewState.target[1] = oldViewState.target[1];\n        }\n      } else {\n        viewState.target[0] = getXval(viewState);\n      }\n      if (deckRef.current.viewports.length) {\n        const main_vp = deckRef.current.viewports[0];\n        const nw = main_vp.unproject([0, 0, 0]);\n        const se = main_vp.unproject([main_vp.width, main_vp.height, 0]);\n        se[0] = se[0] * 2 ** (viewState.zoom - 6);\n        nw[0] = nw[0] * 2 ** (viewState.zoom - 6);\n        viewState = { ...viewState, nw: nw, se: se, needs_update: false };\n        nw[0] = -500;\n        se[0] = 500;\n\n        setViewState(viewState);\n      }\n    },\n    [deckRef, xZoom]\n  );\n\n  const [mouseDownIsMinimap, setMouseDownIsMinimap] = useState(false);\n\n  const onClickOrMouseMove = useCallback(\n    (event) => {\n      if (event.buttons === 0 && event._reactName === \"onPointerMove\") {\n        return false;\n      }\n\n      const pickInfo = deckRef.current.pickObject({\n        x: event.nativeEvent.offsetX,\n        y: event.nativeEvent.offsetY,\n        radius: 10,\n      });\n\n      if (event._reactName === \"onPointerDown\") {\n        if (pickInfo && pickInfo.viewport.id === \"minimap\") {\n          setMouseDownIsMinimap(true);\n        } else {\n          setMouseDownIsMinimap(false);\n        }\n      }\n      if (\n        pickInfo &&\n        pickInfo.viewport.id === \"main\" &&\n        event._reactName === \"onClick\"\n      ) {\n        setSelectedNode(pickInfo.object);\n      }\n\n      if (!pickInfo && event._reactName === \"onClick\") {\n        setSelectedNode(null);\n      }\n\n      if (\n        pickInfo &&\n        pickInfo.viewport.id === \"minimap\" &&\n        mouseDownIsMinimap\n      ) {\n        const newViewState = {\n          ...viewState,\n          target: [getXval(viewState), pickInfo.coordinate[1]],\n          needs_update: true,\n        };\n        onViewStateChange({ viewState: newViewState, oldViewState: viewState });\n      }\n    },\n    [viewState, mouseDownIsMinimap, setSelectedNode, onViewStateChange]\n  );\n\n  const poly_layer = useMemo(\n    () =>\n      new PolygonLayer({\n        //This dummy layer provides a gray background, but more importantly, it means that a picking event is always generated on clicks, allowing us to make pressing on the minimap change the view\n        id: \"mini-poly-layer\",\n        data: dummy_polygons,\n        pickable: true,\n        stroked: true,\n        opacity: 0.5,\n        filled: true,\n        wireframe: true,\n        getPolygon: (d) => d.contour,\n\n        getFillColor: (d) => [240, 240, 240],\n        getLineColor: [80, 80, 80],\n        getLineWidth: 1,\n        lineWidthUnits: \"pixels\",\n      }),\n    []\n  );\n\n  const getResidue = useMemo(() => {\n    let cache = {};\n    console.log(colourBy);\n    const the_function = (node, gene, position) => {\n      let residue = null;\n      let cur_node = node;\n\n      let path = [];\n      while (residue == null) {\n        let return_val = null;\n        path.push(cur_node);\n        let interesting_mutations;\n        if (cache[cur_node]) {\n          return_val = cache[cur_node];\n        } else {\n          interesting_mutations =\n            node_data.mutations[cur_node].mutation &&\n            node_data.mutations[cur_node].mutation.filter(\n              (x) =>\n                data.mutation_mapping[x].gene === gene &&\n                data.mutation_mapping[x].position === position\n            );\n\n          if (interesting_mutations && interesting_mutations.length === 1) {\n            console.log(residue);\n\n            return_val =\n              data.mutation_mapping[interesting_mutations[0]].final_res;\n          }\n          if (node_data.parents[cur_node] === cur_node && return_val == null) {\n            return_val = \"X\";\n          }\n        }\n        if (return_val) {\n          path.forEach((x) => {\n            cache[x] = return_val;\n          });\n          return return_val;\n        }\n        cur_node = node_data.parents[cur_node];\n      }\n    };\n    return the_function;\n  }, [node_data, data, colourBy]);\n\n  const scatterplot_config = useMemo(() => {\n    return {\n      data: scatterIds.filter(() => true),\n      visible: true,\n      opacity: 0.6,\n      getRadius: 3,\n      radiusUnits: \"pixels\",\n\n      id: \"main-scatter\",\n\n      pickable: true,\n      getLineColor: [100, 100, 100],\n\n      lineWidthUnits: \"pixels\",\n      lineWidthScale: 1,\n\n      onHover: (info) => setHoverInfo(info),\n      getPosition: (d) => {\n        return [node_data.x[d], node_data.y[d]];\n      },\n      getFillColor: (d) => {\n        if (colourBy.variable === \"lineage\") {\n          return toRGB(data.lineage_mapping[node_data.lineages[d]]);\n        } else if (colourBy.variable === \"country\") {\n          return toRGB(data.country_mapping[node_data.countries[d]]);\n        } else if (colourBy.variable === \"aa\") {\n          return toRGB(getResidue(d, colourBy.gene, colourBy.residue));\n        } else {\n          return [200, 200, 200];\n        }\n      },\n    };\n  }, [scatterIds, node_data, data, colourBy, getResidue]);\n\n  const scatter_configs = useMemo(\n    () => coarse_and_fine_configs(scatterplot_config, node_data, 100),\n    [scatterplot_config, node_data]\n  );\n  const scatter_configs2 = useMemo(\n    () =>\n      scatter_configs.map((x) => ({\n        ...x,\n        modelMatrix: x.id.includes(\"mini\") ? undefined : MMatrix,\n        stroked: x.id.includes(\"mini\") ? undefined : viewState.zoom > 15,\n        radiusMaxPixels: x.id.includes(\"mini\")\n          ? 2\n          : viewState.zoom > 15\n          ? viewState.zoom / 5\n          : 3,\n      })),\n    [scatter_configs, viewState, MMatrix]\n  );\n  const scatter_layers = useMemo(\n    () => scatter_configs2.map((x) => new ScatterplotLayer(x)),\n    [scatter_configs2]\n  );\n\n  const search_configs = useMemo(\n    () =>\n      [].concat(\n        ...search_configs_initial.map((x) =>\n          coarse_and_fine_configs(x, node_data, 100)\n        )\n      ),\n    [search_configs_initial, node_data]\n  );\n\n  const search_configs2 = useMemo(\n    () =>\n      search_configs.map((x) => ({\n        ...x,\n        modelMatrix: x.id.includes(\"mini\") ? undefined : MMatrix,\n      })),\n    [search_configs, MMatrix]\n  );\n  const search_layers = useMemo(\n    () => search_configs2.map((x) => new ScatterplotLayer(x)),\n    [search_configs2]\n  );\n\n  const line_layer_2_config = useMemo(\n    () => ({\n      id: \"main-line\",\n      data: node_data.ids.filter((x) => true),\n\n      getWidth: 1,\n      pickable: true,\n      onHover: (info) => setHoverInfo(info),\n      getTargetPosition: (d) => [\n        node_data.x[node_data.parents[d]],\n        node_data.y[d],\n      ],\n      getSourcePosition: (d) => [node_data.x[d], node_data.y[d]],\n      getColor:\n        colourBy.variable === \"aa\" && colourBy.colourLines\n          ? (d) => toRGB(getResidue(d, colourBy.gene, colourBy.residue))\n          : [150, 150, 150],\n    }),\n    [node_data, colourBy, getResidue]\n  );\n\n  const line_layer_3_config = useMemo(\n    () => ({\n      id: \"main-line-2\",\n      data: node_data.ids.filter((x) => true),\n      pickable: false,\n      getWidth: 1,\n      getTargetPosition: (d) => [\n        node_data.x[node_data.parents[d]],\n        node_data.y[node_data.parents[d]],\n      ],\n      getSourcePosition: (d) => [\n        node_data.x[node_data.parents[d]],\n        node_data.y[d],\n      ],\n      getColor:\n        colourBy.variable === \"aa\" && colourBy.colourLines\n          ? (d) => toRGB(getResidue(d, colourBy.gene, colourBy.residue))\n          : [150, 150, 150],\n    }),\n    [node_data, colourBy, getResidue]\n  );\n\n  const line_configs = useMemo(\n    () =>\n      [].concat.apply(\n        [],\n        [line_layer_2_config, line_layer_3_config].map((x) =>\n          coarse_and_fine_configs(x, node_data, 100, true)\n        )\n      ),\n    [line_layer_2_config, line_layer_3_config, node_data]\n  );\n\n  const line_configs2 = useMemo(\n    () =>\n      line_configs.map((x) => ({\n        ...x,\n        modelMatrix: x.id.includes(\"mini\") ? undefined : MMatrix,\n      })),\n    [line_configs, MMatrix]\n  );\n  const line_layers = useMemo(\n    () => line_configs2.map((x) => new LineLayer(x)),\n    [line_configs2]\n  );\n\n  if (viewState.zoom > 17 && viewState.needs_update !== true) {\n    /*\n    Creating a text layer with every node takes a *long* time, even if it's not visible until zoomed, so we don't do that.\n\n    Instead, this section of code runs every render. It checks whether the zoom is sufficient to start thinking about text. If not, it does nothing.\n\n    If text will be displayed soon, we check whether the area of text that we have precomputed contains the current viewport. If so, we do nothing.\n\n    If not we set textIds to the ids within a certain range (9* the height) of the current viewport. This will be used later on to make a layer by the memoised function.\n\n    We also record the location for which we did the precomputation.\n    */\n    if (\n      (viewState.nw[1] > textInfo.top) &\n      (viewState.se[1] < textInfo.bottom)\n    ) {\n      // console.log(\"still within\", viewState.nw[1] , textInfo.top)\n    } else {\n      const cur_top = viewState.nw[1];\n      const cur_bot = viewState.se[1];\n      const height = cur_bot - cur_top;\n      const new_top = cur_top - height * 4;\n      const new_bot = cur_bot + height * 4;\n      const textIds = scatterIds.filter(\n        (x) => (node_data.y[x] > new_top) & (node_data.y[x] < new_bot)\n      );\n      //console.log(\"recalculating text\")\n      setTextInfo({ top: new_top, bottom: new_bot, ids: textIds });\n    }\n  }\n\n  const text_config = useMemo(\n    () => ({\n      id: \"main-text-layer\",\n      data: textInfo.ids,\n      getPosition: (d) => [node_data.x[d] + 0.3, node_data.y[d]],\n      getText: (d) => node_data.names[d],\n      getColor: [180, 180, 180],\n      getAngle: 0,\n\n      billboard: true,\n      getTextAnchor: \"start\",\n      getAlignmentBaseline: \"center\",\n    }),\n    [node_data, textInfo]\n  );\n\n  const text_layers = useMemo(() => {\n    if (true) {\n      return [\n        new TextLayer({\n          ...text_config,\n          visible: viewState.zoom > 18.5,\n          getSize: viewState.zoom > 19 ? 12 : 9.5,\n          modelMatrix: MMatrix,\n        }),\n      ];\n    } else {\n      return [];\n    }\n  }, [text_config, MMatrix, viewState]);\n\n  const pos_layer_mini = useMemo(() => {\n    let data;\n    if (viewState.nw !== undefined) {\n      data = [\n        {\n          contour: [\n            [-100, -100],\n            [100, -100],\n            [100, viewState.nw[1]],\n            [-100, viewState.nw[1]],\n          ],\n          color: [100, 100, 100],\n        },\n        {\n          contour: [\n            [-100, viewState.nw[1]],\n            [100, viewState.nw[1]],\n            [100, viewState.se[1]],\n            [-100, viewState.se[1]],\n          ],\n          color: [255, 255, 255],\n        },\n\n        {\n          contour: [\n            [-100, viewState.se[1]],\n            [100, viewState.se[1]],\n            [100, 300],\n            [-100, 300],\n          ],\n          color: [150, 150, 150],\n        },\n      ];\n    } else {\n      data = [];\n    }\n\n    return new PolygonLayer({\n      id: \"mini-pos\",\n      data: data,\n      opacity: 0.05,\n      radiusMinPixels: 4,\n      radiusMaxPixels: 4,\n      getRadius: 4,\n      getLineWidth: 0.1,\n      getPolygon: (d) => {\n        return d.contour;\n      },\n      getFillColor: (d) => d.color,\n    });\n  }, [viewState]);\n\n  const layers = useMemo(\n    () => [\n      poly_layer,\n      ...text_layers,\n      ...line_layers,\n      // text_layer,\n\n      ...scatter_layers,\n\n      ...search_layers,\n\n      pos_layer_mini,\n    ],\n    [\n      poly_layer,\n      text_layers,\n\n      scatter_layers,\n      line_layers,\n\n      pos_layer_mini,\n      search_layers,\n      // text_layer\n    ]\n  );\n\n  window.deck = deckRef;\n\n  const views = useMemo(\n    () => [\n      new OrthographicView({ id: \"main\", controller: true }),\n      new OrthographicView({\n        id: \"minimap\",\n        x: \"79%\",\n        y: \"1%\",\n        width: \"20%\",\n        height: \"35%\",\n        borderWidth: \"1px\",\n        controller: true,\n      }),\n    ],\n    []\n  );\n\n  const hoverStuff = useMemo(() => {\n    if (hoverInfo && hoverInfo.object) {\n      const lineage =\n        data.lineage_mapping[node_data.lineages[hoverInfo.object]];\n      const country =\n        data.country_mapping[node_data.countries[hoverInfo.object]];\n      const date = data.date_mapping[node_data.dates[hoverInfo.object]];\n      let aa, aa_col;\n      if (colourBy.variable === \"aa\") {\n        aa = getResidue(hoverInfo.object, colourBy.gene, colourBy.residue);\n        aa_col = toRGBCSS(aa);\n      }\n      return (\n        <div\n          className=\"bg-gray-100 p-3 opacity-90 text-sm\"\n          style={{\n            position: \"absolute\",\n            zIndex: 1,\n            pointerEvents: \"none\",\n            left: hoverInfo.x,\n            top: hoverInfo.y,\n          }}\n        >\n          <h2 className=\"font-bold\">{node_data.names[hoverInfo.object]}</h2>\n          {aa && (\n            <div className=\"bg-white p-1 inline-block\">\n              {colourBy.gene}:{colourBy.residue}\n              <span\n                className=\"font-bold\"\n                style={{\n                  color: aa_col,\n                }}\n              >\n                {aa}\n              </span>\n            </div>\n          )}\n          <div\n            style={{\n              color:\n                colourBy.variable === \"lineage\" ? toRGBCSS(lineage) : \"inherit\",\n            }}\n          >\n            {lineage}\n          </div>\n\n          <div\n            style={{\n              color:\n                colourBy.variable === \"country\" ? toRGBCSS(country) : \"inherit\",\n            }}\n          >\n            {country}\n          </div>\n          {date}\n\n          <div className=\"text-xs\">\n            {\n              node_data.mutations[hoverInfo.object] &&\n                node_data.mutations[hoverInfo.object].mutation &&\n                node_data.mutations[hoverInfo.object].mutation\n                  .map((y) => {\n                    const x = data.mutation_mapping[y];\n\n                    return x.gene + \":\" + x.orig_res + x.position + x.final_res;\n                  })\n                  .sort()\n                  .join(\", \") //TODO assign the top thing to a constant and use it again\n            }\n          </div>\n        </div>\n      );\n    }\n  }, [data, node_data, hoverInfo, colourBy, getResidue]);\n  const spinnerShown = useMemo(() => node_data.ids.length === 0, [node_data]);\n\n  const zoomIncrement = useCallback(\n    (increment) => {\n      const newViewState = {\n        ...viewState,\n        zoom: viewState.zoom + increment,\n\n        needs_update: true,\n      };\n      const newViewState2 = {\n        ...newViewState,\n        target: [getXval(newViewState), newViewState.target[1]],\n      };\n\n      onViewStateChange({ viewState: newViewState2, oldViewState: viewState });\n    },\n    [viewState, onViewStateChange]\n  );\n\n  useEffect(() => {\n    if (zoomToSearch.index !== null) {\n      console.log(zoomToSearch);\n      const newViewState = {\n        ...viewState,\n        zoom: 19,\n\n        needs_update: true,\n      };\n      const newViewState2 = {\n        ...newViewState,\n        target: [\n          getXval(newViewState),\n          node_data.y[\n            search_configs_initial.filter(\n              (x) => x.original_index === zoomToSearch.index\n            )[0].data[0]\n          ],\n        ],\n      };\n\n      setViewState(newViewState2);\n    }\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [zoomToSearch]);\n\n  return (\n    <div\n      className=\"w-full h-full relative\"\n      onClick={onClickOrMouseMove}\n      onPointerMove={onClickOrMouseMove}\n      onPointerDown={onClickOrMouseMove}\n    >\n      {\" \"}\n      <DeckGL\n        pickingRadius={10}\n        onAfterRender={() => {\n          if (viewState.nw === undefined || viewState.needs_update) {\n            onViewStateChange({ viewState });\n          }\n        }}\n        ref={deckRef}\n        views={views}\n        viewState={viewState}\n        onViewStateChange={onViewStateChange}\n        layerFilter={useCallback(\n          ({ layer, viewport }) => {\n            const first_bit =\n              (layer.id.startsWith(\"main\") && viewport.id === \"main\") ||\n              (layer.id.startsWith(\"mini\") && viewport.id === \"minimap\");\n            const second_bit =\n              layer.id.includes(\"mini\") |\n              ((viewState.zoom < zoomThreshold) & !layer.id.includes(\"fine\")) |\n              ((viewState.zoom > zoomThreshold) & !layer.id.includes(\"coarse\"));\n\n            return first_bit & second_bit;\n          },\n          [viewState.zoom]\n        )}\n        controller={true}\n        layers={layers}\n      >\n        {hoverStuff}\n        <div style={{ position: \"absolute\", right: \"0.2em\", bottom: \"0.2em\" }}>\n          <button\n            className=\" w-12 h-10 bg-gray-100  p-1 rounded border-gray-300 text-gray-700 opacity-60 hover:opacity-100\"\n            onClick={() => {\n              zoomIncrement(0.6);\n            }}\n          >\n            <BiZoomIn className=\"mx-auto  w-5 h-5 \" />\n          </button>\n          <button\n            className=\" w-12 h-10 bg-gray-100 ml-1 p-1 rounded border-gray-300 text-gray-700  opacity-60  hover:opacity-100\"\n            onClick={() => {\n              zoomIncrement(-0.6);\n            }}\n          >\n            <BiZoomOut className=\"mx-auto w-5 h-5 \" />\n          </button>\n        </div>\n      </DeckGL>\n      {spinnerShown && <Spinner isShown={true} progress={progress} />}\n    </div>\n  );\n}\n\nexport default Deck;\n","import React from \"react\";\nimport { BsTrash } from \"react-icons/bs\";\nimport { DebounceInput } from \"react-debounce-input\";\nimport { BiZoomIn } from \"react-icons/bi\";\n\nfunction numberWithCommas(x) {\n  const internationalNumberFormat = new Intl.NumberFormat(\"en-US\");\n  return internationalNumberFormat.format(x);\n}\n\nfunction SearchItem({\n  id,\n  category,\n  enabled,\n  value,\n  setThis,\n  removeItem,\n  index,\n  searchColors,\n  numResultsHere,\n  zoomToMe,\n  aa_pos,\n  aa_final,\n  aa_gene,\n  all_genes,\n  min_tips,\n}) {\n  const explanations = {\n    name: \"Enter a sequence name like QEUH-13ADA01\",\n    lineage:\n      \"Enter a PANGO lineage like B.1.1.7. Note that sub-lineages will not be found by this method.\",\n    country: \"Enter a country like 'India' \",\n    mutation:\n      \"Enter an amino acid mutation like a mutation in gene S at position 681 to R. Note that this will identify the internal node at which the mutation occurred, rather than all the leaf nodes with the mutation.\",\n  };\n\n  const thecolor = searchColors[index % searchColors.length];\n  //console.log(\"key\", id);\n  return (\n    <div className=\"border-gray-100 border-b mb-3 pb-3\">\n      <input\n        name=\"isGoing\"\n        type=\"checkbox\"\n        style={{\n          outline:\n            enabled && value.length > 0\n              ? `1px solid rgb(${thecolor[0]},${thecolor[1]},${thecolor[2]})`\n              : \"0px\",\n          outlineOffset: \"2px\",\n        }}\n        className=\"w-3 h-3 m-3\"\n        checked={enabled}\n        onChange={(event) => setThis({ enabled: !enabled })}\n      />\n      <select\n        className=\" w-36 border py-2 px-1 text-grey-darkest text-sm h-10\"\n        value={category}\n        onChange={(event) => setThis({ category: event.target.value })}\n      >\n        <option value=\"name\">Sequence name</option>\n        <option value=\"lineage\">Lineage</option>\n        <option value=\"country\">Country</option>\n        <option value=\"mutation\">AA mutation</option>\n      </select>\n      &nbsp;\n      {category === \"mutation\" && (\n        <div\n          className=\"ml-2 \n       p-2 m-2 ml-8  text-gray-700\"\n        >\n          {\" \"}\n          <label className=\"text-sm\">Gene:</label>\n          <select\n            className=\"border py-1 px-1 text-grey-darkest text-sm h-7 w-16 m-3 my-1\"\n            value={aa_gene}\n            onChange={(event) => setThis({ aa_gene: event.target.value })}\n          >\n            {all_genes.map((x) => (\n              <option key={x} value={x}>\n                {x}\n              </option>\n            ))}\n          </select>\n          <div>\n            <label className=\"text-sm\">Mutation at residue:</label>{\" \"}\n            <DebounceInput\n              debounceTimeout={300}\n              type=\"number\"\n              value={aa_pos}\n              onChange={(event) => setThis({ aa_pos: event.target.value })}\n              className=\"border py-1 px-1 text-grey-darkest text-sm h-7 w-20 m-3 my-1\"\n              placeholder=\"e.g. 681\"\n            />{\" \"}\n            <label className=\"text-sm\"> to</label>\n            <select\n              value={aa_final}\n              onChange={(event) => setThis({ aa_final: event.target.value })}\n              className=\"border py-1 px-1 text-grey-darkest text-sm h-7 w-16 m-3 my-1\"\n            >\n              {[\n                \"any\",\n                \"A\",\n                \"C\",\n                \"D\",\n                \"E\",\n                \"F\",\n                \"G\",\n                \"H\",\n                \"I\",\n                \"J\",\n                \"K\",\n                \"L\",\n                \"M\",\n                \"N\",\n                \"P\",\n                \"Q\",\n                \"R\",\n                \"S\",\n                \"T\",\n                \"U\",\n                \"V\",\n                \"W\",\n                \"Y\",\n              ].map((x) => (\n                <option key={x} value={x}>\n                  {x}\n                </option>\n              ))}\n            </select>\n            <br />\n            <label className=\"text-sm\">Min descendant genomes:</label>\n            <DebounceInput\n              debounceTimeout={300}\n              value={min_tips}\n              type=\"number\"\n              onChange={(event) =>\n                setThis({ min_tips: parseInt(event.target.value) })\n              }\n              className=\"border py-1 px-1 text-grey-darkest text-sm h-7 w-16 m-3 my-1\"\n            />\n          </div>\n        </div>\n      )}\n      {category !== \"mutation\" && (\n        <DebounceInput\n          className=\" w-32 border py-2 px-3 text-grey-darkest h-10\"\n          value={value}\n          onChange={(event) => setThis({ value: event.target.value })}\n          debounceTimeout={300}\n        />\n      )}\n      <button\n        className=\" bg-gray-100 text-sm mx-auto p-1 rounded border-gray-300 border  text-gray-700 ml-2 h-8\"\n        onClick={() => removeItem(id)}\n      >\n        <BsTrash className=\"inline-block \" />\n      </button>\n      <div className=\"text-sm text-gray-600 px-3\">{explanations[category]}</div>\n      <div className=\"text-sm text-gray-900 px-3\">\n        {\" \"}\n        {(value.length > 0 || category === \"mutation\") && (\n          <>\n            {\" \"}\n            {numberWithCommas(numResultsHere)} result\n            {numResultsHere !== 1 && <>s</>}\n          </>\n        )}\n        {numResultsHere === 1 && enabled && (\n          <>\n            {\" \"}\n            <button\n              onClick={zoomToMe}\n              className=\"inline-block bg-gray-100 text-sm mx-auto p-1 rounded border-gray-300 border m-1 text-gray-700\"\n            >\n              <BiZoomIn className=\"inline-block mr-1\" />\n              locate\n            </button>\n          </>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default SearchItem;\n","import React, { useMemo } from \"react\";\nimport SearchItem from \"./SearchItem\";\nimport { FaSearch } from \"react-icons/fa\";\nimport { RiAddCircleLine } from \"react-icons/ri\";\nimport { BiPalette } from \"react-icons/bi\";\nimport { BsInfoCircle } from \"react-icons/bs\";\nimport { DebounceInput } from \"react-debounce-input\";\n\nfunction numberWithCommas(x) {\n  const internationalNumberFormat = new Intl.NumberFormat(\"en-US\");\n  return internationalNumberFormat.format(x);\n}\n\nfunction SearchPanel({\n  searchItems,\n  setSearchItems,\n  colourBy,\n  setColourBy,\n  selectedNode,\n  data,\n  searchColors,\n  numSearchResults,\n  totalSeqs,\n  setZoomToSearch,\n}) {\n  const node_data = data.node_data;\n\n  const selected_muts = useMemo(() => {\n    if (!selectedNode) {\n      return [];\n    }\n    let cur_node = selectedNode;\n    let mutations = {};\n    while (cur_node !== node_data.parents[cur_node]) {\n      const these_muts = node_data.mutations[cur_node].mutation\n        ? Object.fromEntries(\n            node_data.mutations[cur_node].mutation.map((x) => {\n              const this_mut = data.mutation_mapping[x];\n              return [\n                this_mut.gene + \":\" + this_mut.position,\n                this_mut.final_res,\n              ];\n            })\n          )\n        : {};\n      mutations = { ...these_muts, ...mutations };\n      cur_node = node_data.parents[cur_node];\n    }\n    return Object.entries(mutations)\n      .map((x) => x[0] + x[1])\n      .sort();\n  }, [data, node_data, selectedNode]);\n  return (\n    <div className=\"overflow-y-auto\" style={{ height: \"calc(100vh - 5em)\" }}>\n      <div className=\" border-t md:border-t-0 border-b border-gray-300\">\n        <div className=\"mt-3 mb-3 text-gray-500 text-sm\">\n          Displaying {numberWithCommas(totalSeqs)} sequences from INSDC, COG-UK\n          and CNCB\n        </div>\n        <h2 className=\"text-xl mt-5 mb-4 text-gray-700\">\n          <FaSearch className=\"inline-block mr-2\" />\n          Search\n        </h2>\n        {searchItems.map(function (item, index) {\n          return (\n            <SearchItem\n              numResultsHere={numSearchResults[index]}\n              searchColors={searchColors}\n              index={index}\n              key={item.id}\n              id={item.id}\n              category={item.category}\n              aa_gene={item.aa_gene}\n              aa_pos={item.aa_pos}\n              aa_final={item.aa_final}\n              all_genes={data.all_genes}\n              min_tips={item.min_tips}\n              value={item.value}\n              setThis={(mapping) => {\n                searchItems[index] = { ...searchItems[index], ...mapping };\n                setSearchItems([...searchItems]);\n              }}\n              zoomToMe={() => {\n                console.log(index);\n                setZoomToSearch({ index });\n              }}\n              removeItem={(id) => {\n                // console.log(\"remove\", id);\n                setSearchItems(searchItems.filter((x) => x.id !== id));\n              }}\n              enabled={item.enabled}\n            ></SearchItem>\n          );\n        })}\n\n        <button\n          className=\"block bg-gray-100 text-sm mx-auto p-1 rounded border-gray-300 border m-5 text-gray-700\"\n          onClick={() =>\n            setSearchItems([\n              ...searchItems,\n              {\n                id: Math.random(),\n                category: \"name\",\n                value: \"\",\n                enabled: true,\n                aa_final: \"any\",\n                min_tips: 1,\n                aa_gene: \"S\",\n              },\n            ])\n          }\n        >\n          <RiAddCircleLine className=\"inline-block mr-2\" />\n          Add a new search\n        </button>\n      </div>\n      <div className=\"border-b border-gray-300 pb-3\">\n        <h2 className=\"text-xl mt-5 mb-4 text-gray-700\">\n          <BiPalette className=\"inline-block mr-2\" />\n          Colour by\n        </h2>\n\n        <select\n          className=\"border py-2 px-3 text-grey-darkest\"\n          value={colourBy.variable}\n          onChange={(event) =>\n            setColourBy({ ...colourBy, variable: event.target.value })\n          }\n        >\n          <option value=\"lineage\">Lineage</option>\n          <option value=\"country\">Country</option>\n          <option value=\"aa\">Amino acid at site</option>\n          <option value=\"none\">None</option>\n        </select>\n        {colourBy.variable === \"aa\" && (\n          <div\n            className=\"\n     p-2 m-1 ml-0  text-gray-700\"\n          >\n            {\" \"}\n            <label className=\"text-sm\">Gene</label>\n            <select\n              className=\"border py-1 px-1 text-grey-darkest text-sm h-7 w-16 m-3 my-1\"\n              value={colourBy.gene}\n              onChange={(event) =>\n                setColourBy({ ...colourBy, gene: event.target.value })\n              }\n            >\n              {data.all_genes.map((x) => (\n                <option key={x} value={x}>\n                  {x}\n                </option>\n              ))}\n            </select>\n            <div>\n              <label className=\"text-sm\">Residue</label>{\" \"}\n              <DebounceInput\n                debounceTimeout={300}\n                type=\"number\"\n                value={colourBy.residue}\n                onChange={(event) =>\n                  setColourBy({ ...colourBy, residue: event.target.value })\n                }\n                className=\"border py-1 px-1 text-grey-darkest text-sm h-7 w-16 m-3 my-1\"\n              />\n            </div>\n            <div className=\"hidden\">\n              Colour lines{\" \"}\n              <input\n                type=\"checkbox\"\n                value={colourBy.colourLines}\n                onChange={(event) =>\n                  setColourBy({ ...colourBy, colourLines: event.target.value })\n                }\n              ></input>\n            </div>\n          </div>\n        )}\n      </div>\n\n      <div>\n        {selectedNode && (\n          <div className=\"text-gray-500 mr-3\">\n            <h2 className=\"text-xl mt-5 mb-4 text-gray-700\">\n              <BsInfoCircle className=\"inline-block mr-2\" />\n              Node info\n            </h2>\n\n            <div className=\"font-bold\">{node_data.names[selectedNode]}</div>\n            {node_data.genbanks[selectedNode] &&\n              node_data.genbanks[selectedNode] !== \"unknown\" &&\n              node_data.genbanks[selectedNode] !== \"nan\" && (\n                <div>\n                  <span className=\"font-semibold\">Genbank:</span>{\" \"}\n                  <a\n                    target=\"_blank\"\n                    rel=\"noreferrer\"\n                    className=\"underline\"\n                    href={\n                      \"https://www.ncbi.nlm.nih.gov/nuccore/\" +\n                      node_data.genbanks[selectedNode]\n                    }\n                  >\n                    {node_data.genbanks[selectedNode]}\n                  </a>\n                </div>\n              )}\n            <div>\n              <span className=\"font-semibold\">Date:</span>{\" \"}\n              {data.date_mapping[node_data.dates[selectedNode]]}\n            </div>\n            <div>\n              <span className=\"font-semibold\">Lineage:</span>{\" \"}\n              <a\n                className=\"underline\"\n                target=\"_blank\"\n                rel=\"noreferrer\"\n                href={\n                  \"https://outbreak.info/situation-reports?pango=\" +\n                  data.lineage_mapping[node_data.lineages[selectedNode]]\n                }\n              >\n                {data.lineage_mapping[node_data.lineages[selectedNode]]}\n              </a>\n            </div>\n            <div>\n              <span className=\"font-semibold\">Country:</span>{\" \"}\n              {data.country_mapping[node_data.countries[selectedNode]]}\n            </div>\n            <span className=\"font-semibold\">Mutations from root:</span>\n            <div className=\"text-xs mr-5\">\n              {\n                selected_muts && selected_muts.join(\", \") //TODO assign the top thing to a constant and use it again\n              }\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default SearchPanel;\n","import React from \"react\";\n\nfunction AboutOverlay({ enabled, setEnabled }) {\n  return (\n    <div className={`w-full ${enabled ? \"\" : \"hidden\"}`}>\n      <div\n        onClick={() => setEnabled(false)}\n        className=\"fixed w-full h-full bg-black opacity-80 z-40\"\n      >\n        </div>\n        <div\n        onClick={() => setEnabled(false)}\n        className=\"fixed w-full h-full  opacity-100 z-40\"\n      >\n       \n      <div className=\" relative mx-auto mt-5 p-5 bg-white shadow-md z-100 w-4/5 overflow-y-auto opacity-100 \" style={{height:\"90vh\"}}>\n        <button\n          className=\"absolute top-5 right-5 text-xl font-bold\"\n          onClick={() => setEnabled(false)}\n        >\n          X\n        </button>\n        <h1 className=\"font-bold mb-3 text-xl\">About Cov2Tree</h1>\n        This website allows you to explore a phylogenetic tree with more than a\n        million SARS-Cov-2 sequences, sequenced by researchers around the world.\n        The interface was made by{\" \"}\n        <a className=\"text-blue-700 underline\" href=\"http://theo.io/\">\n          Theo Sanderson\n        </a>{\" \"}\n        using a custom-developed open-source library called{\" \"}\n        <a\n          href=\"http://github.com/theosanderson/taxodium\"\n          className=\"text-blue-700 underline\"\n        >\n          {\" \"}\n          Taxodium\n        </a>\n        .<h1 className=\"font-bold mb-3 text-xl mt-6\">The sequences</h1>\n        <p>\n          This tree displays sequences generated by scientists all over the\n          world. The sequences are sourced from GenBank (i.e. the INSDC\n          databases), the China National Center for Bioinformation, and from\n          COG-UK. They are collated{\" \"}\n          <a\n            className=\"text-blue-700 underline\"\n            href=\"http://hgdownload.soe.ucsc.edu/goldenPath/wuhCor1/UShER_SARS-CoV-2//\"\n          >\n            here\n          </a>{\" \"}\n          by Angie Hinrichs and others at UCSC.\n        </p>\n        <p>\n          This website would be empty but for the hard work of all these\n          researchers, and their openness in submitting their work to public\n          databases, and we gratefully acknowledge this.\n        </p>\n        <h1 className=\"font-bold mb-3 text-xl mt-6\">The tree</h1>\n        <p>\n          The tree shown here is produced by the UCSC team, and made available{\" \"}\n          <a\n            className=\"text-blue-700 underline\"\n            href=\"http://hgdownload.soe.ucsc.edu/goldenPath/wuhCor1/UShER_SARS-CoV-2//\"\n          >\n            here\n          </a>\n          . It is derived from releases of Rob Lanfear's{\" \"}\n          <a\n            className=\"text-blue-700 underline\"\n            href=\"https://github.com/roblanf/sarscov2phylo\"\n          >\n            sarscov2phylo\n          </a>\n          , pruned to include only public sequences aggregated from GenBank,\n          COG-UK, and the China National Center for Bioinformation. The tree has\n          been re-rooted to Wuhan/Hu-1 (GenBank MN908947.3, RefSeq NC_045512.2),\n          and nodes with no associated mutations have been collapsed. Sequences\n          released after the final sarscov2phylo release (Nov. 13, 2020) have\n          been added to the tree using{\" \"}\n          <a\n            className=\"text-blue-700 underline\"\n            href=\"https://github.com/yatisht/usher\"\n          >\n            UShER\n          </a>\n          , developed by Yatish Turakhia. UShER development and tree inference\n          was done in Russ Corbett-Detig and David Haussler's groups at the UCSC\n          Genomics Institute. It is described here only for completeness. UCSC\n          provide metadata with the sequences, including lineages called by{\" \"}\n          <a\n            className=\"text-blue-700 underline\"\n            href=\"https://www.pango.network/\"\n          >\n            Pangolin\n          </a>\n          .\n        </p>\n        <h1 className=\"font-bold mb-3 text-xl mt-4\">Citations</h1>\n        <div className=\"text-sm\">\n        <p>\n          Lanfear, Rob (2020). A global phylogeny of SARS-CoV-2 sequences from\n          GISAID. Zenodo DOI: 10.5281/zenodo.3958883\n        </p>\n        <p>\n          Turakhia et al. (2021). Ultrafast Sample Placement on Existing Trees\n          (UShER) Empowers Real-Time Phylogenetics for the SARS-CoV-2 Pandemic.\n        </p>\n        <p>\n          Rambaut et al. (2020). A dynamic nomenclature proposal for SARS-CoV-2\n          lineages to assist genomic epidemiology.\n        </p></div>\n        <h1 className=\"font-bold mb-3 text-xl mt-4\">Related tools</h1>\n        <div className=\"text-sm\">\n        <p>\n          You can also explore large phylogenies using{\" \"}\n          <a className=\"text-blue-700 underline\" href=\"https://pando.tools\">\n            Pando\n          </a>\n          ,{\" \"}\n          <a className=\"text-blue-700 underline\" href=\"https://microreact.org/\">\n            Microreact\n          </a>\n          , and sampled phylogenies on{\" \"}\n          <a className=\"text-blue-700 underline\" href=\"https://nextstrain.org/\">\n            NextStrain\n          </a>\n          .\n        </p></div>\n      </div>\n       {\" \"}\n      </div>\n    </div>\n  );\n}\n\nexport default AboutOverlay;\n","import \"./App.css\";\nimport React, { useEffect, useState, useCallback, useMemo } from \"react\";\nimport Deck from \"./Deck\";\nimport SearchPanel from \"./components/SearchPanel\";\nimport axios from \"axios\";\nimport AboutOverlay from \"./components/AboutOverlay\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { CgListTree } from \"react-icons/cg\";\n//import {FaGithub} from  \"react-icons/fa\";\nimport { BsInfoSquare } from \"react-icons/bs\";\n\nvar protobuf = require(\"protobufjs\");\nprotobuf.parse.defaults.keepCase = true;\n\nconst searchColors = [\n  [255, 0, 0],\n  [183, 0, 255],\n  [255, 213, 0],\n\n  [0, 0, 255],\n  [0, 255, 255],\n];\n\nfunction App() {\n  const [zoomToSearch, setZoomToSearch] = useState({ index: null });\n\n  const [searchItems, setSearchItemsBasic] = useState([\n    {\n      id: 0.123,\n      category: \"lineage\",\n      value: \"\",\n      enabled: true,\n      aa_final: \"any\",\n      min_tips: 1,\n      aa_gene: \"S\",\n    },\n  ]);\n\n  const setSearchItems = useCallback((x) => {\n    setSearchItemsBasic(x);\n  }, []);\n\n  const [colourBy, setColourBy] = useState({\n    variable: \"lineage\",\n    gene: \"S\",\n    colourLines: false,\n    residue: \"681\",\n  });\n  const setColourByWithCheck = useCallback((x) => {\n    setColourBy(x);\n  }, []);\n  const [nodeData, setNodeData] = useState({\n    status: \"not_attempted\",\n    data: { node_data: { ids: [] } },\n  });\n\n  const [selectedNode, setSelectedNode] = useState(null);\n\n  const [aboutEnabled, setAboutEnabled] = useState(false);\n\n  useEffect(() => {\n    if (nodeData.status === \"not_attempted\") {\n      console.log(\"starting dl\");\n      setNodeData({\n        status: \"loading\",\n        progress: 0,\n        data: { node_data: { ids: [] } },\n      });\n\n      protobuf.load(\"./tree.proto\").then(function (root) {\n        axios\n          .get(\"/nodelist.pb\", {\n            responseType: \"arraybuffer\",\n            onDownloadProgress: (progressEvent) => {\n              let percentCompleted = Math.floor(\n                1 * (progressEvent.loaded / 100000000) * 100\n              );\n              setNodeData({\n                status: \"loading\",\n                progress: percentCompleted,\n                data: { node_data: { ids: [] } },\n              });\n            },\n          })\n          .then(function (response) {\n            return response.data;\n          })\n          .then(function (buffer) {\n            console.log(\"buffer loaded\");\n            var NodeList = root.lookupType(\"AllData\");\n\n            var message = NodeList.decode(new Uint8Array(buffer));\n            var result = NodeList.toObject(message);\n            result.node_data.ids = [...Array(result.node_data.x.length).keys()];\n            console.log(result.mutation_mapping);\n            const all_genes = new Set();\n            result.mutation_mapping = result.mutation_mapping.map((x, i) => {\n              const mutation_array = {};\n\n              const [gene, rest] = x.split(\":\");\n              if (rest) {\n                const [orig_res, position, final_res] = rest.split(\"_\");\n                mutation_array.gene = gene;\n                mutation_array.position = position;\n                mutation_array.orig_res = orig_res;\n                mutation_array.final_res = final_res;\n                all_genes.add(gene);\n              }\n              mutation_array.id = i;\n              return mutation_array;\n            });\n            console.log(result.mutation_mapping);\n            result.all_genes = Array.from(all_genes).sort();\n            setNodeData({ status: \"loaded\", data: result });\n          });\n      });\n    }\n  }, [nodeData.status]);\n\n  const data = useMemo(\n    () =>\n      nodeData.status === \"loaded\" ? nodeData.data : { node_data: { ids: [] } },\n    [nodeData]\n  );\n\n  const scatterIds = useMemo(\n    () => data.node_data.ids.filter((x) => data.node_data.names[x] !== \"\"),\n    [data]\n  );\n  console.log(searchItems);\n\n  const [search_configs_initial, numSearchResults, totalSeqs] = useMemo(() => {\n    const configs = searchItems.map((item, counter) => {\n      window.nd = data.node_data;\n      let filter_function;\n      const lowercase_query = item.value.toLowerCase().trim();\n      if (item.category === \"mutation\") {\n        window.mm = data.mutation_mapping;\n        const subset = data.mutation_mapping\n          .filter(\n            (x) =>\n              x.gene === item.aa_gene &&\n              x.position === item.aa_pos &&\n              (x.final_res === item.aa_final) | (item.aa_final === \"any\")\n          )\n          .map((x) => x.id);\n        console.log(subset);\n\n        filter_function = (x) =>\n          data.node_data.mutations[x] &&\n          data.node_data.mutations[x].mutation &&\n          subset.filter((i) => data.node_data.mutations[x].mutation.includes(i))\n            .length > 0 &&\n          data.node_data.num_tips[x] >= item.min_tips &&\n          data.node_data.parents[x] !== x;\n      }\n\n      if (item.category === \"name\") {\n        filter_function = (x) =>\n          data.node_data.names[x].toLowerCase().includes(lowercase_query); //TODO precompute lowercase mapping for perf?\n      }\n\n      if (item.category === \"country\") {\n        filter_function = (x) =>\n          data.country_mapping[data.node_data.countries[x]].toLowerCase() ===\n          lowercase_query; //TODO precompute lowercase mapping for perf\n      }\n      if (item.category === \"lineage\") {\n        filter_function = (x) =>\n          data.lineage_mapping[data.node_data.lineages[x]].toLowerCase() ===\n          lowercase_query; //TODO precompute lowercase mapping for perf\n      }\n      const enabled =\n        (item.category === \"mutation\") |\n          (item.value !== null && item.value !== \"\") && item.enabled;\n      return {\n        original_index: counter,\n        id: \"main-search-\" + counter,\n        enabled: enabled,\n        data:\n          (item.value !== \"\") | (item.category === \"mutation\")\n            ? data.node_data.ids.filter(filter_function)\n            : [],\n        opacity: 0.7,\n        getRadius: 7 + counter * 2,\n        filled: false,\n        stroked: true,\n        radiusUnits: \"pixels\",\n        lineWidthUnits: \"pixels\",\n        lineWidthScale: 1,\n\n        getPosition: (d) => {\n          return [data.node_data.x[d], data.node_data.y[d]];\n        },\n        getFillColor: (d) => [0, 0, 0],\n        getLineColor: (d) => searchColors[counter % searchColors.length],\n      };\n    });\n\n    const num_results = configs.map((x) => x.data.length);\n    const filtered_configs = configs.filter((item) => item.enabled);\n    return [filtered_configs, num_results, scatterIds.length];\n  }, [data, searchItems, scatterIds]);\n  console.log(\"cfg\", search_configs_initial);\n  return (\n    <Router>\n      <AboutOverlay enabled={aboutEnabled} setEnabled={setAboutEnabled} />\n\n      <div className=\"h-screen w-screen\">\n        <div className=\"from-gray-500 to-gray-600 bg-gradient-to-bl h-15 shadow-md z-20\">\n          <div className=\"flex justify-between\">\n            <h1 className=\"text-xl p-4  pb-5 text-white \">\n              <CgListTree className=\"inline-block h-8 w-8 pr-2 \" />\n              <span className=\"font-bold\">Cov2Tree</span>:{\" \"}\n              <span className=\"font-light\">\n                interactive SARS-CoV-2 phylogeny{\" \"}\n              </span>\n            </h1>\n            <div className=\"inline-block p-4\">\n              <button\n                onClick={() => setAboutEnabled(true)}\n                className=\"mr-10 text-white font-bold hover:underline\"\n              >\n                <BsInfoSquare className=\"inline-block h-7 w-8\" /> About /\n                Acknowledgements\n              </button>\n              {/*<a className=\"text-white\" href=\"https://github.com/theosanderson/taxodium\">\n              <FaGithub className=\"inline-block text-white h-7 w-8\" />\n  </a>*/}\n            </div>\n          </div>\n        </div>\n        <div className=\"main_content\">\n          <div className=\"md:grid md:grid-cols-12 h-full\">\n            <div className=\"md:col-span-8 h-3/6 md:h-full w-full\">\n              <Deck\n                search_configs_initial={search_configs_initial}\n                scatterIds={scatterIds}\n                searchColors={searchColors}\n                setSelectedNode={setSelectedNode}\n                searchItems={searchItems}\n                data={data}\n                progress={nodeData.progress}\n                colourBy={colourBy}\n                zoomToSearch={zoomToSearch}\n              />\n            </div>\n            <div className=\"md:col-span-4 h-full bg-white  border-gray-600   pl-5 shadow-xl\">\n              <SearchPanel\n                setZoomToSearch={setZoomToSearch}\n                totalSeqs={totalSeqs}\n                numSearchResults={numSearchResults}\n                searchColors={searchColors}\n                selectedNode={selectedNode}\n                searchItems={searchItems}\n                data={data}\n                setSearchItems={setSearchItems}\n                colourBy={colourBy}\n                setColourBy={setColourByWithCheck}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}