{"version":3,"sources":["components/Spinner.jsx","Deck.jsx","components/SearchItem.jsx","components/SearchPanel.jsx","Taxodium.jsx"],"names":["Spinner","isShown","progress","className","coarse_and_fine_configs","config","node_data","precision","line_mode","optionalFineIds","optionalCoarseIds","coarse","data","reduceOverPlotting","visible","id","mini","replace","lineWidthScale","pickable","getRadius","includes","make_minimap_version","fineIdsToSet","nodeIds","included_points","filter","node","Math","abs","x","parents","y","rounded_x","round","rounded_y","dummy_polygons","contour","zipcode","population","area","rgb_cache","toRGB","string","result","amino_acids","A","R","N","D","C","Q","E","G","H","I","L","K","M","F","P","T","W","Y","V","X","O","Z","undefined","split","reverse","join","hash","length","i","charCodeAt","rgb","value","toRGB_uncached","toRGBCSS","output","getXval","viewState","zoom","Deck","metadataItemList","getMetadataItem","showMutText","colourBy","setSelectedNode","scatterIds","search_configs_initial","zoomToSearch","selectedNode","useState","ids","top","bottom","textInfo","setTextInfo","fineScatterInfo","setFineScatterInfo","hoverInfo","setHoverInfo","target","setViewState","xZoom","MMatrix","useMemo","deckRef","useRef","onViewStateChange","useCallback","viewId","oldViewState","current","viewports","main_vp","nw","unproject","se","width","height","needs_update","mouseDownIsMinimap","setMouseDownIsMinimap","onClickOrMouseMove","event","buttons","_reactName","pickInfo","pickObject","nativeEvent","offsetX","offsetY","radius","viewport","object","newViewState","coordinate","poly_layer","PolygonLayer","stroked","opacity","filled","wireframe","getPolygon","d","getFillColor","getLineColor","getLineWidth","lineWidthUnits","getResidue","cache","gene","position","cur_node","path","return_val","push","interesting_mutations","mutations","mutation","mutation_mapping","final_res","forEach","coarseScatterIds","scatterFillFunction","variable","item","mapping","node_values","residue","scatter_layers","radiusUnits","onHover","info","getPosition","updateTriggers","map","modelMatrix","radiusMaxPixels","ScatterplotLayer","selected_node_layer","search_configs","concat","search_configs2","search_layers","line_layer_2_config","getWidth","getTargetPosition","getSourcePosition","getColor","line_layer_3_config","line_configs","apply","line_configs2","line_layers","LineLayer","cur_top","cur_bot","new_top","new_bot","textIds","zoomThreshold","fineScatterIds","mutTextIds","num_tips","text_config","getText","names","getAngle","billboard","getTextAnchor","getAlignmentBaseline","text_config_muts","orig_res","sort","text_layers","TextLayer","getSize","text_layer_muts","pos_layer_mini","color","radiusMinPixels","layers","window","deck","views","OrthographicView","controller","borderWidth","hoverStuff","aa","aa_col","date","date_mapping","dates","style","zIndex","pointerEvents","left","spinnerShown","zoomIncrement","increment","newViewState2","useEffect","index","valid_search","original_index","y_values","max_y_val","array","reduce","max","b","min_y_val","min","getMinOfArrayUsingReduce","log2","onClick","onPointerMove","onPointerDown","pickingRadius","onAfterRender","ref","layerFilter","layer","startsWith","right","SearchItem","category","enabled","setThis","removeItem","searchColors","numResultsHere","zoomToMe","aa_pos","aa_final","aa_gene","all_genes","min_tips","search_for_ids","current_accession","thecolor","name","type","outline","outlineOffset","checked","onChange","str","txt","charAt","toUpperCase","substr","toLowerCase","element","debounceTimeout","placeholder","parseInt","lineage","country","Intl","NumberFormat","format","epi_isl","slice","get_epi_isl_url","SearchPanel","searchItems","setSearchItems","setColourBy","numSearchResults","totalSeqs","setZoomToSearch","setShowMutText","configMode","setConfigMode","cur_genbank","genbanks","cur_epi_isl","epi_isl_numbers","selected_muts","these_muts","Object","fromEntries","this_mut","entries","console","log","random","colourLines","rel","href","protobuf","require","parse","defaults","keepCase","Taxodium","protoUrl","uploadedData","query","setQuery","setZoomToSearchOrig","newQuery","JSON","search","stringify","setColourByWithCheck","status","nodeData","setNodeData","metadata_singles","metadata_name","load","then","root","Promise","resolve","reject","axios","get","responseType","onDownloadProgress","progressEvent","percentCompleted","floor","loaded","response","endsWith","pako","ungzip","getRawfile","buffer","NodeList","lookupType","message","decode","Uint8Array","toObject","country_mapping","countries","lineage_mapping","lineages","Array","keys","Set","mutation_array","rest","add","from","configs","counter","filter_function","lowercase_query","trim","subset","the_list","num_results"],"mappings":"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","file":"static/js/4.bc7ae3bd.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Spinner.css\";\n\nfunction Spinner({ isShown, progress }) {\n  if (isShown) {\n    return (\n      <div className=\"w-full h-full fixed bg-white text-center\">\n        {\" \"}\n        <div className=\"loader z-50\">Loading...</div>\n        <div className=\"text-black\">Loading {progress}%</div>\n      </div>\n    );\n  } else {\n    return <></>;\n  }\n}\n\nexport default Spinner;\n","/// app.js\nimport React, {\n  useState,\n  useMemo,\n  useCallback,\n  useRef,\n  useEffect,\n} from \"react\";\nimport DeckGL from \"@deck.gl/react\";\nimport {\n  LineLayer,\n  ScatterplotLayer,\n  PolygonLayer,\n  TextLayer,\n} from \"@deck.gl/layers\";\nimport { OrthographicView } from \"@deck.gl/core\";\nimport Spinner from \"./components/Spinner\";\nimport { BiZoomIn, BiZoomOut } from \"react-icons/bi\";\n\nconst zoomThreshold = 8;\nfunction coarse_and_fine_configs(\n  config,\n  node_data,\n  precision,\n  line_mode,\n  optionalFineIds,\n  optionalCoarseIds\n) {\n  const coarse = {\n    ...config,\n    data: optionalCoarseIds\n      ? optionalCoarseIds\n      : reduceOverPlotting(config.data, node_data, precision, line_mode),\n    visible: true,\n    id: config.id + \"_coarse\",\n  };\n\n  const mini = make_minimap_version(coarse);\n  const fineIdsToSet = optionalFineIds ? optionalFineIds : config.data;\n  const fine = {\n    ...config,\n    visible: true,\n    id: config.id + \"_fine\",\n    data: fineIdsToSet,\n  };\n  return [coarse, fine, mini];\n}\n\nfunction make_minimap_version(config) {\n  return {\n    ...config,\n    id: config.id.replace(\"main\", \"mini\"),\n    lineWidthScale: 1,\n    pickable: false,\n    getRadius: config.id.includes(\"search\")\n      ? config.getRadius * 0.5\n      : config.getRadius,\n  };\n}\n\nfunction reduceOverPlotting(nodeIds, node_data, precision, line_mode) {\n  const included_points = {};\n\n  const filtered = nodeIds.filter((node) => {\n    if (line_mode) {\n      if (\n        (Math.abs(node_data.x[node] - node_data.x[node_data.parents[node]]) >\n          1) |\n        (Math.abs(node_data.y[node] - node_data.y[node_data.parents[node]]) >\n          0.5)\n      ) {\n        return true;\n      }\n    }\n\n    const rounded_x = Math.round(node_data.x[node] * precision) / precision;\n    const rounded_y = Math.round(node_data.y[node] * precision) / precision;\n    if (included_points[rounded_x]) {\n      if (included_points[rounded_x][rounded_y]) {\n        return false;\n      } else {\n        included_points[rounded_x][rounded_y] = 1;\n        return true;\n      }\n    } else {\n      included_points[rounded_x] = { [rounded_y]: 1 };\n      return true;\n    }\n  });\n\n  return filtered;\n}\nconst dummy_polygons = [\n  {\n    contour: [\n      [-100, -100],\n      [-100, 100],\n      [100, 100],\n      [100, -100],\n    ],\n    zipcode: 94107,\n    population: 26599,\n    area: 6.11,\n  },\n];\nconst rgb_cache = {};\n\nfunction toRGB(string) {\n  if (rgb_cache[string]) {\n    return rgb_cache[string];\n  } else {\n    const result = toRGB_uncached(string);\n    rgb_cache[string] = result;\n    return result;\n  }\n}\n\nfunction toRGB_uncached(string) {\n  const amino_acids = {\n    A: [230, 25, 75],\n    R: [60, 180, 75],\n    N: [255, 225, 25],\n    D: [67, 99, 216],\n    C: [245, 130, 49],\n    Q: [70, 240, 240],\n    E: [145, 30, 180],\n\n    G: [240, 50, 230],\n    H: [188, 246, 12],\n    I: [250, 190, 190],\n\n    L: [230, 0, 255],\n    K: [0, 128, 128],\n    M: [154, 99, 36],\n    F: [255, 250, 200],\n    P: [128, 0, 0],\n    T: [170, 255, 195],\n    W: [128, 128, 0],\n\n    Y: [0, 0, 117],\n    V: [0, 100, 177],\n    X: [128, 128, 128],\n    O: [255, 255, 255],\n    Z: [0, 0, 0],\n  };\n\n  if (amino_acids[string]) {\n    return amino_acids[string];\n  }\n\n  if (string === undefined) {\n    return [200, 200, 200];\n  }\n  if (string === \"\") {\n    return [200, 200, 200];\n  }\n  if (string === \"unknown\") {\n    return [200, 200, 200];\n  }\n  if (string === \"USA\") {\n    return [95, 158, 245]; //This is just because the default is ugly\n  }\n  \n   if (string === \"B.1.2\") {\n    return [95, 158, 245]; //This is near B.1.617.2\n  }\n  if (string === \"England\") {\n    return [214, 58, 15]; // UK all brick\n  }\n  if (string === \"Scotland\") {\n    return [255, 130, 82]; // UK all brick\n  }\n  if (string === \"Wales\") {\n    return [148, 49, 22]; // UK all brick\n  }\n  if (string === \"Northern Ireland\") {\n    return [140, 42, 15]; // UK all brick\n  }\n  if (string === \"France\") {\n    return [140, 28, 120]; // diff to UK\n  }\n  if (string === \"Germany\") {\n    return [106, 140, 28]; // diff to UK\n  }\n  if (string === \"India\") {\n    return [61, 173, 166]; // diff to UK\n  }\n  if (string === \"Denmark\") {\n    return [24, 112, 32]; // diff to UK\n  }\n\n  string = string.split(\"\").reverse().join(\"\");\n  var hash = 0;\n  if (string.length === 0) return hash;\n  for (var i = 0; i < string.length; i++) {\n    hash = string.charCodeAt(i) + ((hash << 5) - hash);\n    hash = hash & hash;\n  }\n  var rgb = [0, 0, 0];\n  for (i = 0; i < 3; i++) {\n    var value = (hash >> (i * 8)) & 255;\n    rgb[i] = value;\n  }\n  if (rgb[0] + rgb[1] + rgb[2] < 150 || rgb[0] + rgb[1] + rgb[2] > 500) {\n    return toRGB(string + \"_\");\n  }\n  return rgb;\n}\nfunction toRGBCSS(string) {\n  const output = toRGB(string);\n  return `rgb(${output[0]},${output[1]},${output[2]})`;\n}\n\nconst getXval = (viewState) => 7 / 2 ** (viewState.zoom - 5.6);\n\nfunction Deck({\n  metadataItemList,\n  getMetadataItem,\n  showMutText,\n  data,\n  colourBy,\n  progress,\n  setSelectedNode,\n  scatterIds,\n  search_configs_initial,\n  zoomToSearch,\n  selectedNode,\n}) {\n  const [textInfo, setTextInfo] = useState({ ids: [], top: 0, bottom: 0 });\n  const [fineScatterInfo, setFineScatterInfo] = useState({\n    ids: [],\n    top: 0,\n    bottom: 0,\n  });\n\n  const node_data = data.node_data;\n\n  const [hoverInfo, setHoverInfo] = useState();\n\n  const [viewState, setViewState] = useState({\n    zoom: 4.7,\n    target: [6, 13],\n  });\n  const [xZoom, setXZoom] = useState(0);\n  const MMatrix = useMemo(\n    () => [\n      1 / 2 ** (viewState.zoom - xZoom - 5.6),\n      0,\n      0,\n      0,\n      0,\n      1,\n      0,\n      0,\n      0,\n      0,\n      1,\n      0,\n      0,\n      0,\n      0,\n      1,\n    ],\n    [viewState.zoom, xZoom]\n  );\n  const deckRef = useRef(null);\n\n  const onViewStateChange = useCallback(\n    ({ viewId, viewState, oldViewState }) => {\n      const zoom_in_x = false;\n      if (zoom_in_x && oldViewState) {\n        if (viewState.zoom !== oldViewState.zoom) {\n          const diff = viewState.zoom - oldViewState.zoom;\n          const newxzoom = xZoom + diff;\n          setXZoom(newxzoom);\n          viewState.zoom = oldViewState.zoom;\n        }\n      }\n      if (viewId === \"minimap\") {\n        return;\n      }\n\n      viewState[\"minimap\"] = { zoom: 3.0, target: [5, 13] };\n      if (zoom_in_x) {\n        if (oldViewState) {\n          viewState.target[1] = oldViewState.target[1];\n        }\n      } else {\n        viewState.target[0] = getXval(viewState);\n      }\n      if (deckRef.current.viewports.length) {\n        const main_vp = deckRef.current.viewports[0];\n        const nw = main_vp.unproject([0, 0, 0]);\n        const se = main_vp.unproject([main_vp.width, main_vp.height, 0]);\n        se[0] = se[0] * 2 ** (viewState.zoom - 6);\n        nw[0] = nw[0] * 2 ** (viewState.zoom - 6);\n        viewState = { ...viewState, nw: nw, se: se, needs_update: false };\n        nw[0] = -500;\n        se[0] = 500;\n\n        setViewState(viewState);\n      }\n    },\n    [deckRef, xZoom]\n  );\n\n  const [mouseDownIsMinimap, setMouseDownIsMinimap] = useState(false);\n\n  const onClickOrMouseMove = useCallback(\n    (event) => {\n      if (event.buttons === 0 && event._reactName === \"onPointerMove\") {\n        return false;\n      }\n\n      const pickInfo = deckRef.current.pickObject({\n        x: event.nativeEvent.offsetX,\n        y: event.nativeEvent.offsetY,\n        radius: 10,\n      });\n\n      if (event._reactName === \"onPointerDown\") {\n        if (pickInfo && pickInfo.viewport.id === \"minimap\") {\n          setMouseDownIsMinimap(true);\n        } else {\n          setMouseDownIsMinimap(false);\n        }\n      }\n      if (\n        pickInfo &&\n        pickInfo.viewport.id === \"main\" &&\n        event._reactName === \"onClick\"\n      ) {\n        setSelectedNode(pickInfo.object);\n      }\n\n      if (!pickInfo && event._reactName === \"onClick\") {\n        setSelectedNode(null);\n      }\n\n      if (\n        pickInfo &&\n        pickInfo.viewport.id === \"minimap\" &&\n        mouseDownIsMinimap\n      ) {\n        const newViewState = {\n          ...viewState,\n          target: [getXval(viewState), pickInfo.coordinate[1]],\n          needs_update: true,\n        };\n        onViewStateChange({ viewState: newViewState, oldViewState: viewState });\n      }\n    },\n    [viewState, mouseDownIsMinimap, setSelectedNode, onViewStateChange]\n  );\n\n  const poly_layer = useMemo(\n    () =>\n      new PolygonLayer({\n        //This dummy layer provides a gray background, but more importantly, it means that a picking event is always generated on clicks, allowing us to make pressing on the minimap change the view\n        id: \"mini-poly-layer\",\n        data: dummy_polygons,\n        pickable: true,\n        stroked: true,\n        opacity: 0.5,\n        filled: true,\n        wireframe: true,\n        getPolygon: (d) => d.contour,\n\n        getFillColor: (d) => [240, 240, 240],\n        getLineColor: [80, 80, 80],\n        getLineWidth: 1,\n        lineWidthUnits: \"pixels\",\n      }),\n    []\n  );\n\n  const getResidue = useMemo(() => {\n    let cache = {};\n\n    const the_function = (node, gene, position) => {\n      let residue = null;\n      let cur_node = node;\n\n      let path = [];\n      while (residue == null) {\n        let return_val = null;\n        path.push(cur_node);\n        let interesting_mutations;\n        if (cache[cur_node]) {\n          return_val = cache[cur_node];\n        } else {\n          interesting_mutations =\n            node_data.mutations[cur_node].mutation &&\n            node_data.mutations[cur_node].mutation.filter(\n              (x) =>\n                data.mutation_mapping[x].gene === gene &&\n                data.mutation_mapping[x].position === position\n            );\n\n          if (interesting_mutations && interesting_mutations.length === 1) {\n            return_val =\n              data.mutation_mapping[interesting_mutations[0]].final_res;\n          }\n          if (node_data.parents[cur_node] === cur_node && return_val == null) {\n            return_val = \"X\";\n          }\n        }\n        if (return_val) {\n          path.forEach((x) => {\n            cache[x] = return_val;\n          });\n          return return_val;\n        }\n        cur_node = node_data.parents[cur_node];\n      }\n    };\n    return the_function;\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [node_data, data, colourBy]);\n\n  const coarseScatterIds = useMemo(() => {\n    return reduceOverPlotting(scatterIds, node_data, 100, false);\n  }, [scatterIds, node_data]);\n\n  const scatterFillFunction = useMemo(() => {\n   \n    \n    if (metadataItemList.includes(colourBy.variable)) {\n      const item =  getMetadataItem(colourBy.variable)\n      return (d) => toRGB(item.mapping[item.node_values[d]]);\n    }\n     else if (colourBy.variable === \"aa\") {\n      return (d) => toRGB(getResidue(d, colourBy.gene, colourBy.residue));\n    } else {\n      return [200, 200, 200];\n    }\n  }, [colourBy.variable, colourBy.gene, colourBy.residue, getMetadataItem, getResidue, metadataItemList]);\n\n  const scatterplot_config = {\n    data: scatterIds,\n    visible: true,\n    opacity: 0.6,\n    getRadius: 3,\n    radiusUnits: \"pixels\",\n\n    id: \"main-scatter\",\n\n    pickable: true,\n    getLineColor: [100, 100, 100],\n\n    lineWidthUnits: \"pixels\",\n    lineWidthScale: 1,\n\n    onHover: (info) => setHoverInfo(info),\n    getPosition: (d) => {\n      return [node_data.x[d], node_data.y[d]];\n    },\n    updateTriggers: {\n      getFillColor: scatterFillFunction,\n    },\n    getFillColor: scatterFillFunction,\n  };\n\n  const scatter_configs = coarse_and_fine_configs(\n    scatterplot_config,\n    node_data,\n    100,\n    false,\n    fineScatterInfo.ids,\n    coarseScatterIds\n  );\n\n  const scatter_configs2 = scatter_configs.map((x) => ({\n    ...x,\n    modelMatrix: x.id.includes(\"mini\") ? undefined : MMatrix,\n    stroked: x.id.includes(\"mini\") ? undefined : viewState.zoom > 15,\n    radiusMaxPixels: x.id.includes(\"mini\")\n      ? 2\n      : viewState.zoom > 15\n      ? viewState.zoom / 5\n      : 3,\n  }));\n  const scatter_layers = scatter_configs2.map((x) => new ScatterplotLayer(x));\n\n  const selected_node_layer = useMemo(\n    () =>\n      new ScatterplotLayer({\n        data: selectedNode ? [selectedNode] : [],\n        visible: true,\n        opacity: 1,\n        getRadius: 6,\n        radiusUnits: \"pixels\",\n\n        id: \"main-selected\",\n        filled: false,\n        stroked: true,\n        modelMatrix: MMatrix,\n\n        getLineColor: [0, 0, 0],\n        getPosition: (d) => {\n          return [node_data.x[d], node_data.y[d]];\n        },\n        lineWidthUnits: \"pixels\",\n        lineWidthScale: 2,\n      }),\n    [selectedNode, node_data, MMatrix]\n  );\n\n  const search_configs = useMemo(\n    () =>\n      [].concat(\n        ...search_configs_initial.map((x) =>\n          coarse_and_fine_configs(x, node_data, 100)\n        )\n      ),\n    [search_configs_initial, node_data]\n  );\n\n  const search_configs2 = useMemo(\n    () =>\n      search_configs.map((x) => ({\n        ...x,\n        modelMatrix: x.id.includes(\"mini\") ? undefined : MMatrix,\n      })),\n    [search_configs, MMatrix]\n  );\n  const search_layers = useMemo(\n    () => search_configs2.map((x) => new ScatterplotLayer(x)),\n    [search_configs2]\n  );\n\n  const line_layer_2_config = useMemo(\n    () => ({\n      id: \"main-line\",\n      data: node_data.ids.filter((x) => true),\n\n      getWidth: 1,\n      pickable: true,\n      onHover: (info) => setHoverInfo(info),\n      getTargetPosition: (d) => [\n        node_data.x[node_data.parents[d]],\n        node_data.y[d],\n      ],\n      getSourcePosition: (d) => [node_data.x[d], node_data.y[d]],\n      getColor: [150, 150, 150],\n    }),\n    [node_data]\n  );\n\n  const line_layer_3_config = useMemo(\n    () => ({\n      id: \"main-line-2\",\n      data: node_data.ids.filter((x) => true),\n      pickable: false,\n      getWidth: 1,\n      getTargetPosition: (d) => [\n        node_data.x[node_data.parents[d]],\n        node_data.y[node_data.parents[d]],\n      ],\n      getSourcePosition: (d) => [\n        node_data.x[node_data.parents[d]],\n        node_data.y[d],\n      ],\n      getColor: [150, 150, 150],\n    }),\n    [node_data]\n  );\n\n  const line_configs = useMemo(\n    () =>\n      [].concat.apply(\n        [],\n        [line_layer_2_config, line_layer_3_config].map((x) =>\n          coarse_and_fine_configs(x, node_data, 100, true)\n        )\n      ),\n    [line_layer_2_config, line_layer_3_config, node_data]\n  );\n\n  const line_configs2 = useMemo(\n    () =>\n      line_configs.map((x) => ({\n        ...x,\n        modelMatrix: x.id.includes(\"mini\") ? undefined : MMatrix,\n      })),\n    [line_configs, MMatrix]\n  );\n  const line_layers = useMemo(\n    () => line_configs2.map((x) => new LineLayer(x)),\n    [line_configs2]\n  );\n\n  if (viewState.zoom > 17 && viewState.needs_update !== true) {\n    /*\n    Creating a text layer with every node takes a *long* time, even if it's not visible until zoomed, so we don't do that.\n\n    Instead, this section of code runs every render. It checks whether the zoom is sufficient to start thinking about text. If not, it does nothing.\n\n    If text will be displayed soon, we check whether the area of text that we have precomputed contains the current viewport. If so, we do nothing.\n\n    If not we set textIds to the ids within a certain range (9* the height) of the current viewport. This will be used later on to make a layer by the memoised function.\n\n    We also record the location for which we did the precomputation.\n    */\n    if (\n      (viewState.nw[1] > textInfo.top) &\n      (viewState.se[1] < textInfo.bottom)\n    ) {\n      // console.log(\"still within\", viewState.nw[1] , textInfo.top)\n    } else {\n      const cur_top = viewState.nw[1];\n      const cur_bot = viewState.se[1];\n      const height = cur_bot - cur_top;\n      const new_top = cur_top - height * 4;\n      const new_bot = cur_bot + height * 4;\n      const textIds = scatterIds.filter(\n        (x) => (node_data.y[x] > new_top) & (node_data.y[x] < new_bot)\n      );\n\n      //console.log(\"recalculating text\")\n      setTextInfo({\n        top: new_top,\n        bottom: new_bot,\n        ids: textIds,\n      });\n    }\n  }\n\n  if (viewState.zoom > zoomThreshold - 1 && viewState.needs_update !== true) {\n    // Fine coarse\n    if (\n      (viewState.nw[1] > fineScatterInfo.top) &\n      (viewState.se[1] < fineScatterInfo.bottom)\n    ) {\n      // still within\n    } else {\n      const cur_top = viewState.nw[1];\n      const cur_bot = viewState.se[1];\n      const height = cur_bot - cur_top;\n      const new_top = cur_top - height * 2;\n      const new_bot = cur_bot + height * 2;\n      const fineScatterIds = scatterIds.filter(\n        (x) => (node_data.y[x] > new_top) & (node_data.y[x] < new_bot)\n      );\n\n      //console.log(\"recalculating text\")\n      setFineScatterInfo({\n        top: new_top,\n        bottom: new_bot,\n        ids: fineScatterIds,\n      });\n    }\n  }\n\n  const mutTextIds = useMemo(\n    () =>\n      showMutText\n        ? node_data.ids.filter(\n            (x) =>\n              /* node_data.y[x] > new_top &&\n      node_data.y[x] < new_bot &&*/\n              node_data.num_tips[x] > 10 && node_data.mutations[x]\n          )\n        : [],\n    [node_data.ids, node_data.mutations, node_data.num_tips, showMutText]\n  );\n  const text_config = useMemo(\n    () => ({\n      id: \"main-text-layer\",\n      data: textInfo.ids,\n      getPosition: (d) => [node_data.x[d] + 0.3, node_data.y[d]],\n      getText: (d) => node_data.names[d],\n      getColor: [180, 180, 180],\n      getAngle: 0,\n\n      billboard: true,\n      getTextAnchor: \"start\",\n      getAlignmentBaseline: \"center\",\n    }),\n    [node_data, textInfo]\n  );\n\n  const text_config_muts = useMemo(\n    () => ({\n      id: \"main-text-muts-layer\",\n      data: mutTextIds.filter(() => true),\n      getPosition: (d) => [node_data.x[d], node_data.y[d]],\n      getText: (d) =>\n        node_data.mutations[d].mutation\n          ? node_data.mutations[d].mutation\n              .map((y) => {\n                const x = data.mutation_mapping[y];\n\n                return x.gene + \":\" + x.orig_res + x.position + x.final_res;\n              })\n              .sort()\n              .join(\", \")\n          : \"\",\n      getColor: [180, 180, 180],\n      getAngle: 0,\n\n      billboard: true,\n      getTextAnchor: \"start\",\n      getAlignmentBaseline: \"center\",\n    }),\n    [\n      data.mutation_mapping,\n      mutTextIds,\n      node_data.mutations,\n      node_data.x,\n      node_data.y,\n    ]\n  );\n\n  const text_layers = useMemo(() => {\n    if (true) {\n      return [\n        new TextLayer({\n          ...text_config,\n          visible: viewState.zoom > 18.5,\n          getSize: viewState.zoom > 19 ? 12 : 9.5,\n          modelMatrix: MMatrix,\n        }),\n      ];\n    } else {\n      return [];\n    }\n  }, [text_config, MMatrix, viewState]);\n\n  const text_layer_muts = useMemo(() => {\n    if (!showMutText) {\n      return [];\n    }\n    return [\n      new TextLayer({\n        ...text_config_muts,\n        visible: true,\n        getSize: viewState.zoom > 19 ? 12 : 9.5,\n        modelMatrix: MMatrix,\n        getColor: [0, 0, 0],\n      }),\n    ];\n  }, [text_config_muts, viewState, MMatrix, showMutText]);\n\n  const pos_layer_mini = useMemo(() => {\n    let data;\n    if (viewState.nw !== undefined) {\n      data = [\n        {\n          contour: [\n            [-100, -100],\n            [100, -100],\n            [100, viewState.nw[1]],\n            [-100, viewState.nw[1]],\n          ],\n          color: [100, 100, 100],\n        },\n        {\n          contour: [\n            [-100, viewState.nw[1]],\n            [100, viewState.nw[1]],\n            [100, viewState.se[1]],\n            [-100, viewState.se[1]],\n          ],\n          color: [255, 255, 255],\n        },\n\n        {\n          contour: [\n            [-100, viewState.se[1]],\n            [100, viewState.se[1]],\n            [100, 300],\n            [-100, 300],\n          ],\n          color: [150, 150, 150],\n        },\n      ];\n    } else {\n      data = [];\n    }\n\n    return new PolygonLayer({\n      id: \"mini-pos\",\n      data: data,\n      opacity: 0.05,\n      radiusMinPixels: 4,\n      radiusMaxPixels: 4,\n      getRadius: 4,\n      getLineWidth: 0.1,\n      getPolygon: (d) => {\n        return d.contour;\n      },\n      getFillColor: (d) => d.color,\n    });\n  }, [viewState]);\n\n  const layers = useMemo(\n    () => [\n      poly_layer,\n      ...text_layers,\n      ...line_layers,\n      // text_layer,\n\n      ...scatter_layers,\n\n      ...search_layers,\n\n      pos_layer_mini,\n      selected_node_layer,\n      ...text_layer_muts,\n    ],\n    [\n      poly_layer,\n      text_layers,\n\n      scatter_layers,\n      line_layers,\n\n      pos_layer_mini,\n      search_layers,\n      // text_layer\n      selected_node_layer,\n      text_layer_muts,\n    ]\n  );\n\n  window.deck = deckRef;\n\n  const views = useMemo(\n    () => [\n      new OrthographicView({ id: \"main\", controller: true }),\n      new OrthographicView({\n        id: \"minimap\",\n        x: \"79%\",\n        y: \"1%\",\n        width: \"20%\",\n        height: \"35%\",\n        borderWidth: \"1px\",\n        controller: true,\n      }),\n    ],\n    []\n  );\n\n\n\n  const hoverStuff = useMemo(() => {\n    if (hoverInfo && hoverInfo.object) {\n\n\n      const date = data.date_mapping[node_data.dates[hoverInfo.object]];\n      let aa, aa_col;\n      if (colourBy.variable === \"aa\") {\n        aa = getResidue(hoverInfo.object, colourBy.gene, colourBy.residue);\n        aa_col = toRGBCSS(aa);\n      }\n\n      const mutations =\n        node_data.mutations[hoverInfo.object] &&\n        node_data.mutations[hoverInfo.object].mutation &&\n        node_data.mutations[hoverInfo.object].mutation\n          .map((y) => {\n            const x = data.mutation_mapping[y];\n\n            return x.gene + \":\" + x.orig_res + x.position + x.final_res;\n          })\n          .sort();\n      return (\n        <div\n          className=\"bg-gray-100 p-3 opacity-90 text-sm\"\n          style={{\n            position: \"absolute\",\n            zIndex: 1,\n            pointerEvents: \"none\",\n            left: hoverInfo.x,\n            top: hoverInfo.y,\n          }}\n        >\n          <h2 className=\"font-bold\">{node_data.names[hoverInfo.object]}</h2>\n          {aa && (\n            <div className=\"bg-white p-1 inline-block\">\n              {colourBy.gene}:{colourBy.residue}\n              <span\n                className=\"font-bold\"\n                style={{\n                  color: aa_col,\n                }}\n              >\n                {aa}\n              </span>\n            </div>\n          )}\n\n          {metadataItemList.map(x=>{\n            const info =getMetadataItem(x)\n            const value = info.mapping[info.node_values[hoverInfo.object]]\n            return  <div key={x}\n            style={{\n              color:\n                colourBy.variable === x ? toRGBCSS(value) : \"inherit\",\n            }}\n          >\n            {value}\n          </div>\n\n          })\n\n    }\n        \n\n         \n          {date}\n\n          <div className=\"text-xs text-gray-600\">\n            <div className=\"mt-1\">\n              <b>Node mutations</b>\n            </div>\n\n            {mutations ? mutations.join(\", \") : <i>No coding mutations</i>}\n          </div>\n        </div>\n      );\n    }\n  }, [data, node_data, hoverInfo, colourBy, getResidue, getMetadataItem, metadataItemList]);\n  const spinnerShown = useMemo(() => node_data.ids.length === 0, [node_data]);\n\n  const zoomIncrement = useCallback(\n    (increment) => {\n      const newViewState = {\n        ...viewState,\n        zoom: viewState.zoom + increment,\n\n        needs_update: true,\n      };\n      const newViewState2 = {\n        ...newViewState,\n        target: [getXval(newViewState), newViewState.target[1]],\n      };\n\n      onViewStateChange({ viewState: newViewState2, oldViewState: viewState });\n    },\n    [viewState, onViewStateChange]\n  );\n\n  const getMaxOfArrayUsingReduce = (array) =>\n    array.reduce((max, b) => (b > max ? b : max), array[0]);\n\n  const getMinOfArrayUsingReduce = (array) =>\n    array.reduce((min, b) => (b < min ? b : min), array[0]);\n\n  useEffect(() => {\n    if (zoomToSearch.index !== null && zoomToSearch.index !== undefined && zoomToSearch.index !== -1) {\n     \n\n      \n\n      const valid_search = search_configs_initial.filter(\n        (x) => x.original_index === zoomToSearch.index\n      )\n\n      if(valid_search.length === 0){\n        return\n\n      }\n      \n\n      const y_values = valid_search[0].data.map(x=>node_data.y[x])\n\n\n      if(y_values.length === 0){\n        return\n\n      }\n      \n\n      const max_y_val = getMaxOfArrayUsingReduce(y_values)\n      const min_y_val = getMinOfArrayUsingReduce(y_values)\n  \n      \n      const newViewState = {\n        ...viewState,\n        zoom: 9-Math.log2(max_y_val-min_y_val+.001),\n\n        needs_update: true,\n      };\n\n\n      const newViewState2 = {\n        ...newViewState,\n        target: [\n          getXval(newViewState),\n          (min_y_val + max_y_val) / 2\n          \n            \n          ,\n        ],\n      };\n\n      setViewState(newViewState2);\n    }\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [zoomToSearch,node_data,search_configs_initial]);\n\n  return (\n    <div\n      className=\"w-full h-full relative\"\n      onClick={onClickOrMouseMove}\n      onPointerMove={onClickOrMouseMove}\n      onPointerDown={onClickOrMouseMove}\n    >\n      {\" \"}\n      <DeckGL\n        pickingRadius={10}\n        onAfterRender={() => {\n          if (viewState.nw === undefined || viewState.needs_update) {\n            onViewStateChange({ viewState });\n          }\n        }}\n        ref={deckRef}\n        views={views}\n        viewState={viewState}\n        onViewStateChange={onViewStateChange}\n        layerFilter={useCallback(\n          ({ layer, viewport }) => {\n            const first_bit =\n              (layer.id.startsWith(\"main\") && viewport.id === \"main\") ||\n              (layer.id.startsWith(\"mini\") && viewport.id === \"minimap\");\n            const second_bit =\n              layer.id.includes(\"mini\") |\n              ((viewState.zoom < zoomThreshold) & !layer.id.includes(\"fine\")) |\n              ((viewState.zoom >= zoomThreshold) & !layer.id.includes(\"coarse\"));\n\n            return first_bit & second_bit;\n          },\n          [viewState.zoom]\n        )}\n        controller={true}\n        layers={layers}\n      >\n        {hoverStuff}\n        <div style={{ position: \"absolute\", right: \"0.2em\", bottom: \"0.2em\" }}>\n          <button\n            className=\" w-12 h-10 bg-gray-100  p-1 rounded border-gray-300 text-gray-700 opacity-60 hover:opacity-100\"\n            onClick={() => {\n              zoomIncrement(0.6);\n            }}\n          >\n            <BiZoomIn className=\"mx-auto  w-5 h-5 \" />\n          </button>\n          <button\n            className=\" w-12 h-10 bg-gray-100 ml-1 p-1 rounded border-gray-300 text-gray-700  opacity-60  hover:opacity-100\"\n            onClick={() => {\n              zoomIncrement(-0.6);\n            }}\n          >\n            <BiZoomOut className=\"mx-auto w-5 h-5 \" />\n          </button>\n        </div>\n      </DeckGL>\n      {spinnerShown && <Spinner isShown={true} progress={progress} />}\n    </div>\n  );\n}\n\nexport default Deck;\n","import React from \"react\";\nimport { BsTrash } from \"react-icons/bs\";\nimport { DebounceInput } from \"react-debounce-input\";\nimport { BiZoomIn } from \"react-icons/bi\";\nimport { GiRobotGrab } from \"react-icons/gi\";\nfunction numberWithCommas(x) {\n  const internationalNumberFormat = new Intl.NumberFormat(\"en-US\");\n  return internationalNumberFormat.format(x);\n}\n\nfunction toTitleCase(str) {\n  return str.replace(\n    /\\w\\S*/g,\n    function(txt) {\n      return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\n    }\n  );\n}\n\nfunction SearchItem({\n  metadataItemList,\n  id,\n  category,\n  enabled,\n  value,\n  setThis,\n  removeItem,\n  index,\n  searchColors,\n  numResultsHere,\n  zoomToMe,\n  aa_pos,\n  aa_final,\n  aa_gene,\n  all_genes,\n  min_tips,\n  search_for_ids,\n  current_accession,\n}) {\n  const explanations = {\n    name: \"Enter a sequence name like QEUH-13ADA01\",\n    lineage:\n      \"Enter a PANGO lineage like B.1.1.7. Note that sub-lineages will not be found by this method.\",\n    country: \"Enter a country like 'India' \",\n    mutation:\n      \"Enter an amino acid mutation. E.g. gene S, position 681, to R. Note that this will identify the internal node at which the mutation occurred, rather than all the leaf nodes with the mutation.\",\n  };\n\n  const thecolor = searchColors[index % searchColors.length];\n  //console.log(\"key\", id);\n  return (\n    <div className=\"border-gray-100 border-b mb-3 pb-3\">\n      <input\n        name=\"isGoing\"\n        type=\"checkbox\"\n        style={{\n          outline:\n            enabled &&\n            (value.length > 0 ||\n              ![\"name\", ...metadataItemList].includes(category))\n              ? `1px solid rgb(${thecolor[0]},${thecolor[1]},${thecolor[2]})`\n              : \"0px\",\n          outlineOffset: \"2px\",\n        }}\n        className=\"w-3 h-3 m-3\"\n        checked={enabled}\n        onChange={(event) => setThis({ enabled: !enabled })}\n      />\n      <select\n        className=\" w-36 border py-2 px-1 text-grey-darkest text-sm h-10\"\n        value={category}\n        onChange={(event) => setThis({ category: event.target.value })}\n      >\n        <option value=\"name\">Sequence name</option>\n        {metadataItemList.map((item) => (<option value={item} key={item}  >{toTitleCase(item)}</option>))}\n        <option value=\"mutation\">AA mutation</option>\n        {/*<option value=\"epis\">EPI_ISL ids</option>*/}\n        <option value=\"genbanks\">GenBank ids</option>\n      </select>\n\n      {[\"mutation\", \"epis\", \"genbanks\"].includes(category) && (\n        <button\n          className=\"  bg-gray-100 text-sm mx-auto p-1 rounded border-gray-300 border  text-gray-700 ml-8 h-8\"\n          onClick={() => removeItem(id)}\n        >\n          <BsTrash className=\"inline-block \" />\n        </button>\n      )}\n\n      {(category === \"epis\" || category === \"genbanks\") && (\n        <div>\n          <DebounceInput\n            className=\"w-48 h-32 border p-1 m-1\"\n            element=\"textarea\"\n            value={search_for_ids}\n            onChange={(event) =>\n              setThis({ search_for_ids: event.target.value })\n            }\n          />\n          <br />\n          <div className=\"h-10\">\n            {current_accession && (\n              <button\n                onClick={(event) =>\n                  setThis({\n                    search_for_ids:\n                      search_for_ids === \"\"\n                        ? current_accession\n                        : search_for_ids + \"\\n\" + current_accession,\n                  })\n                }\n                className=\" bg-gray-100  mx-auto p-1 rounded border-gray-300 border  text-gray-700 ml-2 h-6 text-xs\"\n              >\n                <GiRobotGrab className=\"inline mr-2 \" />\n                Add selected node\n              </button>\n            )}{\" \"}\n          </div>\n        </div>\n      )}\n      {category === \"mutation\" && (\n        <div\n          className=\"\n       p-2 m-2 ml-2  text-gray-700\"\n        >\n          {\" \"}\n          <label className=\"text-sm\">Gene:</label>\n          <select\n            className=\"border py-1 px-1 text-grey-darkest text-sm h-7 w-20 m-3 my-1\"\n            value={aa_gene}\n            onChange={(event) => setThis({ aa_gene: event.target.value })}\n          >\n            {all_genes &&\n              all_genes.map((x) => (\n                <option key={x} value={x}>\n                  {x}\n                </option>\n              ))}\n          </select>\n          <div>\n            <label className=\"text-sm\">Mutation at residue:</label>{\" \"}\n            <DebounceInput\n              debounceTimeout={300}\n              type=\"number\"\n              value={aa_pos}\n              onChange={(event) => setThis({ aa_pos: event.target.value })}\n              className=\"border py-1 px-1 text-grey-darkest text-sm h-7 w-20 m-3 my-1\"\n              placeholder=\"e.g. 681\"\n            />{\" \"}\n            <label className=\"text-sm\"> to</label>\n            <select\n              value={aa_final}\n              onChange={(event) => setThis({ aa_final: event.target.value })}\n              className=\"border py-1 px-1 text-grey-darkest text-sm h-7 w-16 m-3 my-1\"\n            >\n              {[\n                \"any\",\n                \"A\",\n                \"C\",\n                \"D\",\n                \"E\",\n                \"F\",\n                \"G\",\n                \"H\",\n                \"I\",\n                \"J\",\n                \"K\",\n                \"L\",\n                \"M\",\n                \"N\",\n                \"P\",\n                \"Q\",\n                \"R\",\n                \"S\",\n                \"T\",\n                \"U\",\n                \"V\",\n                \"W\",\n                \"Y\",\n              ].map((x) => (\n                <option key={x} value={x}>\n                  {x}\n                </option>\n              ))}\n            </select>\n            <br />\n            <label className=\"text-sm\">Min descendant genomes:</label>\n            <DebounceInput\n              debounceTimeout={300}\n              value={min_tips}\n              type=\"number\"\n              onChange={(event) =>\n                setThis({ min_tips: parseInt(event.target.value) })\n              }\n              className=\"border py-1 px-1 text-grey-darkest text-sm h-7 w-16 m-3 my-1\"\n            />\n          </div>\n        </div>\n      )}\n      {[\"name\", ...metadataItemList].includes(category) && (\n        <DebounceInput\n          className=\" w-32 border py-2 px-3 text-grey-darkest h-10\"\n          value={value}\n          onChange={(event) => setThis({ value: event.target.value })}\n          debounceTimeout={300}\n        />\n      )}\n      {[\"mutation\", \"epis\", \"genbanks\"].includes(category) ? (\n        <></>\n      ) : (\n        <button\n          className=\" bg-gray-100 text-sm mx-auto p-1 rounded border-gray-300 border  text-gray-700 ml-2 h-8\"\n          onClick={() => removeItem(id)}\n        >\n          <BsTrash className=\"inline-block \" />\n        </button>\n      )}\n      <div className=\"text-sm text-gray-600 px-3\">{explanations[category]}</div>\n      <div className=\"text-sm text-gray-900 px-3\">\n        {\" \"}\n        {(value.length > 0 ||\n          category === \"mutation\" ||\n          category === \"epis\" ||\n          category === \"genbanks\") && (\n          <>\n            {\" \"}\n            {numberWithCommas(numResultsHere)} result\n            {numResultsHere !== 1 && <>s</>}\n          </>\n        )}\n        {numResultsHere >= 1 && enabled && (\n          <>\n            {\" \"}\n            <button\n              onClick={zoomToMe}\n              className=\"inline-block bg-gray-100 text-sm mx-auto p-1 rounded border-gray-300 border m-1 text-gray-700\"\n            >\n              <BiZoomIn className=\"inline-block mr-1\" />\n              locate\n            </button>\n          </>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default SearchItem;\n","import React, { useEffect, useMemo, useState } from \"react\";\nimport SearchItem from \"./SearchItem\";\nimport { FaSearch } from \"react-icons/fa\";\nimport { RiAddCircleLine } from \"react-icons/ri\";\nimport { BiPalette } from \"react-icons/bi\";\nimport { BsInfoCircle } from \"react-icons/bs\";\nimport { DebounceInput } from \"react-debounce-input\";\nimport { IoMdSettings } from \"react-icons/io\";\nfunction toTitleCase(str) {\n  return str.replace(\n    /\\w\\S*/g,\n    function(txt) {\n      return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\n    }\n  );\n}\n\nfunction get_epi_isl_url(epi_isl) {\n  if (epi_isl.length > 4) {\n    return (\n      \"https://www.epicov.org/acknowledgement/\" +\n      epi_isl.slice(-4, -2) +\n      \"/\" +\n      epi_isl.slice(-2) +\n      \"/\" +\n      epi_isl +\n      \".json\"\n    );\n  }\n}\nget_epi_isl_url(\"\");\nfunction numberWithCommas(x) {\n  const internationalNumberFormat = new Intl.NumberFormat(\"en-US\");\n  return internationalNumberFormat.format(x);\n}\n\nfunction SearchPanel({\n  metadataItemList,\n  getMetadataItem,\n  searchItems,\n  setSearchItems,\n  colourBy,\n  setColourBy,\n  selectedNode,\n  data,\n  searchColors,\n  numSearchResults,\n  totalSeqs,\n  setZoomToSearch,\n  showMutText,\n  setShowMutText,\n}) {\n  //const [acknowledgements, setAcknowledgements] = useState({});\n  const acknowledgements = null;\n  const node_data = data.node_data;\n\n  const [configMode, setConfigMode] = useState(\"colour\");\n\n  const cur_genbank = useMemo(() => {\n    if (selectedNode) {\n      const cur_genbank = node_data.genbanks[selectedNode];\n      if (cur_genbank && cur_genbank !== \"nan\") {\n        return cur_genbank;\n      }\n    }\n    return \"\";\n  }, [node_data, selectedNode]);\n\n  const cur_epi_isl = useMemo(() => {\n    if (selectedNode) {\n      const cur_epi_isl = node_data.epi_isl_numbers[selectedNode];\n      if (cur_epi_isl && cur_epi_isl !== 0) {\n        return \"EPI_ISL_\" + cur_epi_isl;\n      }\n    }\n    return \"\";\n  }, [node_data, selectedNode]);\n\n  useEffect(() => {\n    /*\n    if (cur_epi_isl) {\n      fetch(get_epi_isl_url(cur_epi_isl))\n        .then((response) => response.json())\n        .then((data) => setAcknowledgements(data));\n    } else {\n      setAcknowledgements(null);\n    }*/\n  }, [cur_epi_isl]);\n\n  const selected_muts = useMemo(() => {\n    if (!selectedNode) {\n      return [];\n    }\n    let cur_node = selectedNode;\n    let mutations = {};\n    while (cur_node !== node_data.parents[cur_node]) {\n      const these_muts = node_data.mutations[cur_node].mutation\n        ? Object.fromEntries(\n            node_data.mutations[cur_node].mutation.map((x) => {\n              const this_mut = data.mutation_mapping[x];\n              return [\n                this_mut.gene + \":\" + this_mut.position,\n                this_mut.final_res,\n              ];\n            })\n          )\n        : {};\n      mutations = { ...these_muts, ...mutations };\n      cur_node = node_data.parents[cur_node];\n    }\n    return Object.entries(mutations)\n      .map((x) => x[0] + x[1])\n      .sort();\n  }, [data, node_data, selectedNode]);\n\n\n\n\n  return (\n    <div className=\"overflow-y-auto\" style={{ height: \"calc(100vh - 5em)\" }}>\n      <div className=\" border-t md:border-t-0 border-b border-gray-300\">\n        <div className=\"mt-3 mb-3 text-gray-500 text-sm\">\n          Displaying {numberWithCommas(totalSeqs)} sequences from INSDC, COG-UK\n          and CNCB\n        </div>\n        <h2 className=\"text-xl mt-5 mb-4 text-gray-700\">\n          <FaSearch className=\"inline-block mr-2\" />\n          Search\n        </h2>\n        {searchItems.map(function (item, index) {\n          return (\n            <SearchItem\n            metadataItemList = {metadataItemList}\n              numResultsHere={numSearchResults[index]}\n              searchColors={searchColors}\n              index={index}\n              key={item.id}\n              id={item.id}\n              search_for_ids={item.search_for_ids}\n              category={item.category}\n              aa_gene={item.aa_gene}\n              aa_pos={item.aa_pos}\n              aa_final={item.aa_final}\n              all_genes={data.all_genes}\n              min_tips={item.min_tips}\n              value={item.value}\n              setThis={(mapping) => {\n                searchItems[index] = { ...searchItems[index], ...mapping };\n                setSearchItems([...searchItems]);\n              }}\n              zoomToMe={() => {\n                console.log(index);\n                setZoomToSearch({ index });\n              }}\n              removeItem={(id) => {\n                // console.log(\"remove\", id);\n                setSearchItems(searchItems.filter((x) => x.id !== id));\n              }}\n              enabled={item.enabled}\n              current_accession={\n                item.category === \"genbanks\" && cur_genbank\n                  ? cur_genbank\n                  : item.category === \"epis\" && cur_epi_isl\n                  ? cur_epi_isl\n                  : \"\"\n              }\n            ></SearchItem>\n          );\n        })}\n\n        <button\n          className=\"block bg-gray-100 text-sm mx-auto p-1 rounded border-gray-300 border m-5 text-gray-700\"\n          onClick={() =>\n            setSearchItems([\n              ...searchItems,\n              {\n                id: Math.random(),\n                category: \"name\",\n                value: \"\",\n                enabled: true,\n                aa_final: \"any\",\n                min_tips: 1,\n                aa_gene: \"S\",\n                search_for_ids: \"\",\n              },\n            ])\n          }\n        >\n          <RiAddCircleLine className=\"inline-block mr-2\" />\n          Add a new search\n        </button>\n      </div>\n      {configMode === \"other\" && (\n        <div className=\"border-b border-gray-300 pb-3\">\n          <h2 className=\"text-xl mt-5 mb-4 text-gray-700\">\n            <button\n              onClick={() => setConfigMode(\"colour\")}\n              className=\"float-right mr-5 block bg-gray-100 text-sm mx-auto p-1 rounded border-gray-300 border m-5 text-gray-700\"\n            >\n              <BiPalette className=\"inline-block mr-1 ml-1\" />\n            </button>\n            <IoMdSettings className=\"inline-block mr-2\" />\n            Other settings{\" \"}\n          </h2>\n          Show mutation text{\" \"}\n          <input\n            type=\"checkbox\"\n            checked={showMutText}\n            onChange={(event) => {\n              console.log(showMutText);\n              setShowMutText(!showMutText);\n            }}\n          />\n          <div className=\"text-sm text-gray-500 p-5\">\n            Mutations are only shown at nodes with at least 10 descendant\n            genomes\n          </div>\n        </div>\n      )}\n      {configMode === \"colour\" && (\n        <div className=\"border-b border-gray-300 pb-3\">\n          <h2 className=\"text-xl mt-5 mb-4 text-gray-700\">\n            <button\n              onClick={() => setConfigMode(\"other\")}\n              className=\"float-right mr-5 block bg-gray-100 text-sm mx-auto p-1 rounded border-gray-300 border m-5 text-gray-700\"\n            >\n              <IoMdSettings className=\"inline-block mr-1 ml-1\" />\n            </button>\n            <BiPalette className=\"inline-block mr-2\" />\n            Colour by{\" \"}\n          </h2>\n\n          <select\n            className=\"border py-2 px-3 text-grey-darkest\"\n            value={colourBy.variable}\n            onChange={(event) =>\n              setColourBy({ ...colourBy, variable: event.target.value })\n            }\n          >\n             {metadataItemList.map((item) => (<option key={item} value={item}>{toTitleCase(item)}</option>))}\n            <option value=\"aa\">Amino acid at site</option>\n            <option value=\"none\">None</option>\n          </select>\n          {colourBy.variable === \"aa\" && (\n            <div\n              className=\"\n     p-2 m-1 ml-0  text-gray-700\"\n            >\n              {\" \"}\n              <label className=\"text-sm\">Gene</label>\n              <select\n                className=\"border py-1 px-1 text-grey-darkest text-sm h-7 w-20 m-3 my-1\"\n                value={colourBy.gene}\n                onChange={(event) =>\n                  setColourBy({ ...colourBy, gene: event.target.value })\n                }\n              >\n                {data.all_genes &&\n                  data.all_genes.map((x) => (\n                    <option key={x} value={x}>\n                      {x}\n                    </option>\n                  ))}\n              </select>\n              <div>\n                <label className=\"text-sm\">Residue</label>{\" \"}\n                <DebounceInput\n                  debounceTimeout={300}\n                  type=\"number\"\n                  value={colourBy.residue}\n                  onChange={(event) =>\n                    setColourBy({ ...colourBy, residue: event.target.value })\n                  }\n                  className=\"border py-1 px-1 text-grey-darkest text-sm h-7 w-16 m-3 my-1\"\n                />\n              </div>\n              <div className=\"hidden\">\n                Colour lines{\" \"}\n                <input\n                  type=\"checkbox\"\n                  value={colourBy.colourLines}\n                  onChange={(event) =>\n                    setColourBy({\n                      ...colourBy,\n                      colourLines: event.target.value,\n                    })\n                  }\n                ></input>\n              </div>\n            </div>\n          )}\n        </div>\n      )}\n\n      <div>\n        {selectedNode && (\n          <div className=\"text-gray-500 mr-3\">\n            <h2 className=\"text-xl mt-5 mb-4 text-gray-700\">\n              <BsInfoCircle className=\"inline-block mr-2\" />\n              Node info\n            </h2>\n\n            <div className=\"font-bold\">\n              {node_data.names[selectedNode] ? (\n                node_data.names[selectedNode]\n              ) : (\n                <>Un-named internal node</>\n              )}\n            </div>\n            {cur_genbank && (\n              <div>\n                <span className=\"font-semibold\">Genbank:</span>{\" \"}\n                <a\n                  target=\"_blank\"\n                  rel=\"noreferrer\"\n                  className=\"underline\"\n                  href={\"https://www.ncbi.nlm.nih.gov/nuccore/\" + cur_genbank}\n                >\n                  {cur_genbank}\n                </a>\n              </div>\n            )}\n            <div>\n              {false && cur_epi_isl && (\n                <>\n                  <span className=\"font-semibold\">GISAID:</span> {cur_epi_isl}\n                </>\n              )}\n            </div>\n            <div>\n              <span className=\"font-semibold\">Date:</span>{\" \"}\n              {data.date_mapping[node_data.dates[selectedNode]]}\n            </div>\n           \n\n            {metadataItemList.map(x=>{\n            const info =getMetadataItem(x)\n            const value = info.mapping[info.node_values[selectedNode]]\n            return  <div\n          \n          >\n            <span className=\"font-semibold\">{x}:</span>{\" \"} {value}\n          </div>\n\n          })\n\n    }\n            <span className=\"font-semibold\">Mutations from root:</span>\n            <div className=\"text-xs mr-5 mb-3\">\n              {\n                selected_muts && selected_muts.join(\", \") //TODO assign the top thing to a constant and use it again\n              }\n            </div>\n            {false && acknowledgements && (\n              <div>\n                {\" \"}\n                <span className=\"font-semibold\">Acknowledgements</span>\n                <div className=\"text-xs mr-5 \">\n                  <b>Originating lab:</b> {acknowledgements.covv_orig_lab}\n                  <br />\n                  <b>Submitting lab:</b> {acknowledgements.covv_subm_lab}\n                  <br />\n                  <b>Authors:</b> {acknowledgements.covv_authors}\n                </div>\n              </div>\n            )}\n          </div>\n            )}\n        \n      </div>\n    </div>\n  );\n}\n\nexport default SearchPanel;\n","import \"./App.css\";\nimport React, { useEffect, useState, useCallback, useMemo } from \"react\";\nimport Deck from \"./Deck\";\nimport SearchPanel from \"./components/SearchPanel\";\nimport axios from \"axios\";\nimport pako from \"pako\";\n\n//import {FaGithub} from  \"react-icons/fa\";\n\n\nvar protobuf = require(\"protobufjs\");\n\n\n\n\nprotobuf.parse.defaults.keepCase = true;\n\nconst searchColors = [\n  [255, 0, 0],\n  [183, 0, 255],\n  [255, 213, 0],\n\n  [0, 0, 255],\n  [0, 255, 255],\n];\n\n\n\nfunction Taxodium({protoUrl,uploadedData, query,setQuery}) {\n  const [zoomToSearch, setZoomToSearchOrig] = useState({index: (query.zoomToSearch ? parseInt(query.zoomToSearch) : null)} );\n  const setZoomToSearch = useCallback( (info) => {\n \n    let newQuery = {...query}\n    delete newQuery.zoomToSearch\n    setQuery(newQuery);\n    setZoomToSearchOrig(info);\n  }\n  , [setZoomToSearchOrig,query,setQuery]);\n  const [showMutText, setShowMutText] = useState(false);\n\n  const searchItems = useMemo(() => JSON.parse(query.search), [query.search]);\n\n  const setSearchItems = useCallback(\n    (search) => {\n      // Clear zoomToSearch if it is set\n      setZoomToSearchOrig({index: -1});\n      setQuery({ ...query, search: JSON.stringify(search), zoomToSearch: -1 });\n      \n    },\n    [setQuery, query]\n  );\n\n  const setColourBy = useCallback(\n    (colourBy) => {\n      setQuery({ ...query, colourBy: JSON.stringify(colourBy) });\n    },\n    [setQuery, query]\n  );\n  const colourBy = useMemo(() => JSON.parse(query.colourBy), [query.colourBy]);\n\n  const setColourByWithCheck = useCallback(\n    (x) => {\n      setColourBy(x);\n    },\n    [setColourBy]\n  );\n  const [nodeData, setNodeData] = useState({\n    status: \"not_attempted\",\n    data: { node_data: { ids: [] } },\n  });\n\n  const metadataItemList = useMemo(()=>{\n    if(!nodeData.data.node_data || !nodeData.data.node_data.metadata_singles){\n      return []\n    }\n     return nodeData.data.node_data.metadata_singles.map(x=>x.metadata_name)\n\n    \n  },[nodeData])\n\n  const getMetadataItem = useCallback((name)=>{\n   \n    if(!nodeData.data.node_data || !nodeData.data.node_data.metadata_singles){\n      return {mapping:[],node_data:[]}\n    }\n    const metadata_item = nodeData.data.node_data.metadata_singles.filter(x=>x.metadata_name===name)[0]\n    return metadata_item\n\n\n  },[nodeData])\n\n  const [selectedNode, setSelectedNode] = useState(null);\n\n\nfunction getRawfile(protoUrl, uploadedData) {\n  if(uploadedData){\n    return new Promise((resolve, reject) => {resolve(uploadedData)} )\n      }    else{\n        console.log(\"aaaa\",protoUrl)\n\n  return axios.get(protoUrl, {\n            responseType: \"arraybuffer\",\n            onDownloadProgress: (progressEvent) => {\n              let percentCompleted = Math.floor(\n                1 * (progressEvent.loaded / 50000000) * 100\n              );\n              setNodeData({\n                status: \"loading\",\n                progress: percentCompleted,\n                data: { node_data: { ids: [] } },\n              });\n            },\n          })\n          .then(function (response) {\n            if(protoUrl.endsWith(\".gz\")){\n              return pako.ungzip(response.data);\n            }\n            else{\n              return response.data;\n            \n          }})\n        }\n      }\n\n  useEffect(() => {\n    if (nodeData.status === \"not_attempted\") {\n      console.log(\"starting dl\");\n      setNodeData({\n        status: \"loading\",\n        progress: 0,\n        data: { node_data: { ids: [] } },\n      });\n\n      protobuf.load(\"./taxodium.proto\").then(function (root) {\n        getRawfile(query.protoUrl,uploadedData).then(function (buffer) {\n            console.log(\"buffer loaded\");\n            var NodeList = root.lookupType(\"AllData\");\n\n            var message = NodeList.decode(new Uint8Array(buffer));\n            var result = NodeList.toObject(message);\n\n            if(result.node_data.metadata_singles){\n              \n\n              result.node_data.metadata_singles.forEach(x=>{x.metadata_name=x.metadata_name.toLowerCase()} )\n\n            }\n\n\n            if(!result.node_data.metadata_singles){\n\n              result.node_data.metadata_singles = [\n                {metadata_name:\"country\",mapping:result.country_mapping, node_values: result.node_data.countries},\n                {metadata_name:\"lineage\",mapping:result.lineage_mapping, node_values: result.node_data.lineages}\n               ]\n\n            }\n\n            \n\n\n            result.node_data.ids = [...Array(result.node_data.x.length).keys()];\n\n            const all_genes = new Set();\n            result.mutation_mapping = result.mutation_mapping.map((x, i) => {\n              const mutation_array = {};\n\n              const [gene, rest] = x.split(\":\");\n              if (rest) {\n                const [orig_res, position, final_res] = rest.split(\"_\");\n                mutation_array.gene = gene;\n                mutation_array.position = position;\n                mutation_array.orig_res = orig_res;\n                mutation_array.final_res = final_res;\n                all_genes.add(gene);\n              }\n              mutation_array.id = i;\n              return mutation_array;\n            });\n\n            result.all_genes = Array.from(all_genes).sort();\n            setNodeData({ status: \"loaded\", data: result });\n          });\n      });\n    }\n  }, [nodeData.status, query.protoUrl, uploadedData]);\n\n  const data = useMemo(\n    () =>\n      nodeData.status === \"loaded\" ? nodeData.data : { node_data: { ids: [] } },\n    [nodeData]\n  );\n\n  const scatterIds = useMemo(\n    () => data.node_data.ids.filter((x) => data.node_data.names[x] !== \"\"),\n    [data]\n  );\n\n  const [search_configs_initial, numSearchResults, totalSeqs] = useMemo(() => {\n    const configs = searchItems.map((item, counter) => {\n    \n      let filter_function = (x)=> false;\n      const lowercase_query = item.value.toLowerCase().trim();\n      if (item.category === \"mutation\") {\n        \n        const subset = data.mutation_mapping\n          ? data.mutation_mapping\n              .filter(\n                (x) =>\n                  x.gene === item.aa_gene &&\n                  x.position === item.aa_pos &&\n                  (x.final_res === item.aa_final) | (item.aa_final === \"any\")\n              )\n              .map((x) => x.id)\n          : [];\n\n        filter_function = (x) =>\n          data.node_data.mutations[x] &&\n          data.node_data.mutations[x].mutation &&\n          subset.filter((i) => data.node_data.mutations[x].mutation.includes(i))\n            .length > 0 &&\n          data.node_data.num_tips[x] >= item.min_tips &&\n          data.node_data.parents[x] !== x;\n      }\n\n      if (item.category === \"name\") {\n        filter_function = (x) =>\n          data.node_data.names[x].toLowerCase().includes(lowercase_query); //TODO precompute lowercase mapping for perf?\n      }\n\n      if (metadataItemList.includes(item.category )){\n        const info =getMetadataItem(item.category)\n        filter_function = (x) =>\n          info.mapping[info.node_values[x]].toLowerCase() ===\n          lowercase_query; //TODO precompute lowercase mapping for perf\n      }\n      \n\n      if (item.category === \"epis\") {\n        if (!item.search_for_ids) {\n          filter_function = (x) => false;\n        } else {\n          const the_list = item.search_for_ids\n            .split(\"\\n\")\n            .map((x) => parseInt(x.trim().replace(\"EPI_ISL_\", \"\")))\n            .filter((x) => x !== 0);\n\n          filter_function = (x) =>\n            the_list.includes(data.node_data.epi_isl_numbers[x]);\n        }\n      }\n\n      if (item.category === \"genbanks\") {\n        if (!item.search_for_ids) {\n          filter_function = (x) => false;\n        } else {\n          const the_list = item.search_for_ids\n            .split(\"\\n\")\n            .map((x) => x.trim())\n            .filter((x) => x !== \"\");\n\n          filter_function = (x) =>\n            the_list.includes(data.node_data.genbanks[x]);\n        }\n      }\n\n      const enabled =\n        (item.category === \"mutation\" ||\n          item.category === \"epis\" ||\n          item.category === \"genbanks\" ||\n          (item.value !== null && item.value !== \"\")) &&\n        item.enabled;\n      return {\n        original_index: counter,\n        id: \"main-search-\" + counter,\n        enabled: enabled,\n        data:\n          (item.value !== \"\") |\n          (item.category === \"mutation\" ||\n            item.category === \"epis\" ||\n            item.category === \"genbanks\")\n            ? data.node_data.ids.filter(filter_function)\n            : [],\n        opacity: 0.7,\n        getRadius: 7 + counter * 2,\n        filled: false,\n        stroked: true,\n        radiusUnits: \"pixels\",\n        lineWidthUnits: \"pixels\",\n        lineWidthScale: 1,\n\n        getPosition: (d) => {\n          return [data.node_data.x[d], data.node_data.y[d]];\n        },\n        getFillColor: (d) => [0, 0, 0],\n        getLineColor: (d) => searchColors[counter % searchColors.length],\n      };\n    });\n\n    const num_results = configs.map((x) => x.data.length);\n    const filtered_configs = configs.filter((item) => item.enabled);\n    return [filtered_configs, num_results, scatterIds.length];\n  }, [data, searchItems, scatterIds, getMetadataItem, metadataItemList]);\n\n  \n\n  return (\n        <div className=\"main_content\">\n          <div className=\"md:grid md:grid-cols-12 h-full\">\n            <div className=\"md:col-span-8 h-3/6 md:h-full w-full\">\n              <Deck\n              metadataItemList = {metadataItemList}\n              getMetadataItem = {getMetadataItem}\n                showMutText={showMutText}\n                search_configs_initial={search_configs_initial}\n                scatterIds={scatterIds}\n                searchColors={searchColors}\n                selectedNode={selectedNode}\n                setSelectedNode={setSelectedNode}\n                searchItems={searchItems}\n                data={data}\n                progress={nodeData.progress}\n                colourBy={colourBy}\n                zoomToSearch={ zoomToSearch }\n              />\n            </div>\n            <div className=\"md:col-span-4 h-full bg-white  border-gray-600   pl-5 shadow-xl\">\n              <SearchPanel\n              metadataItemList = {metadataItemList}\n              getMetadataItem = {getMetadataItem}\n                showMutText={showMutText}\n                setShowMutText={setShowMutText}\n                setZoomToSearch={setZoomToSearch}\n                totalSeqs={totalSeqs}\n                numSearchResults={numSearchResults}\n                searchColors={searchColors}\n                selectedNode={selectedNode}\n                searchItems={searchItems}\n                data={data}\n                setSearchItems={setSearchItems}\n                colourBy={colourBy}\n                setColourBy={setColourByWithCheck}\n              />\n            </div>\n          </div>\n        </div>\n     \n  );\n}\n\nexport default Taxodium;\n"],"sourceRoot":""}