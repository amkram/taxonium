{"version":3,"sources":["components/AboutOverlay.jsx","hooks/useQueryAsState.js","App.jsx","reportWebVitals.js","index.js"],"names":["AboutOverlay","enabled","setEnabled","className","onClick","style","height","href","objectToQueryParams","obj","Object","keys","filter","key","undefined","map","join","encodeValues","nextObj","entries","value","encodeURIComponent","useQueryAsState","defaultValues","history","useHistory","useLocation","pathname","search","decodedSearch","useMemo","params","URLSearchParams","forEach","queryParamsToObject","updateRef","useRef","useEffect","current","updateQuery","useCallback","updatedParams","method","assign","removeUndefined","Taxodium","React","lazy","TaxodiumUploader","App","JSON","stringify","id","category","aa_final","min_tips","aa_gene","search_for_ids","colourBy","variable","gene","colourLines","residue","query","setQuery","useState","uploadedData","setUploadedData","aboutEnabled","setAboutEnabled","currentUrl","setCurrentUrl","fallback","protoUrl","type","onChange","event","target","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c28049b8.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction AboutOverlay({ enabled, setEnabled }) {\n  return (\n    <div className={`w-full ${enabled ? \"\" : \"hidden\"}`}>\n      <div\n        onClick={() => setEnabled(false)}\n        className=\"fixed w-full h-full bg-black opacity-80 z-40\"\n      ></div>\n      <div\n        onClick={() => setEnabled(false)}\n        className=\"fixed w-full h-full  opacity-100 z-40\"\n      >\n        <div\n          className=\" relative mx-auto mt-5 p-5 bg-white shadow-md z-100 w-4/5 overflow-y-auto opacity-100 \"\n          style={{ height: \"90vh\" }}\n        >\n          <button\n            className=\"absolute top-5 right-5 text-xl font-bold\"\n            onClick={() => setEnabled(false)}\n          >\n            X\n          </button>\n          <h1 className=\"font-bold mb-3 text-xl\">About Cov2Tree</h1>\n          This website allows you to explore a phylogenetic tree with more than\n          a million SARS-Cov-2 sequences, sequenced by researchers around the\n          world. The interface was made by{\" \"}\n          <a className=\"text-blue-700 underline\" href=\"http://theo.io/\">\n            Theo Sanderson\n          </a>{\" \"}\n          using a custom-developed open-source library called{\" \"}\n          <a\n            href=\"http://github.com/theosanderson/taxodium\"\n            className=\"text-blue-700 underline\"\n          >\n            {\" \"}\n            Taxodium\n          </a>\n          .<h1 className=\"font-bold mb-3 text-xl mt-6\">The sequences</h1>\n          <p>\n            This tree displays sequences generated by scientists all over the\n            world. The sequences are sourced from GenBank (i.e. the INSDC\n            databases), the China National Center for Bioinformation, and from\n            COG-UK. They are collated{\" \"}\n            <a\n              className=\"text-blue-700 underline\"\n              href=\"http://hgdownload.soe.ucsc.edu/goldenPath/wuhCor1/UShER_SARS-CoV-2//\"\n            >\n              here\n            </a>{\" \"}\n            by Angie Hinrichs and others at UCSC.\n          </p>\n          <p>\n            This website would be empty but for the hard work of all these\n            researchers, and their openness in submitting their work to public\n            databases, and we gratefully acknowledge this.\n          </p>\n          <h1 className=\"font-bold mb-3 text-xl mt-6\">The tree</h1>\n          <p>\n            The tree shown here is produced by the UCSC team, and made available{\" \"}\n            <a\n              className=\"text-blue-700 underline\"\n              href=\"http://hgdownload.soe.ucsc.edu/goldenPath/wuhCor1/UShER_SARS-CoV-2//\"\n            >\n              here\n            </a>\n            . It is derived from releases of Rob Lanfear's{\" \"}\n            <a\n              className=\"text-blue-700 underline\"\n              href=\"https://github.com/roblanf/sarscov2phylo\"\n            >\n              sarscov2phylo\n            </a>\n            , pruned to include only public sequences aggregated from GenBank,\n            COG-UK, and the China National Center for Bioinformation. The tree\n            has been re-rooted to Wuhan/Hu-1 (GenBank MN908947.3, RefSeq\n            NC_045512.2), and nodes with no associated mutations have been\n            collapsed. Sequences released after the final sarscov2phylo release\n            (Nov. 13, 2020) have been added to the tree using{\" \"}\n            <a\n              className=\"text-blue-700 underline\"\n              href=\"https://github.com/yatisht/usher\"\n            >\n              UShER\n            </a>\n            , developed by Yatish Turakhia. UShER development and tree inference\n            was done in Russ Corbett-Detig and David Haussler's groups at the\n            UCSC Genomics Institute. Tree-building work is carried out by the\n            UCSC team and described here only for completeness. They provide\n            metadata with the sequences, including lineages called by{\" \"}\n            <a\n              className=\"text-blue-700 underline\"\n              href=\"https://www.pango.network/\"\n            >\n              Pangolin\n            </a>\n            .\n          </p>\n          <h1 className=\"font-bold mb-3 text-xl mt-4\">Citations</h1>\n          <div className=\"text-sm\">\n            <p>\n              Lanfear, Rob (2020). A global phylogeny of SARS-CoV-2 sequences\n              from GISAID. Zenodo DOI: 10.5281/zenodo.3958883\n            </p>\n            <p>\n              Turakhia et al. (2021). Ultrafast Sample Placement on Existing\n              Trees (UShER) Empowers Real-Time Phylogenetics for the SARS-CoV-2\n              Pandemic.\n            </p>\n            <p>\n              Rambaut et al. (2020). A dynamic nomenclature proposal for\n              SARS-CoV-2 lineages to assist genomic epidemiology.\n            </p>\n          </div>\n          <h1 className=\"font-bold mb-3 text-xl mt-4\">Related tools</h1>\n          <div className=\"text-sm\">\n            <p>\n              You can also explore large phylogenies using{\" \"}\n              <a className=\"text-blue-700 underline\" href=\"https://pando.tools\">\n                Pando\n              </a>\n              ,{\" \"}\n              <a\n                className=\"text-blue-700 underline\"\n                href=\"https://microreact.org/\"\n              >\n                Microreact\n              </a>\n              , and sampled phylogenies on{\" \"}\n              <a\n                className=\"text-blue-700 underline\"\n                href=\"https://nextstrain.org/\"\n              >\n                NextStrain\n              </a>\n              .\n            </p>\n          </div>\n        </div>{\" \"}\n      </div>\n    </div>\n  );\n}\n\nexport default AboutOverlay;\n","// https://github.com/baruchiro/use-route-as-state\n// (via @richardgoater)\n\nimport { useCallback, useMemo, useEffect, useRef } from \"react\";\nimport { useHistory, useLocation } from \"react-router-dom\";\n\nconst queryParamsToObject = (search) => {\n  const params = {};\n  new URLSearchParams(search).forEach((value, key) => {\n    params[key] = value;\n  });\n  return params;\n};\n\nconst objectToQueryParams = (obj) =>\n  \"?\" +\n  Object.keys(obj)\n    .filter((key) => obj[key] !== undefined)\n    .map((key) => `${key}=${obj[key]}`)\n    .join(\"&\");\n\nconst encodeValues = (obj) => {\n  const nextObj = {};\n  for (const [key, value] of Object.entries(obj)) {\n    if (value !== undefined) {\n      nextObj[key] = encodeURIComponent(value);\n    }\n  }\n  return nextObj;\n};\n\nconst removeUndefined = (obj) => {\n  const nextObj = {};\n  for (const [key, value] of Object.entries(obj)) {\n    if (value !== undefined) {\n      nextObj[key] = value;\n    }\n  }\n  return nextObj;\n};\n\nconst useQueryAsState = (defaultValues) => {\n  const history = useHistory();\n  const { pathname, search } = useLocation();\n\n  const decodedSearch = useMemo(() => queryParamsToObject(search), [search]);\n\n  const updateRef = useRef({ decodedSearch, pathname });\n  useEffect(() => {\n    updateRef.current = { decodedSearch, pathname };\n  }, [decodedSearch, pathname]);\n\n  const updateQuery = useCallback(\n    (updatedParams, method = \"push\") => {\n      const { pathname, decodedSearch } = updateRef.current;\n      history[method](\n        pathname +\n          objectToQueryParams(\n            encodeValues({ ...decodedSearch, ...updatedParams })\n          )\n      );\n    },\n    [history]\n  );\n\n  const queryWithDefault = useMemo(\n    () => Object.assign({}, defaultValues, removeUndefined(decodedSearch)),\n    [decodedSearch, defaultValues]\n  );\n\n  return [queryWithDefault, updateQuery];\n};\n\nexport default useQueryAsState;\n","import \"./App.css\";\nimport React, { useState, Suspense } from \"react\";\nimport AboutOverlay from \"./components/AboutOverlay\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { CgListTree } from \"react-icons/cg\";\n//import {FaGithub} from  \"react-icons/fa\";\nimport { BsInfoSquare } from \"react-icons/bs\";\nimport useQueryAsState from \"./hooks/useQueryAsState\";\n\nconst Taxodium = React.lazy(() => import(\"./Taxodium\"));\nconst TaxodiumUploader = React.lazy(() => import(\"./components/TaxodiumUploader\"));\n\n\n\nfunction App() {\n    const [query, setQuery] = useQueryAsState({\n        search: JSON.stringify([\n          {\n            id: 0.123,\n            category: \"lineage\",\n            value: \"\",\n            enabled: true,\n            aa_final: \"any\",\n            min_tips: 1,\n            aa_gene: \"S\",\n            search_for_ids: \"\",\n          },\n        ]),\n        colourBy: JSON.stringify({\n          variable: \"lineage\",\n          gene: \"S\",\n          colourLines: false,\n          residue: \"681\",\n        })\n      });\n    const [uploadedData, setUploadedData] = useState(null);\n  const [aboutEnabled, setAboutEnabled] = useState(false);\n  const [currentUrl, setCurrentUrl] = useState(\"\");\n  return (\n    <Router>\n     <AboutOverlay enabled={aboutEnabled} setEnabled={setAboutEnabled} />\n\n<div className=\"h-screen w-screen\">\n  <div className=\"from-gray-500 to-gray-600 bg-gradient-to-bl h-15 shadow-md z-20\">\n    <div className=\"flex justify-between\">\n      <h1 className=\"text-xl p-4  pb-5 text-white \">\n        <CgListTree className=\"inline-block h-8 w-8 pr-2 \" />\n        <span className=\"font-bold\">Taxodium</span>\n      </h1>\n      <div className=\"inline-block p-4 pr-0\">\n        <button\n          onClick={() => setAboutEnabled(true)}\n          className=\"mr-5 text-white font-bold hover:underline\"\n        >\n          <BsInfoSquare className=\"inline-block h-7 w-8\" /> About /\n          Acknowledgements\n        </button>\n        {/*<a className=\"text-white\" href=\"https://github.com/theosanderson/taxodium\">\n        <FaGithub className=\"inline-block text-white h-7 w-8\" />\n</a>*/}\n      </div>\n    </div>\n  </div>\n        <Suspense fallback={<div>Loading...</div>}>\n          {(uploadedData||query.protoUrl) ? \n          <Taxodium uploadedData={uploadedData} query={query} setQuery={setQuery}/>\n: \n<div className=\"m-10\">\n    <p className=\"text-lg text-gray-700 mb-5\">Welcome to Taxodium, a tool for exploring large trees</p>\n    <div className=\"grid grid-cols-2  divide-x divide-gray-300\">\n    <div className=\"p-5\">\n    <h3 className=\"text-md text-gray-700 font-semibold mb-2\">Upload a Taxodium protobuf file</h3>\n         <TaxodiumUploader setUploadedData={setUploadedData} protoUrl={query.protoUrl} /></div>\n         <div className=\"p-5\">\n         <h3 className=\"text-md text-gray-700 font-semibold mb-2\">Provide a URL to a Taxodium protobuf file</h3>\n         URL: <input type=\"text\" className=\"border-gray-300 p-1 w-60 border\" value={currentUrl} onChange={(event)=>setCurrentUrl(event.target.value)}></input><br/>\n         <button \n         \n         className=\"  bg-gray-100 text-sm mx-auto p-1 rounded border-gray-300 border  text-gray-700 ml-8 h-8 mt-5\"\n         onClick={()=>setQuery({...query,protoUrl:currentUrl})}>Load</button>\n         </div>\n\n    </div>\n    <p className=\"text-md text-gray-700 font-semibold mb-2\">\n    or <a className=\"text-blue-500\" href=\"/?protoUrl=https://hgwdev.gi.ucsc.edu/~angie/UShER_SARS-CoV-2/public-latest.all.masked.taxodium.pb.gz\">load the public SARS-CoV-2 tree</a>.\n    </p> </div>\n}\n        </Suspense>\n      </div>\n    </Router>\n  );\n}\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}