{"version":3,"sources":["components/Spinner.jsx","Deck.jsx","components/SearchItem.jsx","components/SearchPanel.jsx","components/AboutOverlay.jsx","hooks/useQueryAsState.js","App.jsx","reportWebVitals.js","index.js"],"names":["Spinner","isShown","progress","className","coarse_and_fine_configs","config","node_data","precision","line_mode","coarse","data","reduceOverPlotting","visible","id","mini","replace","lineWidthScale","pickable","getRadius","includes","make_minimap_version","nodeIds","included_points","filter","node","Math","abs","x","parents","y","rounded_x","round","rounded_y","dummy_polygons","contour","zipcode","population","area","rgb_cache","toRGB","string","result","amino_acids","A","R","N","D","C","Q","E","G","H","I","L","K","M","F","P","T","W","Y","V","X","O","Z","undefined","split","reverse","join","hash","length","i","charCodeAt","rgb","value","toRGB_uncached","toRGBCSS","output","getXval","viewState","zoom","Deck","showMutText","colourBy","setSelectedNode","scatterIds","search_configs_initial","zoomToSearch","selectedNode","console","log","useState","ids","top","bottom","textInfo","setTextInfo","hoverInfo","setHoverInfo","target","setViewState","xZoom","MMatrix","useMemo","deckRef","useRef","onViewStateChange","useCallback","viewId","oldViewState","current","viewports","main_vp","nw","unproject","se","width","height","needs_update","mouseDownIsMinimap","setMouseDownIsMinimap","onClickOrMouseMove","event","buttons","_reactName","pickInfo","pickObject","nativeEvent","offsetX","offsetY","radius","viewport","object","newViewState","coordinate","poly_layer","PolygonLayer","stroked","opacity","filled","wireframe","getPolygon","d","getFillColor","getLineColor","getLineWidth","lineWidthUnits","getResidue","cache","gene","position","cur_node","path","return_val","push","interesting_mutations","mutations","mutation","mutation_mapping","final_res","forEach","scatterplot_config","radiusUnits","onHover","info","getPosition","variable","lineage_mapping","lineages","country_mapping","countries","residue","scatter_configs","scatter_configs2","map","modelMatrix","radiusMaxPixels","scatter_layers","ScatterplotLayer","selected_node_layer","search_configs","concat","search_configs2","search_layers","line_layer_2_config","getWidth","getTargetPosition","getSourcePosition","getColor","colourLines","line_layer_3_config","line_configs","apply","line_configs2","line_layers","LineLayer","cur_top","cur_bot","new_top","new_bot","textIds","mutTextIds","num_tips","text_config","getText","names","getAngle","billboard","getTextAnchor","getAlignmentBaseline","text_config_muts","orig_res","sort","text_layers","TextLayer","getSize","text_layer_muts","pos_layer_mini","color","radiusMinPixels","layers","window","deck","views","OrthographicView","controller","borderWidth","hoverStuff","aa","aa_col","lineage","country","date","date_mapping","dates","style","zIndex","pointerEvents","left","spinnerShown","zoomIncrement","increment","newViewState2","useEffect","index","original_index","onClick","onPointerMove","onPointerDown","pickingRadius","onAfterRender","ref","layerFilter","layer","startsWith","right","SearchItem","category","enabled","setThis","removeItem","searchColors","numResultsHere","zoomToMe","aa_pos","aa_final","aa_gene","all_genes","min_tips","search_for_ids","current_accession","thecolor","name","type","outline","outlineOffset","checked","onChange","element","debounceTimeout","placeholder","parseInt","Intl","NumberFormat","format","epi_isl","slice","get_epi_isl_url","SearchPanel","searchItems","setSearchItems","setColourBy","numSearchResults","totalSeqs","setZoomToSearch","setShowMutText","configMode","setConfigMode","cur_genbank","genbanks","cur_epi_isl","epi_isl_numbers","selected_muts","these_muts","Object","fromEntries","this_mut","entries","item","mapping","random","rel","href","AboutOverlay","setEnabled","objectToQueryParams","obj","keys","key","encodeValues","nextObj","encodeURIComponent","useQueryAsState","defaultValues","history","useHistory","useLocation","pathname","search","decodedSearch","params","URLSearchParams","queryParamsToObject","updateRef","updateQuery","updatedParams","method","assign","removeUndefined","protobuf","require","parse","defaults","keepCase","App","JSON","stringify","query","setQuery","setColourByWithCheck","status","nodeData","setNodeData","aboutEnabled","setAboutEnabled","load","then","root","axios","get","responseType","onDownloadProgress","progressEvent","percentCompleted","floor","loaded","response","buffer","NodeList","lookupType","message","decode","Uint8Array","toObject","Array","Set","mutation_array","rest","add","from","configs","counter","filter_function","nd","lowercase_query","toLowerCase","trim","mm","subset","the_list","num_results","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e426e470.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Spinner.css\";\n\nfunction Spinner({ isShown, progress }) {\n  if (isShown) {\n    return (\n      <div className=\"w-full h-full fixed bg-white text-center\">\n        {\" \"}\n        <div className=\"loader z-50\">Loading...</div>\n        <div className=\"text-black\">Loading {progress}%</div>\n      </div>\n    );\n  } else {\n    return <></>;\n  }\n}\n\nexport default Spinner;\n","/// app.js\nimport React, {\n  useState,\n  useMemo,\n  useCallback,\n  useRef,\n  useEffect,\n} from \"react\";\nimport DeckGL from \"@deck.gl/react\";\nimport {\n  LineLayer,\n  ScatterplotLayer,\n  PolygonLayer,\n  TextLayer,\n} from \"@deck.gl/layers\";\nimport { OrthographicView } from \"@deck.gl/core\";\nimport Spinner from \"./components/Spinner\";\nimport { BiZoomIn, BiZoomOut } from \"react-icons/bi\";\n\nconst zoomThreshold = 8;\nfunction coarse_and_fine_configs(config, node_data, precision, line_mode) {\n  const coarse = {\n    ...config,\n    data: reduceOverPlotting(config.data, node_data, precision, line_mode),\n    visible: true,\n    id: config.id + \"_coarse\",\n  };\n\n  const mini = make_minimap_version(coarse);\n  const fine = { ...config, visible: true, id: config.id + \"_fine\" };\n  return [coarse, fine, mini];\n}\n\nfunction make_minimap_version(config) {\n  return {\n    ...config,\n    id: config.id.replace(\"main\", \"mini\"),\n    lineWidthScale: 1,\n    pickable: false,\n    getRadius: config.id.includes(\"search\")\n      ? config.getRadius * 0.5\n      : config.getRadius,\n  };\n}\n\nfunction reduceOverPlotting(nodeIds, node_data, precision, line_mode) {\n  const included_points = {};\n\n  const filtered = nodeIds.filter((node) => {\n    if (line_mode) {\n      if (\n        (Math.abs(node_data.x[node] - node_data.x[node_data.parents[node]]) >\n          1) |\n        (Math.abs(node_data.y[node] - node_data.y[node_data.parents[node]]) >\n          0.5)\n      ) {\n        return true;\n      }\n    }\n\n    const rounded_x = Math.round(node_data.x[node] * precision) / precision;\n    const rounded_y = Math.round(node_data.y[node] * precision) / precision;\n    if (included_points[rounded_x]) {\n      if (included_points[rounded_x][rounded_y]) {\n        return false;\n      } else {\n        included_points[rounded_x][rounded_y] = 1;\n        return true;\n      }\n    } else {\n      included_points[rounded_x] = { [rounded_y]: 1 };\n      return true;\n    }\n  });\n\n  return filtered;\n}\nconst dummy_polygons = [\n  {\n    contour: [\n      [-100, -100],\n      [-100, 100],\n      [100, 100],\n      [100, -100],\n    ],\n    zipcode: 94107,\n    population: 26599,\n    area: 6.11,\n  },\n];\nconst rgb_cache = {};\n\nfunction toRGB(string) {\n  if (rgb_cache[string]) {\n    return rgb_cache[string];\n  } else {\n    const result = toRGB_uncached(string);\n    rgb_cache[string] = result;\n    return result;\n  }\n}\n\nfunction toRGB_uncached(string) {\n  const amino_acids = {\n    A: [230, 25, 75],\n    R: [60, 180, 75],\n    N: [255, 225, 25],\n    D: [67, 99, 216],\n    C: [245, 130, 49],\n    Q: [70, 240, 240],\n    E: [145, 30, 180],\n\n    G: [240, 50, 230],\n    H: [188, 246, 12],\n    I: [250, 190, 190],\n\n    L: [230, 0, 255],\n    K: [0, 128, 128],\n    M: [154, 99, 36],\n    F: [255, 250, 200],\n    P: [128, 0, 0],\n    T: [170, 255, 195],\n    W: [128, 128, 0],\n\n    Y: [0, 0, 117],\n    V: [0, 100, 177],\n    X: [128, 128, 128],\n    O: [255, 255, 255],\n    Z: [0, 0, 0],\n  };\n\n  if (amino_acids[string]) {\n    return amino_acids[string];\n  }\n\n  if (string === undefined) {\n    return [200, 200, 200];\n  }\n  if (string === \"\") {\n    return [200, 200, 200];\n  }\n  if (string === \"unknown\") {\n    return [200, 200, 200];\n  }\n  if (string === \"USA\") {\n    return [95, 158, 245]; //This is just because the default is ugly\n  }\n  if (string === \"England\") {\n    return [214, 58, 15]; // UK all brick\n  }\n  if (string === \"Scotland\") {\n    return [255, 130, 82]; // UK all brick\n  }\n  if (string === \"Wales\") {\n    return [148, 49, 22]; // UK all brick\n  }\n  if (string === \"Northern Ireland\") {\n    return [140, 42, 15]; // UK all brick\n  }\n  if (string === \"France\") {\n    return [140, 28, 120]; // diff to UK\n  }\n  if (string === \"Germany\") {\n    return [106, 140, 28]; // diff to UK\n  }\n  if (string === \"India\") {\n    return [61, 173, 166]; // diff to UK\n  }\n  if (string === \"Denmark\") {\n    return [24, 112, 32]; // diff to UK\n  }\n\n  string = string.split(\"\").reverse().join(\"\");\n  var hash = 0;\n  if (string.length === 0) return hash;\n  for (var i = 0; i < string.length; i++) {\n    hash = string.charCodeAt(i) + ((hash << 5) - hash);\n    hash = hash & hash;\n  }\n  var rgb = [0, 0, 0];\n  for (i = 0; i < 3; i++) {\n    var value = (hash >> (i * 8)) & 255;\n    rgb[i] = value;\n  }\n  if (rgb[0] + rgb[1] + rgb[2] < 150 || rgb[0] + rgb[1] + rgb[2] > 500) {\n    return toRGB(string + \"_\");\n  }\n  return rgb;\n}\nfunction toRGBCSS(string) {\n  const output = toRGB(string);\n  return `rgb(${output[0]},${output[1]},${output[2]})`;\n}\n\nconst getXval = (viewState) => 7 / 2 ** (viewState.zoom - 5.6);\n\nfunction Deck({\n  showMutText,\n  data,\n  colourBy,\n  progress,\n  setSelectedNode,\n  scatterIds,\n  search_configs_initial,\n  zoomToSearch,\n  selectedNode,\n}) {\n  console.log(\"M\", showMutText);\n  const [textInfo, setTextInfo] = useState({ ids: [], top: 0, bottom: 0 });\n\n  const node_data = data.node_data;\n\n  const [hoverInfo, setHoverInfo] = useState();\n\n  const [viewState, setViewState] = useState({\n    zoom: 4.7,\n    target: [6, 13],\n  });\n  const [xZoom, setXZoom] = useState(0);\n  const MMatrix = useMemo(\n    () => [\n      1 / 2 ** (viewState.zoom - xZoom - 5.6),\n      0,\n      0,\n      0,\n      0,\n      1,\n      0,\n      0,\n      0,\n      0,\n      1,\n      0,\n      0,\n      0,\n      0,\n      1,\n    ],\n    [viewState.zoom, xZoom]\n  );\n  const deckRef = useRef(null);\n\n  const onViewStateChange = useCallback(\n    ({ viewId, viewState, oldViewState }) => {\n      const zoom_in_x = false;\n      if (zoom_in_x && oldViewState) {\n        if (viewState.zoom !== oldViewState.zoom) {\n          const diff = viewState.zoom - oldViewState.zoom;\n          const newxzoom = xZoom + diff;\n          console.log(\n            \"change\",\n            viewState.zoom,\n            oldViewState.zoom,\n            diff,\n            newxzoom\n          );\n          setXZoom(newxzoom);\n          viewState.zoom = oldViewState.zoom;\n        }\n      }\n      if (viewId === \"minimap\") {\n        return;\n      }\n\n      viewState[\"minimap\"] = { zoom: 3.0, target: [5, 13] };\n      if (zoom_in_x) {\n        if (oldViewState) {\n          viewState.target[1] = oldViewState.target[1];\n        }\n      } else {\n        viewState.target[0] = getXval(viewState);\n      }\n      if (deckRef.current.viewports.length) {\n        const main_vp = deckRef.current.viewports[0];\n        const nw = main_vp.unproject([0, 0, 0]);\n        const se = main_vp.unproject([main_vp.width, main_vp.height, 0]);\n        se[0] = se[0] * 2 ** (viewState.zoom - 6);\n        nw[0] = nw[0] * 2 ** (viewState.zoom - 6);\n        viewState = { ...viewState, nw: nw, se: se, needs_update: false };\n        nw[0] = -500;\n        se[0] = 500;\n\n        setViewState(viewState);\n      }\n    },\n    [deckRef, xZoom]\n  );\n\n  const [mouseDownIsMinimap, setMouseDownIsMinimap] = useState(false);\n\n  const onClickOrMouseMove = useCallback(\n    (event) => {\n      if (event.buttons === 0 && event._reactName === \"onPointerMove\") {\n        return false;\n      }\n\n      const pickInfo = deckRef.current.pickObject({\n        x: event.nativeEvent.offsetX,\n        y: event.nativeEvent.offsetY,\n        radius: 10,\n      });\n\n      if (event._reactName === \"onPointerDown\") {\n        if (pickInfo && pickInfo.viewport.id === \"minimap\") {\n          setMouseDownIsMinimap(true);\n        } else {\n          setMouseDownIsMinimap(false);\n        }\n      }\n      if (\n        pickInfo &&\n        pickInfo.viewport.id === \"main\" &&\n        event._reactName === \"onClick\"\n      ) {\n        setSelectedNode(pickInfo.object);\n      }\n\n      if (!pickInfo && event._reactName === \"onClick\") {\n        setSelectedNode(null);\n      }\n\n      if (\n        pickInfo &&\n        pickInfo.viewport.id === \"minimap\" &&\n        mouseDownIsMinimap\n      ) {\n        const newViewState = {\n          ...viewState,\n          target: [getXval(viewState), pickInfo.coordinate[1]],\n          needs_update: true,\n        };\n        onViewStateChange({ viewState: newViewState, oldViewState: viewState });\n      }\n    },\n    [viewState, mouseDownIsMinimap, setSelectedNode, onViewStateChange]\n  );\n\n  const poly_layer = useMemo(\n    () =>\n      new PolygonLayer({\n        //This dummy layer provides a gray background, but more importantly, it means that a picking event is always generated on clicks, allowing us to make pressing on the minimap change the view\n        id: \"mini-poly-layer\",\n        data: dummy_polygons,\n        pickable: true,\n        stroked: true,\n        opacity: 0.5,\n        filled: true,\n        wireframe: true,\n        getPolygon: (d) => d.contour,\n\n        getFillColor: (d) => [240, 240, 240],\n        getLineColor: [80, 80, 80],\n        getLineWidth: 1,\n        lineWidthUnits: \"pixels\",\n      }),\n    []\n  );\n\n  const getResidue = useMemo(() => {\n    let cache = {};\n    console.log(colourBy);\n    const the_function = (node, gene, position) => {\n      let residue = null;\n      let cur_node = node;\n\n      let path = [];\n      while (residue == null) {\n        let return_val = null;\n        path.push(cur_node);\n        let interesting_mutations;\n        if (cache[cur_node]) {\n          return_val = cache[cur_node];\n        } else {\n          interesting_mutations =\n            node_data.mutations[cur_node].mutation &&\n            node_data.mutations[cur_node].mutation.filter(\n              (x) =>\n                data.mutation_mapping[x].gene === gene &&\n                data.mutation_mapping[x].position === position\n            );\n\n          if (interesting_mutations && interesting_mutations.length === 1) {\n            return_val =\n              data.mutation_mapping[interesting_mutations[0]].final_res;\n          }\n          if (node_data.parents[cur_node] === cur_node && return_val == null) {\n            return_val = \"X\";\n          }\n        }\n        if (return_val) {\n          path.forEach((x) => {\n            cache[x] = return_val;\n          });\n          return return_val;\n        }\n        cur_node = node_data.parents[cur_node];\n      }\n    };\n    return the_function;\n  }, [node_data, data, colourBy]);\n\n  const scatterplot_config = useMemo(() => {\n    return {\n      data: scatterIds.filter(() => true),\n      visible: true,\n      opacity: 0.6,\n      getRadius: 3,\n      radiusUnits: \"pixels\",\n\n      id: \"main-scatter\",\n\n      pickable: true,\n      getLineColor: [100, 100, 100],\n\n      lineWidthUnits: \"pixels\",\n      lineWidthScale: 1,\n\n      onHover: (info) => setHoverInfo(info),\n      getPosition: (d) => {\n        return [node_data.x[d], node_data.y[d]];\n      },\n      getFillColor: (d) => {\n        if (colourBy.variable === \"lineage\") {\n          return toRGB(data.lineage_mapping[node_data.lineages[d]]);\n        } else if (colourBy.variable === \"country\") {\n          return toRGB(data.country_mapping[node_data.countries[d]]);\n        } else if (colourBy.variable === \"aa\") {\n          return toRGB(getResidue(d, colourBy.gene, colourBy.residue));\n        } else {\n          return [200, 200, 200];\n        }\n      },\n    };\n  }, [scatterIds, node_data, data, colourBy, getResidue]);\n\n  const scatter_configs = useMemo(\n    () => coarse_and_fine_configs(scatterplot_config, node_data, 100),\n    [scatterplot_config, node_data]\n  );\n  const scatter_configs2 = useMemo(\n    () =>\n      scatter_configs.map((x) => ({\n        ...x,\n        modelMatrix: x.id.includes(\"mini\") ? undefined : MMatrix,\n        stroked: x.id.includes(\"mini\") ? undefined : viewState.zoom > 15,\n        radiusMaxPixels: x.id.includes(\"mini\")\n          ? 2\n          : viewState.zoom > 15\n          ? viewState.zoom / 5\n          : 3,\n      })),\n    [scatter_configs, viewState, MMatrix]\n  );\n  const scatter_layers = useMemo(\n    () => scatter_configs2.map((x) => new ScatterplotLayer(x)),\n    [scatter_configs2]\n  );\n\n  const selected_node_layer = useMemo(\n    () =>\n      new ScatterplotLayer({\n        data: selectedNode ? [selectedNode] : [],\n        visible: true,\n        opacity: 1,\n        getRadius: 6,\n        radiusUnits: \"pixels\",\n\n        id: \"main-selected\",\n        filled: false,\n        stroked: true,\n        modelMatrix: MMatrix,\n\n        getLineColor: [0, 0, 0],\n        getPosition: (d) => {\n          return [node_data.x[d], node_data.y[d]];\n        },\n        lineWidthUnits: \"pixels\",\n        lineWidthScale: 2,\n      }),\n    [selectedNode, node_data, MMatrix]\n  );\n\n  const search_configs = useMemo(\n    () =>\n      [].concat(\n        ...search_configs_initial.map((x) =>\n          coarse_and_fine_configs(x, node_data, 100)\n        )\n      ),\n    [search_configs_initial, node_data]\n  );\n\n  const search_configs2 = useMemo(\n    () =>\n      search_configs.map((x) => ({\n        ...x,\n        modelMatrix: x.id.includes(\"mini\") ? undefined : MMatrix,\n      })),\n    [search_configs, MMatrix]\n  );\n  const search_layers = useMemo(\n    () => search_configs2.map((x) => new ScatterplotLayer(x)),\n    [search_configs2]\n  );\n\n  const line_layer_2_config = useMemo(\n    () => ({\n      id: \"main-line\",\n      data: node_data.ids.filter((x) => true),\n\n      getWidth: 1,\n      pickable: true,\n      onHover: (info) => setHoverInfo(info),\n      getTargetPosition: (d) => [\n        node_data.x[node_data.parents[d]],\n        node_data.y[d],\n      ],\n      getSourcePosition: (d) => [node_data.x[d], node_data.y[d]],\n      getColor:\n        colourBy.variable === \"aa\" && colourBy.colourLines\n          ? (d) => toRGB(getResidue(d, colourBy.gene, colourBy.residue))\n          : [150, 150, 150],\n    }),\n    [node_data, colourBy, getResidue]\n  );\n\n  const line_layer_3_config = useMemo(\n    () => ({\n      id: \"main-line-2\",\n      data: node_data.ids.filter((x) => true),\n      pickable: false,\n      getWidth: 1,\n      getTargetPosition: (d) => [\n        node_data.x[node_data.parents[d]],\n        node_data.y[node_data.parents[d]],\n      ],\n      getSourcePosition: (d) => [\n        node_data.x[node_data.parents[d]],\n        node_data.y[d],\n      ],\n      getColor:\n        colourBy.variable === \"aa\" && colourBy.colourLines\n          ? (d) => toRGB(getResidue(d, colourBy.gene, colourBy.residue))\n          : [150, 150, 150],\n    }),\n    [node_data, colourBy, getResidue]\n  );\n\n  const line_configs = useMemo(\n    () =>\n      [].concat.apply(\n        [],\n        [line_layer_2_config, line_layer_3_config].map((x) =>\n          coarse_and_fine_configs(x, node_data, 100, true)\n        )\n      ),\n    [line_layer_2_config, line_layer_3_config, node_data]\n  );\n\n  const line_configs2 = useMemo(\n    () =>\n      line_configs.map((x) => ({\n        ...x,\n        modelMatrix: x.id.includes(\"mini\") ? undefined : MMatrix,\n      })),\n    [line_configs, MMatrix]\n  );\n  const line_layers = useMemo(\n    () => line_configs2.map((x) => new LineLayer(x)),\n    [line_configs2]\n  );\n\n  if (viewState.zoom > 17 && viewState.needs_update !== true) {\n    /*\n    Creating a text layer with every node takes a *long* time, even if it's not visible until zoomed, so we don't do that.\n\n    Instead, this section of code runs every render. It checks whether the zoom is sufficient to start thinking about text. If not, it does nothing.\n\n    If text will be displayed soon, we check whether the area of text that we have precomputed contains the current viewport. If so, we do nothing.\n\n    If not we set textIds to the ids within a certain range (9* the height) of the current viewport. This will be used later on to make a layer by the memoised function.\n\n    We also record the location for which we did the precomputation.\n    */\n    if (\n      (viewState.nw[1] > textInfo.top) &\n      (viewState.se[1] < textInfo.bottom)\n    ) {\n      // console.log(\"still within\", viewState.nw[1] , textInfo.top)\n    } else {\n      const cur_top = viewState.nw[1];\n      const cur_bot = viewState.se[1];\n      const height = cur_bot - cur_top;\n      const new_top = cur_top - height * 4;\n      const new_bot = cur_bot + height * 4;\n      const textIds = scatterIds.filter(\n        (x) => (node_data.y[x] > new_top) & (node_data.y[x] < new_bot)\n      );\n\n      //console.log(\"recalculating text\")\n      setTextInfo({\n        top: new_top,\n        bottom: new_bot,\n        ids: textIds,\n      });\n    }\n  }\n\n  const mutTextIds = useMemo(\n    () =>\n      showMutText\n        ? node_data.ids.filter(\n            (x) =>\n              /* node_data.y[x] > new_top &&\n      node_data.y[x] < new_bot &&*/\n              node_data.num_tips[x] > 10 && node_data.mutations[x]\n          )\n        : [],\n    [node_data.ids, node_data.mutations, node_data.num_tips, showMutText]\n  );\n  const text_config = useMemo(\n    () => ({\n      id: \"main-text-layer\",\n      data: textInfo.ids,\n      getPosition: (d) => [node_data.x[d] + 0.3, node_data.y[d]],\n      getText: (d) => node_data.names[d],\n      getColor: [180, 180, 180],\n      getAngle: 0,\n\n      billboard: true,\n      getTextAnchor: \"start\",\n      getAlignmentBaseline: \"center\",\n    }),\n    [node_data, textInfo]\n  );\n\n  const text_config_muts = useMemo(\n    () => ({\n      id: \"main-text-muts-layer\",\n      data: mutTextIds.filter(() => true),\n      getPosition: (d) => [node_data.x[d], node_data.y[d]],\n      getText: (d) =>\n        node_data.mutations[d].mutation\n          ? node_data.mutations[d].mutation\n              .map((y) => {\n                const x = data.mutation_mapping[y];\n\n                return x.gene + \":\" + x.orig_res + x.position + x.final_res;\n              })\n              .sort()\n              .join(\", \")\n          : \"\",\n      getColor: [180, 180, 180],\n      getAngle: 0,\n\n      billboard: true,\n      getTextAnchor: \"start\",\n      getAlignmentBaseline: \"center\",\n    }),\n    [\n      data.mutation_mapping,\n      mutTextIds,\n      node_data.mutations,\n      node_data.x,\n      node_data.y,\n    ]\n  );\n\n  const text_layers = useMemo(() => {\n    if (true) {\n      return [\n        new TextLayer({\n          ...text_config,\n          visible: viewState.zoom > 18.5,\n          getSize: viewState.zoom > 19 ? 12 : 9.5,\n          modelMatrix: MMatrix,\n        }),\n      ];\n    } else {\n      return [];\n    }\n  }, [text_config, MMatrix, viewState]);\n\n  const text_layer_muts = useMemo(() => {\n    if (!showMutText) {\n      return [];\n    }\n    return [\n      new TextLayer({\n        ...text_config_muts,\n        visible: true,\n        getSize: viewState.zoom > 19 ? 12 : 9.5,\n        modelMatrix: MMatrix,\n        getColor: [0, 0, 0],\n      }),\n    ];\n  }, [text_config_muts, viewState, MMatrix, showMutText]);\n\n  const pos_layer_mini = useMemo(() => {\n    let data;\n    if (viewState.nw !== undefined) {\n      data = [\n        {\n          contour: [\n            [-100, -100],\n            [100, -100],\n            [100, viewState.nw[1]],\n            [-100, viewState.nw[1]],\n          ],\n          color: [100, 100, 100],\n        },\n        {\n          contour: [\n            [-100, viewState.nw[1]],\n            [100, viewState.nw[1]],\n            [100, viewState.se[1]],\n            [-100, viewState.se[1]],\n          ],\n          color: [255, 255, 255],\n        },\n\n        {\n          contour: [\n            [-100, viewState.se[1]],\n            [100, viewState.se[1]],\n            [100, 300],\n            [-100, 300],\n          ],\n          color: [150, 150, 150],\n        },\n      ];\n    } else {\n      data = [];\n    }\n\n    return new PolygonLayer({\n      id: \"mini-pos\",\n      data: data,\n      opacity: 0.05,\n      radiusMinPixels: 4,\n      radiusMaxPixels: 4,\n      getRadius: 4,\n      getLineWidth: 0.1,\n      getPolygon: (d) => {\n        return d.contour;\n      },\n      getFillColor: (d) => d.color,\n    });\n  }, [viewState]);\n\n  const layers = useMemo(\n    () => [\n      poly_layer,\n      ...text_layers,\n      ...line_layers,\n      // text_layer,\n\n      ...scatter_layers,\n\n      ...search_layers,\n\n      pos_layer_mini,\n      selected_node_layer,\n      ...text_layer_muts,\n    ],\n    [\n      poly_layer,\n      text_layers,\n\n      scatter_layers,\n      line_layers,\n\n      pos_layer_mini,\n      search_layers,\n      // text_layer\n      selected_node_layer,\n      text_layer_muts,\n    ]\n  );\n\n  window.deck = deckRef;\n\n  const views = useMemo(\n    () => [\n      new OrthographicView({ id: \"main\", controller: true }),\n      new OrthographicView({\n        id: \"minimap\",\n        x: \"79%\",\n        y: \"1%\",\n        width: \"20%\",\n        height: \"35%\",\n        borderWidth: \"1px\",\n        controller: true,\n      }),\n    ],\n    []\n  );\n\n  const hoverStuff = useMemo(() => {\n    if (hoverInfo && hoverInfo.object) {\n      const lineage =\n        data.lineage_mapping[node_data.lineages[hoverInfo.object]];\n      const country =\n        data.country_mapping[node_data.countries[hoverInfo.object]];\n      const date = data.date_mapping[node_data.dates[hoverInfo.object]];\n      let aa, aa_col;\n      if (colourBy.variable === \"aa\") {\n        aa = getResidue(hoverInfo.object, colourBy.gene, colourBy.residue);\n        aa_col = toRGBCSS(aa);\n      }\n\n      const mutations =\n        node_data.mutations[hoverInfo.object] &&\n        node_data.mutations[hoverInfo.object].mutation &&\n        node_data.mutations[hoverInfo.object].mutation\n          .map((y) => {\n            const x = data.mutation_mapping[y];\n\n            return x.gene + \":\" + x.orig_res + x.position + x.final_res;\n          })\n          .sort();\n      return (\n        <div\n          className=\"bg-gray-100 p-3 opacity-90 text-sm\"\n          style={{\n            position: \"absolute\",\n            zIndex: 1,\n            pointerEvents: \"none\",\n            left: hoverInfo.x,\n            top: hoverInfo.y,\n          }}\n        >\n          <h2 className=\"font-bold\">{node_data.names[hoverInfo.object]}</h2>\n          {aa && (\n            <div className=\"bg-white p-1 inline-block\">\n              {colourBy.gene}:{colourBy.residue}\n              <span\n                className=\"font-bold\"\n                style={{\n                  color: aa_col,\n                }}\n              >\n                {aa}\n              </span>\n            </div>\n          )}\n          <div\n            style={{\n              color:\n                colourBy.variable === \"lineage\" ? toRGBCSS(lineage) : \"inherit\",\n            }}\n          >\n            {lineage}\n          </div>\n\n          <div\n            style={{\n              color:\n                colourBy.variable === \"country\" ? toRGBCSS(country) : \"inherit\",\n            }}\n          >\n            {country}\n          </div>\n          {date}\n\n          <div className=\"text-xs text-gray-600\">\n            <div className=\"mt-1\">\n              <b>Node mutations</b>\n            </div>\n\n            {mutations ? mutations.join(\", \") : <i>No coding mutations</i>}\n          </div>\n        </div>\n      );\n    }\n  }, [data, node_data, hoverInfo, colourBy, getResidue]);\n  const spinnerShown = useMemo(() => node_data.ids.length === 0, [node_data]);\n\n  const zoomIncrement = useCallback(\n    (increment) => {\n      const newViewState = {\n        ...viewState,\n        zoom: viewState.zoom + increment,\n\n        needs_update: true,\n      };\n      const newViewState2 = {\n        ...newViewState,\n        target: [getXval(newViewState), newViewState.target[1]],\n      };\n\n      onViewStateChange({ viewState: newViewState2, oldViewState: viewState });\n    },\n    [viewState, onViewStateChange]\n  );\n\n  useEffect(() => {\n    if (zoomToSearch.index !== null) {\n      console.log(zoomToSearch);\n      const newViewState = {\n        ...viewState,\n        zoom: 19,\n\n        needs_update: true,\n      };\n      const newViewState2 = {\n        ...newViewState,\n        target: [\n          getXval(newViewState),\n          node_data.y[\n            search_configs_initial.filter(\n              (x) => x.original_index === zoomToSearch.index\n            )[0].data[0]\n          ],\n        ],\n      };\n\n      setViewState(newViewState2);\n    }\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [zoomToSearch]);\n\n  return (\n    <div\n      className=\"w-full h-full relative\"\n      onClick={onClickOrMouseMove}\n      onPointerMove={onClickOrMouseMove}\n      onPointerDown={onClickOrMouseMove}\n    >\n      {\" \"}\n      <DeckGL\n        pickingRadius={10}\n        onAfterRender={() => {\n          if (viewState.nw === undefined || viewState.needs_update) {\n            onViewStateChange({ viewState });\n          }\n        }}\n        ref={deckRef}\n        views={views}\n        viewState={viewState}\n        onViewStateChange={onViewStateChange}\n        layerFilter={useCallback(\n          ({ layer, viewport }) => {\n            const first_bit =\n              (layer.id.startsWith(\"main\") && viewport.id === \"main\") ||\n              (layer.id.startsWith(\"mini\") && viewport.id === \"minimap\");\n            const second_bit =\n              layer.id.includes(\"mini\") |\n              ((viewState.zoom < zoomThreshold) & !layer.id.includes(\"fine\")) |\n              ((viewState.zoom > zoomThreshold) & !layer.id.includes(\"coarse\"));\n\n            return first_bit & second_bit;\n          },\n          [viewState.zoom]\n        )}\n        controller={true}\n        layers={layers}\n      >\n        {hoverStuff}\n        <div style={{ position: \"absolute\", right: \"0.2em\", bottom: \"0.2em\" }}>\n          <button\n            className=\" w-12 h-10 bg-gray-100  p-1 rounded border-gray-300 text-gray-700 opacity-60 hover:opacity-100\"\n            onClick={() => {\n              zoomIncrement(0.6);\n            }}\n          >\n            <BiZoomIn className=\"mx-auto  w-5 h-5 \" />\n          </button>\n          <button\n            className=\" w-12 h-10 bg-gray-100 ml-1 p-1 rounded border-gray-300 text-gray-700  opacity-60  hover:opacity-100\"\n            onClick={() => {\n              zoomIncrement(-0.6);\n            }}\n          >\n            <BiZoomOut className=\"mx-auto w-5 h-5 \" />\n          </button>\n        </div>\n      </DeckGL>\n      {spinnerShown && <Spinner isShown={true} progress={progress} />}\n    </div>\n  );\n}\n\nexport default Deck;\n","import React from \"react\";\nimport { BsTrash } from \"react-icons/bs\";\nimport { DebounceInput } from \"react-debounce-input\";\nimport { BiZoomIn } from \"react-icons/bi\";\nimport { GiRobotGrab } from \"react-icons/gi\";\nfunction numberWithCommas(x) {\n  const internationalNumberFormat = new Intl.NumberFormat(\"en-US\");\n  return internationalNumberFormat.format(x);\n}\n\nfunction SearchItem({\n  id,\n  category,\n  enabled,\n  value,\n  setThis,\n  removeItem,\n  index,\n  searchColors,\n  numResultsHere,\n  zoomToMe,\n  aa_pos,\n  aa_final,\n  aa_gene,\n  all_genes,\n  min_tips,\n  search_for_ids,\n  current_accession,\n}) {\n  const explanations = {\n    name: \"Enter a sequence name like QEUH-13ADA01\",\n    lineage:\n      \"Enter a PANGO lineage like B.1.1.7. Note that sub-lineages will not be found by this method.\",\n    country: \"Enter a country like 'India' \",\n    mutation:\n      \"Enter an amino acid mutation. E.g. gene S, position 681, to R. Note that this will identify the internal node at which the mutation occurred, rather than all the leaf nodes with the mutation.\",\n  };\n\n  const thecolor = searchColors[index % searchColors.length];\n  //console.log(\"key\", id);\n  return (\n    <div className=\"border-gray-100 border-b mb-3 pb-3\">\n      <input\n        name=\"isGoing\"\n        type=\"checkbox\"\n        style={{\n          outline:\n            enabled &&\n            (value.length > 0 ||\n              ![\"name\", \"lineage\", \"country\"].includes(category))\n              ? `1px solid rgb(${thecolor[0]},${thecolor[1]},${thecolor[2]})`\n              : \"0px\",\n          outlineOffset: \"2px\",\n        }}\n        className=\"w-3 h-3 m-3\"\n        checked={enabled}\n        onChange={(event) => setThis({ enabled: !enabled })}\n      />\n      <select\n        className=\" w-36 border py-2 px-1 text-grey-darkest text-sm h-10\"\n        value={category}\n        onChange={(event) => setThis({ category: event.target.value })}\n      >\n        <option value=\"name\">Sequence name</option>\n        <option value=\"lineage\">Lineage</option>\n        <option value=\"country\">Country</option>\n        <option value=\"mutation\">AA mutation</option>\n        {/*<option value=\"epis\">EPI_ISL ids</option>*/}\n        <option value=\"genbanks\">GenBank ids</option>\n      </select>\n\n      {[\"mutation\", \"epis\", \"genbanks\"].includes(category) && (\n        <button\n          className=\"  bg-gray-100 text-sm mx-auto p-1 rounded border-gray-300 border  text-gray-700 ml-8 h-8\"\n          onClick={() => removeItem(id)}\n        >\n          <BsTrash className=\"inline-block \" />\n        </button>\n      )}\n\n      {(category === \"epis\" || category === \"genbanks\") && (\n        <div>\n          <DebounceInput\n            className=\"w-48 h-32 border p-1 m-1\"\n            element=\"textarea\"\n            value={search_for_ids}\n            onChange={(event) =>\n              setThis({ search_for_ids: event.target.value })\n            }\n          />\n          <br />\n          <div className=\"h-10\">\n            {current_accession && (\n              <button\n                onClick={(event) =>\n                  setThis({\n                    search_for_ids:\n                      search_for_ids === \"\"\n                        ? current_accession\n                        : search_for_ids + \"\\n\" + current_accession,\n                  })\n                }\n                className=\" bg-gray-100  mx-auto p-1 rounded border-gray-300 border  text-gray-700 ml-2 h-6 text-xs\"\n              >\n                <GiRobotGrab className=\"inline mr-2 \" />\n                Add selected node\n              </button>\n            )}{\" \"}\n          </div>\n        </div>\n      )}\n      {category === \"mutation\" && (\n        <div\n          className=\"\n       p-2 m-2 ml-2  text-gray-700\"\n        >\n          {\" \"}\n          <label className=\"text-sm\">Gene:</label>\n          <select\n            className=\"border py-1 px-1 text-grey-darkest text-sm h-7 w-20 m-3 my-1\"\n            value={aa_gene}\n            onChange={(event) => setThis({ aa_gene: event.target.value })}\n          >\n            {all_genes &&\n              all_genes.map((x) => (\n                <option key={x} value={x}>\n                  {x}\n                </option>\n              ))}\n          </select>\n          <div>\n            <label className=\"text-sm\">Mutation at residue:</label>{\" \"}\n            <DebounceInput\n              debounceTimeout={300}\n              type=\"number\"\n              value={aa_pos}\n              onChange={(event) => setThis({ aa_pos: event.target.value })}\n              className=\"border py-1 px-1 text-grey-darkest text-sm h-7 w-20 m-3 my-1\"\n              placeholder=\"e.g. 681\"\n            />{\" \"}\n            <label className=\"text-sm\"> to</label>\n            <select\n              value={aa_final}\n              onChange={(event) => setThis({ aa_final: event.target.value })}\n              className=\"border py-1 px-1 text-grey-darkest text-sm h-7 w-16 m-3 my-1\"\n            >\n              {[\n                \"any\",\n                \"A\",\n                \"C\",\n                \"D\",\n                \"E\",\n                \"F\",\n                \"G\",\n                \"H\",\n                \"I\",\n                \"J\",\n                \"K\",\n                \"L\",\n                \"M\",\n                \"N\",\n                \"P\",\n                \"Q\",\n                \"R\",\n                \"S\",\n                \"T\",\n                \"U\",\n                \"V\",\n                \"W\",\n                \"Y\",\n              ].map((x) => (\n                <option key={x} value={x}>\n                  {x}\n                </option>\n              ))}\n            </select>\n            <br />\n            <label className=\"text-sm\">Min descendant genomes:</label>\n            <DebounceInput\n              debounceTimeout={300}\n              value={min_tips}\n              type=\"number\"\n              onChange={(event) =>\n                setThis({ min_tips: parseInt(event.target.value) })\n              }\n              className=\"border py-1 px-1 text-grey-darkest text-sm h-7 w-16 m-3 my-1\"\n            />\n          </div>\n        </div>\n      )}\n      {[\"name\", \"lineage\", \"country\"].includes(category) && (\n        <DebounceInput\n          className=\" w-32 border py-2 px-3 text-grey-darkest h-10\"\n          value={value}\n          onChange={(event) => setThis({ value: event.target.value })}\n          debounceTimeout={300}\n        />\n      )}\n      {[\"mutation\", \"epis\", \"genbanks\"].includes(category) ? (\n        <></>\n      ) : (\n        <button\n          className=\" bg-gray-100 text-sm mx-auto p-1 rounded border-gray-300 border  text-gray-700 ml-2 h-8\"\n          onClick={() => removeItem(id)}\n        >\n          <BsTrash className=\"inline-block \" />\n        </button>\n      )}\n      <div className=\"text-sm text-gray-600 px-3\">{explanations[category]}</div>\n      <div className=\"text-sm text-gray-900 px-3\">\n        {\" \"}\n        {(value.length > 0 ||\n          category === \"mutation\" ||\n          category === \"epis\" ||\n          category === \"genbanks\") && (\n          <>\n            {\" \"}\n            {numberWithCommas(numResultsHere)} result\n            {numResultsHere !== 1 && <>s</>}\n          </>\n        )}\n        {numResultsHere === 1 && enabled && (\n          <>\n            {\" \"}\n            <button\n              onClick={zoomToMe}\n              className=\"inline-block bg-gray-100 text-sm mx-auto p-1 rounded border-gray-300 border m-1 text-gray-700\"\n            >\n              <BiZoomIn className=\"inline-block mr-1\" />\n              locate\n            </button>\n          </>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default SearchItem;\n","import React, { useEffect, useMemo, useState } from \"react\";\nimport SearchItem from \"./SearchItem\";\nimport { FaSearch } from \"react-icons/fa\";\nimport { RiAddCircleLine } from \"react-icons/ri\";\nimport { BiPalette } from \"react-icons/bi\";\nimport { BsInfoCircle } from \"react-icons/bs\";\nimport { DebounceInput } from \"react-debounce-input\";\nimport { IoMdSettings } from \"react-icons/io\";\n\nfunction get_epi_isl_url(epi_isl) {\n  if (epi_isl.length > 4) {\n    return (\n      \"https://www.epicov.org/acknowledgement/\" +\n      epi_isl.slice(-4, -2) +\n      \"/\" +\n      epi_isl.slice(-2) +\n      \"/\" +\n      epi_isl +\n      \".json\"\n    );\n  }\n}\nget_epi_isl_url(\"\");\nfunction numberWithCommas(x) {\n  const internationalNumberFormat = new Intl.NumberFormat(\"en-US\");\n  return internationalNumberFormat.format(x);\n}\n\nfunction SearchPanel({\n  searchItems,\n  setSearchItems,\n  colourBy,\n  setColourBy,\n  selectedNode,\n  data,\n  searchColors,\n  numSearchResults,\n  totalSeqs,\n  setZoomToSearch,\n  showMutText,\n  setShowMutText,\n}) {\n  //const [acknowledgements, setAcknowledgements] = useState({});\n  const acknowledgements = null;\n  const node_data = data.node_data;\n\n  const [configMode, setConfigMode] = useState(\"colour\");\n\n  const cur_genbank = useMemo(() => {\n    if (selectedNode) {\n      const cur_genbank = node_data.genbanks[selectedNode];\n      if (cur_genbank && cur_genbank !== \"nan\") {\n        return cur_genbank;\n      }\n    }\n    return \"\";\n  }, [node_data, selectedNode]);\n\n  const cur_epi_isl = useMemo(() => {\n    if (selectedNode) {\n      const cur_epi_isl = node_data.epi_isl_numbers[selectedNode];\n      if (cur_epi_isl && cur_epi_isl !== 0) {\n        return \"EPI_ISL_\" + cur_epi_isl;\n      }\n    }\n    return \"\";\n  }, [node_data, selectedNode]);\n\n  useEffect(() => {\n    /*\n    if (cur_epi_isl) {\n      fetch(get_epi_isl_url(cur_epi_isl))\n        .then((response) => response.json())\n        .then((data) => setAcknowledgements(data));\n    } else {\n      setAcknowledgements(null);\n    }*/\n  }, [cur_epi_isl]);\n\n  const selected_muts = useMemo(() => {\n    if (!selectedNode) {\n      return [];\n    }\n    let cur_node = selectedNode;\n    let mutations = {};\n    while (cur_node !== node_data.parents[cur_node]) {\n      const these_muts = node_data.mutations[cur_node].mutation\n        ? Object.fromEntries(\n            node_data.mutations[cur_node].mutation.map((x) => {\n              const this_mut = data.mutation_mapping[x];\n              return [\n                this_mut.gene + \":\" + this_mut.position,\n                this_mut.final_res,\n              ];\n            })\n          )\n        : {};\n      mutations = { ...these_muts, ...mutations };\n      cur_node = node_data.parents[cur_node];\n    }\n    return Object.entries(mutations)\n      .map((x) => x[0] + x[1])\n      .sort();\n  }, [data, node_data, selectedNode]);\n  return (\n    <div className=\"overflow-y-auto\" style={{ height: \"calc(100vh - 5em)\" }}>\n      <div className=\" border-t md:border-t-0 border-b border-gray-300\">\n        <div className=\"mt-3 mb-3 text-gray-500 text-sm\">\n          Displaying {numberWithCommas(totalSeqs)} sequences from INSDC, COG-UK\n          and CNCB\n        </div>\n        <h2 className=\"text-xl mt-5 mb-4 text-gray-700\">\n          <FaSearch className=\"inline-block mr-2\" />\n          Search\n        </h2>\n        {searchItems.map(function (item, index) {\n          return (\n            <SearchItem\n              numResultsHere={numSearchResults[index]}\n              searchColors={searchColors}\n              index={index}\n              key={item.id}\n              id={item.id}\n              search_for_ids={item.search_for_ids}\n              category={item.category}\n              aa_gene={item.aa_gene}\n              aa_pos={item.aa_pos}\n              aa_final={item.aa_final}\n              all_genes={data.all_genes}\n              min_tips={item.min_tips}\n              value={item.value}\n              setThis={(mapping) => {\n                searchItems[index] = { ...searchItems[index], ...mapping };\n                setSearchItems([...searchItems]);\n              }}\n              zoomToMe={() => {\n                console.log(index);\n                setZoomToSearch({ index });\n              }}\n              removeItem={(id) => {\n                // console.log(\"remove\", id);\n                setSearchItems(searchItems.filter((x) => x.id !== id));\n              }}\n              enabled={item.enabled}\n              current_accession={\n                item.category === \"genbanks\" && cur_genbank\n                  ? cur_genbank\n                  : item.category === \"epis\" && cur_epi_isl\n                  ? cur_epi_isl\n                  : \"\"\n              }\n            ></SearchItem>\n          );\n        })}\n\n        <button\n          className=\"block bg-gray-100 text-sm mx-auto p-1 rounded border-gray-300 border m-5 text-gray-700\"\n          onClick={() =>\n            setSearchItems([\n              ...searchItems,\n              {\n                id: Math.random(),\n                category: \"name\",\n                value: \"\",\n                enabled: true,\n                aa_final: \"any\",\n                min_tips: 1,\n                aa_gene: \"S\",\n                search_for_ids: \"\",\n              },\n            ])\n          }\n        >\n          <RiAddCircleLine className=\"inline-block mr-2\" />\n          Add a new search\n        </button>\n      </div>\n      {configMode === \"other\" && (\n        <div className=\"border-b border-gray-300 pb-3\">\n          <h2 className=\"text-xl mt-5 mb-4 text-gray-700\">\n            <button\n              onClick={() => setConfigMode(\"colour\")}\n              className=\"float-right mr-5 block bg-gray-100 text-sm mx-auto p-1 rounded border-gray-300 border m-5 text-gray-700\"\n            >\n              <BiPalette className=\"inline-block mr-1 ml-1\" />\n            </button>\n            <IoMdSettings className=\"inline-block mr-2\" />\n            Other settings{\" \"}\n          </h2>\n          Show mutation text{\" \"}\n          <input\n            type=\"checkbox\"\n            checked={showMutText}\n            onChange={(event) => {\n              console.log(showMutText);\n              setShowMutText(!showMutText);\n            }}\n          />\n          <div className=\"text-sm text-gray-500 p-5\">\n            Mutations are only shown at nodes with at least 10 descendant\n            genomes\n          </div>\n        </div>\n      )}\n      {configMode === \"colour\" && (\n        <div className=\"border-b border-gray-300 pb-3\">\n          <h2 className=\"text-xl mt-5 mb-4 text-gray-700\">\n            <button\n              onClick={() => setConfigMode(\"other\")}\n              className=\"float-right mr-5 block bg-gray-100 text-sm mx-auto p-1 rounded border-gray-300 border m-5 text-gray-700\"\n            >\n              <IoMdSettings className=\"inline-block mr-1 ml-1\" />\n            </button>\n            <BiPalette className=\"inline-block mr-2\" />\n            Colour by{\" \"}\n          </h2>\n\n          <select\n            className=\"border py-2 px-3 text-grey-darkest\"\n            value={colourBy.variable}\n            onChange={(event) =>\n              setColourBy({ ...colourBy, variable: event.target.value })\n            }\n          >\n            <option value=\"lineage\">Lineage</option>\n            <option value=\"country\">Country</option>\n            <option value=\"aa\">Amino acid at site</option>\n            <option value=\"none\">None</option>\n          </select>\n          {colourBy.variable === \"aa\" && (\n            <div\n              className=\"\n     p-2 m-1 ml-0  text-gray-700\"\n            >\n              {\" \"}\n              <label className=\"text-sm\">Gene</label>\n              <select\n                className=\"border py-1 px-1 text-grey-darkest text-sm h-7 w-20 m-3 my-1\"\n                value={colourBy.gene}\n                onChange={(event) =>\n                  setColourBy({ ...colourBy, gene: event.target.value })\n                }\n              >\n                {data.all_genes &&\n                  data.all_genes.map((x) => (\n                    <option key={x} value={x}>\n                      {x}\n                    </option>\n                  ))}\n              </select>\n              <div>\n                <label className=\"text-sm\">Residue</label>{\" \"}\n                <DebounceInput\n                  debounceTimeout={300}\n                  type=\"number\"\n                  value={colourBy.residue}\n                  onChange={(event) =>\n                    setColourBy({ ...colourBy, residue: event.target.value })\n                  }\n                  className=\"border py-1 px-1 text-grey-darkest text-sm h-7 w-16 m-3 my-1\"\n                />\n              </div>\n              <div className=\"hidden\">\n                Colour lines{\" \"}\n                <input\n                  type=\"checkbox\"\n                  value={colourBy.colourLines}\n                  onChange={(event) =>\n                    setColourBy({\n                      ...colourBy,\n                      colourLines: event.target.value,\n                    })\n                  }\n                ></input>\n              </div>\n            </div>\n          )}\n        </div>\n      )}\n\n      <div>\n        {selectedNode && (\n          <div className=\"text-gray-500 mr-3\">\n            <h2 className=\"text-xl mt-5 mb-4 text-gray-700\">\n              <BsInfoCircle className=\"inline-block mr-2\" />\n              Node info\n            </h2>\n\n            <div className=\"font-bold\">\n              {node_data.names[selectedNode] ? (\n                node_data.names[selectedNode]\n              ) : (\n                <>Un-named internal node</>\n              )}\n            </div>\n            {cur_genbank && (\n              <div>\n                <span className=\"font-semibold\">Genbank:</span>{\" \"}\n                <a\n                  target=\"_blank\"\n                  rel=\"noreferrer\"\n                  className=\"underline\"\n                  href={\"https://www.ncbi.nlm.nih.gov/nuccore/\" + cur_genbank}\n                >\n                  {cur_genbank}\n                </a>\n              </div>\n            )}\n            <div>\n              {false && cur_epi_isl && (\n                <>\n                  <span className=\"font-semibold\">GISAID:</span> {cur_epi_isl}\n                </>\n              )}\n            </div>\n            <div>\n              <span className=\"font-semibold\">Date:</span>{\" \"}\n              {data.date_mapping[node_data.dates[selectedNode]]}\n            </div>\n            <div>\n              <span className=\"font-semibold\">Lineage:</span>{\" \"}\n              <a\n                className=\"underline\"\n                target=\"_blank\"\n                rel=\"noreferrer\"\n                href={\n                  \"https://outbreak.info/situation-reports?pango=\" +\n                  data.lineage_mapping[node_data.lineages[selectedNode]]\n                }\n              >\n                {data.lineage_mapping[node_data.lineages[selectedNode]]}\n              </a>\n            </div>\n            <div>\n              <span className=\"font-semibold\">Country:</span>{\" \"}\n              {data.country_mapping[node_data.countries[selectedNode]]}\n            </div>\n            <span className=\"font-semibold\">Mutations from root:</span>\n            <div className=\"text-xs mr-5 mb-3\">\n              {\n                selected_muts && selected_muts.join(\", \") //TODO assign the top thing to a constant and use it again\n              }\n            </div>\n            {false && acknowledgements && (\n              <div>\n                {\" \"}\n                <span className=\"font-semibold\">Acknowledgements</span>\n                <div className=\"text-xs mr-5 \">\n                  <b>Originating lab:</b> {acknowledgements.covv_orig_lab}\n                  <br />\n                  <b>Submitting lab:</b> {acknowledgements.covv_subm_lab}\n                  <br />\n                  <b>Authors:</b> {acknowledgements.covv_authors}\n                </div>\n              </div>\n            )}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default SearchPanel;\n","import React from \"react\";\n\nfunction AboutOverlay({ enabled, setEnabled }) {\n  return (\n    <div className={`w-full ${enabled ? \"\" : \"hidden\"}`}>\n      <div\n        onClick={() => setEnabled(false)}\n        className=\"fixed w-full h-full bg-black opacity-80 z-40\"\n      >\n        </div>\n        <div\n        onClick={() => setEnabled(false)}\n        className=\"fixed w-full h-full  opacity-100 z-40\"\n      >\n       \n      <div className=\" relative mx-auto mt-5 p-5 bg-white shadow-md z-100 w-4/5 overflow-y-auto opacity-100 \" style={{height:\"90vh\"}}>\n        <button\n          className=\"absolute top-5 right-5 text-xl font-bold\"\n          onClick={() => setEnabled(false)}\n        >\n          X\n        </button>\n        <h1 className=\"font-bold mb-3 text-xl\">About Cov2Tree</h1>\n        This website allows you to explore a phylogenetic tree with more than a\n        million SARS-Cov-2 sequences, sequenced by researchers around the world.\n        The interface was made by{\" \"}\n        <a className=\"text-blue-700 underline\" href=\"http://theo.io/\">\n          Theo Sanderson\n        </a>{\" \"}\n        using a custom-developed open-source library called{\" \"}\n        <a\n          href=\"http://github.com/theosanderson/taxodium\"\n          className=\"text-blue-700 underline\"\n        >\n          {\" \"}\n          Taxodium\n        </a>\n        .<h1 className=\"font-bold mb-3 text-xl mt-6\">The sequences</h1>\n        <p>\n          This tree displays sequences generated by scientists all over the\n          world. The sequences are sourced from GenBank (i.e. the INSDC\n          databases), the China National Center for Bioinformation, and from\n          COG-UK. They are collated{\" \"}\n          <a\n            className=\"text-blue-700 underline\"\n            href=\"http://hgdownload.soe.ucsc.edu/goldenPath/wuhCor1/UShER_SARS-CoV-2//\"\n          >\n            here\n          </a>{\" \"}\n          by Angie Hinrichs and others at UCSC.\n        </p>\n        <p>\n          This website would be empty but for the hard work of all these\n          researchers, and their openness in submitting their work to public\n          databases, and we gratefully acknowledge this.\n        </p>\n        <h1 className=\"font-bold mb-3 text-xl mt-6\">The tree</h1>\n        <p>\n          The tree shown here is produced by the UCSC team, and made available{\" \"}\n          <a\n            className=\"text-blue-700 underline\"\n            href=\"http://hgdownload.soe.ucsc.edu/goldenPath/wuhCor1/UShER_SARS-CoV-2//\"\n          >\n            here\n          </a>\n          . It is derived from releases of Rob Lanfear's{\" \"}\n          <a\n            className=\"text-blue-700 underline\"\n            href=\"https://github.com/roblanf/sarscov2phylo\"\n          >\n            sarscov2phylo\n          </a>\n          , pruned to include only public sequences aggregated from GenBank,\n          COG-UK, and the China National Center for Bioinformation. The tree has\n          been re-rooted to Wuhan/Hu-1 (GenBank MN908947.3, RefSeq NC_045512.2),\n          and nodes with no associated mutations have been collapsed. Sequences\n          released after the final sarscov2phylo release (Nov. 13, 2020) have\n          been added to the tree using{\" \"}\n          <a\n            className=\"text-blue-700 underline\"\n            href=\"https://github.com/yatisht/usher\"\n          >\n            UShER\n          </a>\n          , developed by Yatish Turakhia. UShER development and tree inference\n          was done in Russ Corbett-Detig and David Haussler's groups at the UCSC\n          Genomics Institute. It is described here only for completeness. UCSC\n          provide metadata with the sequences, including lineages called by{\" \"}\n          <a\n            className=\"text-blue-700 underline\"\n            href=\"https://www.pango.network/\"\n          >\n            Pangolin\n          </a>\n          .\n        </p>\n        <h1 className=\"font-bold mb-3 text-xl mt-4\">Citations</h1>\n        <div className=\"text-sm\">\n        <p>\n          Lanfear, Rob (2020). A global phylogeny of SARS-CoV-2 sequences from\n          GISAID. Zenodo DOI: 10.5281/zenodo.3958883\n        </p>\n        <p>\n          Turakhia et al. (2021). Ultrafast Sample Placement on Existing Trees\n          (UShER) Empowers Real-Time Phylogenetics for the SARS-CoV-2 Pandemic.\n        </p>\n        <p>\n          Rambaut et al. (2020). A dynamic nomenclature proposal for SARS-CoV-2\n          lineages to assist genomic epidemiology.\n        </p></div>\n        <h1 className=\"font-bold mb-3 text-xl mt-4\">Related tools</h1>\n        <div className=\"text-sm\">\n        <p>\n          You can also explore large phylogenies using{\" \"}\n          <a className=\"text-blue-700 underline\" href=\"https://pando.tools\">\n            Pando\n          </a>\n          ,{\" \"}\n          <a className=\"text-blue-700 underline\" href=\"https://microreact.org/\">\n            Microreact\n          </a>\n          , and sampled phylogenies on{\" \"}\n          <a className=\"text-blue-700 underline\" href=\"https://nextstrain.org/\">\n            NextStrain\n          </a>\n          .\n        </p></div>\n      </div>\n       {\" \"}\n      </div>\n    </div>\n  );\n}\n\nexport default AboutOverlay;\n","// https://github.com/baruchiro/use-route-as-state\n// (via @richardgoater)\n\nimport { useCallback, useMemo, useEffect, useRef } from \"react\";\nimport { useHistory, useLocation } from \"react-router-dom\";\n\nconst queryParamsToObject = (search) => {\n  const params = {};\n  new URLSearchParams(search).forEach((value, key) => {\n    params[key] = value;\n  });\n  return params;\n};\n\nconst objectToQueryParams = (obj) =>\n  \"?\" +\n  Object.keys(obj)\n    .filter((key) => obj[key] !== undefined)\n    .map((key) => `${key}=${obj[key]}`)\n    .join(\"&\");\n\nconst encodeValues = (obj) => {\n  const nextObj = {};\n  for (const [key, value] of Object.entries(obj)) {\n    if (value !== undefined) {\n      nextObj[key] = encodeURIComponent(value);\n    }\n  }\n  return nextObj;\n};\n\nconst removeUndefined = (obj) => {\n  const nextObj = {};\n  for (const [key, value] of Object.entries(obj)) {\n    if (value !== undefined) {\n      nextObj[key] = value;\n    }\n  }\n  return nextObj;\n};\n\nconst useQueryAsState = (defaultValues) => {\n  const history = useHistory();\n  const { pathname, search } = useLocation();\n\n  const decodedSearch = useMemo(() => queryParamsToObject(search), [search]);\n\n  const updateRef = useRef({ decodedSearch, pathname });\n  useEffect(() => {\n    updateRef.current = { decodedSearch, pathname };\n  }, [decodedSearch, pathname]);\n\n  const updateQuery = useCallback(\n    (updatedParams, method = \"push\") => {\n      const { pathname, decodedSearch } = updateRef.current;\n      history[method](\n        pathname +\n          objectToQueryParams(\n            encodeValues({ ...decodedSearch, ...updatedParams })\n          )\n      );\n    },\n    [history]\n  );\n\n  const queryWithDefault = useMemo(\n    () => Object.assign({}, defaultValues, removeUndefined(decodedSearch)),\n    [decodedSearch, defaultValues]\n  );\n\n  return [queryWithDefault, updateQuery];\n};\n\nexport default useQueryAsState;\n","import \"./App.css\";\nimport React, { useEffect, useState, useCallback, useMemo } from \"react\";\nimport Deck from \"./Deck\";\nimport SearchPanel from \"./components/SearchPanel\";\nimport axios from \"axios\";\nimport AboutOverlay from \"./components/AboutOverlay\";\n\nimport { CgListTree } from \"react-icons/cg\";\n//import {FaGithub} from  \"react-icons/fa\";\nimport useQueryAsState from \"./hooks/useQueryAsState\";\nimport { BsInfoSquare } from \"react-icons/bs\";\n\nvar protobuf = require(\"protobufjs\");\nprotobuf.parse.defaults.keepCase = true;\n\nconst searchColors = [\n  [255, 0, 0],\n  [183, 0, 255],\n  [255, 213, 0],\n\n  [0, 0, 255],\n  [0, 255, 255],\n];\n\nfunction App() {\n  const [zoomToSearch, setZoomToSearch] = useState({ index: null });\n  const [showMutText, setShowMutText] = useState(false);\n  console.log(\"M2\", showMutText);\n  const [query, setQuery] = useQueryAsState({\n    search: JSON.stringify([\n      {\n        id: 0.123,\n        category: \"lineage\",\n        value: \"\",\n        enabled: true,\n        aa_final: \"any\",\n        min_tips: 1,\n        aa_gene: \"S\",\n        search_for_ids: \"\",\n      },\n    ]),\n    colourBy: JSON.stringify({\n      variable: \"lineage\",\n      gene: \"S\",\n      colourLines: false,\n      residue: \"681\",\n    }),\n  });\n\n  const searchItems = useMemo(() => JSON.parse(query.search), [query.search]);\n\n  const setSearchItems = useCallback(\n    (search) => {\n      setQuery({ ...query, search: JSON.stringify(search) });\n    },\n    [setQuery, query]\n  );\n\n  const setColourBy = useCallback(\n    (colourBy) => {\n      setQuery({ ...query, colourBy: JSON.stringify(colourBy) });\n    },\n    [setQuery, query]\n  );\n  const colourBy = useMemo(() => JSON.parse(query.colourBy), [query.colourBy]);\n\n  const setColourByWithCheck = useCallback(\n    (x) => {\n      setColourBy(x);\n    },\n    [setColourBy]\n  );\n  const [nodeData, setNodeData] = useState({\n    status: \"not_attempted\",\n    data: { node_data: { ids: [] } },\n  });\n\n  const [selectedNode, setSelectedNode] = useState(null);\n\n  const [aboutEnabled, setAboutEnabled] = useState(false);\n\n  useEffect(() => {\n    if (nodeData.status === \"not_attempted\") {\n      console.log(\"starting dl\");\n      setNodeData({\n        status: \"loading\",\n        progress: 0,\n        data: { node_data: { ids: [] } },\n      });\n\n      protobuf.load(\"./tree.proto\").then(function (root) {\n        axios\n          .get(\"/nodelist.pb\", {\n            responseType: \"arraybuffer\",\n            onDownloadProgress: (progressEvent) => {\n              let percentCompleted = Math.floor(\n                1 * (progressEvent.loaded / 100000000) * 100\n              );\n              setNodeData({\n                status: \"loading\",\n                progress: percentCompleted,\n                data: { node_data: { ids: [] } },\n              });\n            },\n          })\n          .then(function (response) {\n            return response.data;\n          })\n          .then(function (buffer) {\n            console.log(\"buffer loaded\");\n            var NodeList = root.lookupType(\"AllData\");\n\n            var message = NodeList.decode(new Uint8Array(buffer));\n            var result = NodeList.toObject(message);\n            result.node_data.ids = [...Array(result.node_data.x.length).keys()];\n\n            const all_genes = new Set();\n            result.mutation_mapping = result.mutation_mapping.map((x, i) => {\n              const mutation_array = {};\n\n              const [gene, rest] = x.split(\":\");\n              if (rest) {\n                const [orig_res, position, final_res] = rest.split(\"_\");\n                mutation_array.gene = gene;\n                mutation_array.position = position;\n                mutation_array.orig_res = orig_res;\n                mutation_array.final_res = final_res;\n                all_genes.add(gene);\n              }\n              mutation_array.id = i;\n              return mutation_array;\n            });\n\n            result.all_genes = Array.from(all_genes).sort();\n            setNodeData({ status: \"loaded\", data: result });\n          });\n      });\n    }\n  }, [nodeData.status]);\n\n  const data = useMemo(\n    () =>\n      nodeData.status === \"loaded\" ? nodeData.data : { node_data: { ids: [] } },\n    [nodeData]\n  );\n\n  const scatterIds = useMemo(\n    () => data.node_data.ids.filter((x) => data.node_data.names[x] !== \"\"),\n    [data]\n  );\n\n  const [search_configs_initial, numSearchResults, totalSeqs] = useMemo(() => {\n    const configs = searchItems.map((item, counter) => {\n      window.nd = data.node_data;\n      let filter_function;\n      const lowercase_query = item.value.toLowerCase().trim();\n      if (item.category === \"mutation\") {\n        window.mm = data.mutation_mapping;\n        const subset = data.mutation_mapping\n          ? data.mutation_mapping\n              .filter(\n                (x) =>\n                  x.gene === item.aa_gene &&\n                  x.position === item.aa_pos &&\n                  (x.final_res === item.aa_final) | (item.aa_final === \"any\")\n              )\n              .map((x) => x.id)\n          : [];\n        console.log(subset);\n\n        filter_function = (x) =>\n          data.node_data.mutations[x] &&\n          data.node_data.mutations[x].mutation &&\n          subset.filter((i) => data.node_data.mutations[x].mutation.includes(i))\n            .length > 0 &&\n          data.node_data.num_tips[x] >= item.min_tips &&\n          data.node_data.parents[x] !== x;\n      }\n\n      if (item.category === \"name\") {\n        filter_function = (x) =>\n          data.node_data.names[x].toLowerCase().includes(lowercase_query); //TODO precompute lowercase mapping for perf?\n      }\n\n      if (item.category === \"country\") {\n        filter_function = (x) =>\n          data.country_mapping[data.node_data.countries[x]].toLowerCase() ===\n          lowercase_query; //TODO precompute lowercase mapping for perf\n      }\n      if (item.category === \"lineage\") {\n        filter_function = (x) =>\n          data.lineage_mapping[data.node_data.lineages[x]].toLowerCase() ===\n          lowercase_query; //TODO precompute lowercase mapping for perf\n      }\n\n      if (item.category === \"epis\") {\n        console.log(\"EPI\");\n        if (!item.search_for_ids) {\n          filter_function = (x) => false;\n        } else {\n          const the_list = item.search_for_ids\n            .split(\"\\n\")\n            .map((x) => parseInt(x.trim().replace(\"EPI_ISL_\", \"\")))\n            .filter((x) => x !== 0);\n\n          filter_function = (x) =>\n            the_list.includes(data.node_data.epi_isl_numbers[x]);\n        }\n      }\n\n      if (item.category === \"genbanks\") {\n        if (!item.search_for_ids) {\n          filter_function = (x) => false;\n        } else {\n          const the_list = item.search_for_ids\n            .split(\"\\n\")\n            .map((x) => x.trim())\n            .filter((x) => x !== \"\");\n\n          filter_function = (x) =>\n            the_list.includes(data.node_data.genbanks[x]);\n        }\n      }\n\n      const enabled =\n        (item.category === \"mutation\" ||\n          item.category === \"epis\" ||\n          item.category === \"genbanks\" ||\n          (item.value !== null && item.value !== \"\")) &&\n        item.enabled;\n      return {\n        original_index: counter,\n        id: \"main-search-\" + counter,\n        enabled: enabled,\n        data:\n          (item.value !== \"\") |\n          (item.category === \"mutation\" ||\n            item.category === \"epis\" ||\n            item.category === \"genbanks\")\n            ? data.node_data.ids.filter(filter_function)\n            : [],\n        opacity: 0.7,\n        getRadius: 7 + counter * 2,\n        filled: false,\n        stroked: true,\n        radiusUnits: \"pixels\",\n        lineWidthUnits: \"pixels\",\n        lineWidthScale: 1,\n\n        getPosition: (d) => {\n          return [data.node_data.x[d], data.node_data.y[d]];\n        },\n        getFillColor: (d) => [0, 0, 0],\n        getLineColor: (d) => searchColors[counter % searchColors.length],\n      };\n    });\n\n    const num_results = configs.map((x) => x.data.length);\n    const filtered_configs = configs.filter((item) => item.enabled);\n    return [filtered_configs, num_results, scatterIds.length];\n  }, [data, searchItems, scatterIds]);\n\n  return (\n    <>\n      <AboutOverlay enabled={aboutEnabled} setEnabled={setAboutEnabled} />\n\n      <div className=\"h-screen w-screen\">\n        <div className=\"from-gray-500 to-gray-600 bg-gradient-to-bl h-15 shadow-md z-20\">\n          <div className=\"flex justify-between\">\n            <h1 className=\"text-xl p-4  pb-5 text-white \">\n              <CgListTree className=\"inline-block h-8 w-8 pr-2 \" />\n              <span className=\"font-bold\">Cov2Tree</span>:{\" \"}\n              <span className=\"font-light\">\n                interactive SARS-CoV-2 phylogeny{\" \"}\n              </span>\n            </h1>\n            <div className=\"inline-block p-4 pr-0\">\n              <button\n                onClick={() => setAboutEnabled(true)}\n                className=\"mr-5 text-white font-bold hover:underline\"\n              >\n                <BsInfoSquare className=\"inline-block h-7 w-8\" /> About /\n                Acknowledgements\n              </button>\n              {/*<a className=\"text-white\" href=\"https://github.com/theosanderson/taxodium\">\n              <FaGithub className=\"inline-block text-white h-7 w-8\" />\n  </a>*/}\n            </div>\n          </div>\n        </div>\n        <div className=\"main_content\">\n          <div className=\"md:grid md:grid-cols-12 h-full\">\n            <div className=\"md:col-span-8 h-3/6 md:h-full w-full\">\n              <Deck\n                showMutText={showMutText}\n                search_configs_initial={search_configs_initial}\n                scatterIds={scatterIds}\n                searchColors={searchColors}\n                selectedNode={selectedNode}\n                setSelectedNode={setSelectedNode}\n                searchItems={searchItems}\n                data={data}\n                progress={nodeData.progress}\n                colourBy={colourBy}\n                zoomToSearch={zoomToSearch}\n              />\n            </div>\n            <div className=\"md:col-span-4 h-full bg-white  border-gray-600   pl-5 shadow-xl\">\n              <SearchPanel\n                showMutText={showMutText}\n                setShowMutText={setShowMutText}\n                setZoomToSearch={setZoomToSearch}\n                totalSeqs={totalSeqs}\n                numSearchResults={numSearchResults}\n                searchColors={searchColors}\n                selectedNode={selectedNode}\n                searchItems={searchItems}\n                data={data}\n                setSearchItems={setSearchItems}\n                colourBy={colourBy}\n                setColourBy={setColourByWithCheck}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}